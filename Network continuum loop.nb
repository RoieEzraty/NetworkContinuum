(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    670458,      12233]
NotebookOptionsPosition[    615716,      11255]
NotebookOutlinePosition[    662035,      12108]
CellTagsIndexPosition[    661992,      12105]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Network in the Continuum", "Chapter",
 CellChangeTimes->{{3.929516474687932*^9, 
  3.9295164805254197`*^9}},ExpressionUUID->"818c4b2f-791f-46b3-b9aa-\
4caa56f525dc"],

Cell[CellGroupData[{

Cell["dual problem definition", "Subsubsection",
 CellChangeTimes->{
  3.9295164951378713`*^9, {3.929516527619726*^9, 
   3.929516532681116*^9}},ExpressionUUID->"7f2819f1-5d80-42be-beb7-\
ec303290becc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"c", "=", 
    RowBox[{"1", "/", 
     RowBox[{"Sqrt", "[", 
      RowBox[{"1", "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"Grad", "[", 
          RowBox[{
           RowBox[{"pdual", "[", 
            RowBox[{"x", ",", "y"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "y"}], "}"}]}], "]"}], ")"}], "2"]}], "]"}]}]}],
    "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"c", "=", 
      RowBox[{"List", "[", 
       RowBox[{"1", ",", "10"}], "]"}]}], ";"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"opdual", "=", 
    RowBox[{
     RowBox[{"Inactive", "[", "Div", "]"}], "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"c", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"c", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "}"}], ".", 
        RowBox[{
         RowBox[{"Inactive", "[", "Grad", "]"}], "[", 
         RowBox[{
          RowBox[{"pdual", "[", 
           RowBox[{"x", ",", "y"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}], ")"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"op", " ", "=", " ", 
    RowBox[{
     RowBox[{"Inactive", "[", "Div", "]"}], "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", " ", "0"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"0", ",", " ", "1"}], "}"}]}], "}"}], " ", ".", " ", 
        RowBox[{
         RowBox[{"Inactive", "[", "Grad", "]"}], "[", 
         RowBox[{
          RowBox[{"p", "[", 
           RowBox[{"x", ",", " ", "y"}], "]"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"x", ",", " ", "y"}], "}"}]}], "]"}]}], ")"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", " ", "y"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"op", "=", 
      RowBox[{
       RowBox[{"Inactive", "[", "Div", "]"}], "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"sigmaxPoly", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "sigmayPoly"}], "}"}]}], "}"}], ".", 
          RowBox[{
           RowBox[{"Inactive", "[", "Grad", "]"}], "[", 
           RowBox[{
            RowBox[{"p", "[", 
             RowBox[{"x", ",", "y"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}], ")"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}], ";"}], 
    "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.9294991909550977`*^9, 3.929499197390956*^9}, {
   3.929502779436814*^9, 3.9295027866099014`*^9}, {3.9295028330593576`*^9, 
   3.929502860557768*^9}, {3.929502898694337*^9, 3.929502928288565*^9}, {
   3.9295031568975077`*^9, 3.929503168752692*^9}, 3.929503318700514*^9, {
   3.9295033581071053`*^9, 3.9295033847567577`*^9}, 3.929503669188199*^9, {
   3.9295037441673985`*^9, 3.9295037481296597`*^9}, {3.9295037809218426`*^9, 
   3.9295038256442943`*^9}, {3.9295038556488514`*^9, 
   3.9295038557088394`*^9}, {3.929503950020339*^9, 3.9295039554416547`*^9}, {
   3.9295040137679806`*^9, 3.929504016097752*^9}, {3.9295041159551764`*^9, 
   3.929504151254753*^9}, {3.9295042566410065`*^9, 3.929504270125943*^9}, {
   3.9295043279393606`*^9, 3.9295044159586644`*^9}, {3.9295045550582647`*^9, 
   3.9295045867212563`*^9}, {3.929504631713431*^9, 3.929504641032106*^9}, {
   3.929504679185198*^9, 3.929504743450798*^9}, {3.9295047819076214`*^9, 
   3.929504788699732*^9}, {3.9295049367041345`*^9, 3.929504978008297*^9}, {
   3.9295050247773194`*^9, 3.9295050678395205`*^9}, {3.9295051121092033`*^9, 
   3.9295051453712025`*^9}, {3.9295052303166323`*^9, 3.929505242510421*^9}, {
   3.929505282020426*^9, 3.9295052928810596`*^9}, {3.9295053379556675`*^9, 
   3.9295053398755455`*^9}, {3.9295053856254296`*^9, 3.929505397149711*^9}, {
   3.929505513544913*^9, 3.9295055428643503`*^9}, {3.929505850892163*^9, 
   3.929505886209325*^9}, {3.9295059981331005`*^9, 3.929506027584724*^9}, {
   3.929509331182254*^9, 3.9295093704211173`*^9}, 3.929509870303249*^9, 
   3.929509920547615*^9, {3.9295152057310076`*^9, 3.9295152071723304`*^9}, {
   3.929516442687584*^9, 3.929516446387374*^9}, {3.929950184433483*^9, 
   3.9299502136108036`*^9}, {3.9299504861110816`*^9, 
   3.9299504885657296`*^9}, {3.929950999065764*^9, 3.929951001330701*^9}, {
   3.929951334430401*^9, 3.929951338590672*^9}, {3.929951471780794*^9, 
   3.929951474050466*^9}, {3.9299516647906137`*^9, 3.929951667020675*^9}, {
   3.930015296323733*^9, 3.9300153016812553`*^9}, {3.930027715874649*^9, 
   3.930027718694521*^9}, {3.930034342763163*^9, 3.9300343452694016`*^9}, 
   3.9300345450931516`*^9, {3.930034685020151*^9, 3.9300346852400856`*^9}, {
   3.9300354872996535`*^9, 3.9300354902947536`*^9}, {3.930036201551771*^9, 
   3.930036208097702*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"176d6cd6-87a1-44d4-b6e6-55c71576794e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["1", 
    SqrtBox[
     RowBox[{"1", "+", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["pdual", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"x", ",", "y"}], "]"}], "2"]}]]], ",", 
   FractionBox["1", 
    SqrtBox[
     RowBox[{"1", "+", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["pdual", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"x", ",", "y"}], "]"}], "2"]}]]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.92951915887719*^9, 3.9295191890666*^9, 3.9295198563231*^9, 
   3.929519946836713*^9, 3.929528013911416*^9, 3.929528096425491*^9, 
   3.929528210422949*^9, 3.929528274834448*^9, 3.9295285671352406`*^9, {
   3.9295286837174697`*^9, 3.929528708356325*^9}, {3.9295287590859313`*^9, 
   3.929528789083373*^9}, 3.929528873128338*^9, 3.9295290217774878`*^9, 
   3.9295291001402135`*^9, 3.929529397128969*^9, 3.9295296085943556`*^9, 
   3.929530278843833*^9, 3.9295303364297056`*^9, 3.9295780769562874`*^9, 
   3.929578130900167*^9, 3.92957830213811*^9, 3.9295786697285037`*^9, 
   3.9295787203870544`*^9, 3.9295789585489407`*^9, 3.929579086533895*^9, 
   3.929579145735087*^9, 3.929943018426308*^9, 3.9299431193198323`*^9, 
   3.9299432430446835`*^9, 3.929943544277854*^9, 3.929944617369229*^9, {
   3.929950209750993*^9, 3.9299502150308743`*^9}, 3.929950288320777*^9, 
   3.929950489201553*^9, 3.9299510019607286`*^9, 3.9299510439303226`*^9, 
   3.929951131010335*^9, {3.9299513351805563`*^9, 3.9299513580605173`*^9}, 
   3.9299515233303676`*^9, 3.9299516812103434`*^9, 3.929951726370355*^9, 
   3.9299517746800184`*^9, 3.9299519696704063`*^9, 3.929952001240426*^9, 
   3.929952912040329*^9, 3.9299529735099516`*^9, 3.930011000940671*^9, 
   3.930011054840867*^9, 3.930014344082077*^9, 3.930015302501187*^9, 
   3.9300235304819407`*^9, 3.9300271150762205`*^9, 3.930027195080739*^9, 
   3.930027719294486*^9, 3.930030726225977*^9, 3.930031863408619*^9, 
   3.9300339051791687`*^9, 3.930034188655522*^9, 3.9300345105563345`*^9, 
   3.9300345763014765`*^9, 3.930034758630554*^9, 3.930034879273416*^9, 
   3.9300352081133027`*^9, 3.9300357087387743`*^9, 3.9300358482746534`*^9, 
   3.9300359106404533`*^9, {3.9300359967591896`*^9, 3.930036023267582*^9}, 
   3.9300360914545555`*^9, 3.9300361444858494`*^9, {3.930036203496314*^9, 
   3.9300362085976706`*^9}},
 CellLabel->"Out[4]=",ExpressionUUID->"70897580-3d27-49d6-b20f-aff13146816d"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"(", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               FractionBox["1", 
                SqrtBox[
                 RowBox[{"1", "+", 
                   SuperscriptBox[
                    RowBox[{
                    SuperscriptBox["pdual", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"1", ",", "0"}], ")"}], Derivative], 
                    MultilineFunction -> None], "[", 
                    RowBox[{"x", ",", "y"}], "]"}], "2"]}]]], ",", "0"}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{"0", ",", 
               FractionBox["1", 
                SqrtBox[
                 RowBox[{"1", "+", 
                   SuperscriptBox[
                    RowBox[{
                    SuperscriptBox["pdual", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"0", ",", "1"}], ")"}], Derivative], 
                    MultilineFunction -> None], "[", 
                    RowBox[{"x", ",", "y"}], "]"}], "2"]}]]]}], "}"}]}], 
         "}"}], ".", 
       TemplateBox[{
         RowBox[{"pdual", "[", 
           RowBox[{"x", ",", "y"}], "]"}], 
         RowBox[{"{", 
           RowBox[{"x", ",", "y"}], "}"}], "Inactive"}, "InactiveGrad", 
        SyntaxForm -> Del]}], ")"}], 
   RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], "Inactive"},
  "InactiveDiv"]], "Output",
 CellChangeTimes->{
  3.92951915887719*^9, 3.9295191890666*^9, 3.9295198563231*^9, 
   3.929519946836713*^9, 3.929528013911416*^9, 3.929528096425491*^9, 
   3.929528210422949*^9, 3.929528274834448*^9, 3.9295285671352406`*^9, {
   3.9295286837174697`*^9, 3.929528708356325*^9}, {3.9295287590859313`*^9, 
   3.929528789083373*^9}, 3.929528873128338*^9, 3.9295290217774878`*^9, 
   3.9295291001402135`*^9, 3.929529397128969*^9, 3.9295296085943556`*^9, 
   3.929530278843833*^9, 3.9295303364297056`*^9, 3.9295780769562874`*^9, 
   3.929578130900167*^9, 3.92957830213811*^9, 3.9295786697285037`*^9, 
   3.9295787203870544`*^9, 3.9295789585489407`*^9, 3.929579086533895*^9, 
   3.929579145735087*^9, 3.929943018426308*^9, 3.9299431193198323`*^9, 
   3.9299432430446835`*^9, 3.929943544277854*^9, 3.929944617369229*^9, {
   3.929950209750993*^9, 3.9299502150308743`*^9}, 3.929950288320777*^9, 
   3.929950489201553*^9, 3.9299510019607286`*^9, 3.9299510439303226`*^9, 
   3.929951131010335*^9, {3.9299513351805563`*^9, 3.9299513580605173`*^9}, 
   3.9299515233303676`*^9, 3.9299516812103434`*^9, 3.929951726370355*^9, 
   3.9299517746800184`*^9, 3.9299519696704063`*^9, 3.929952001240426*^9, 
   3.929952912040329*^9, 3.9299529735099516`*^9, 3.930011000940671*^9, 
   3.930011054840867*^9, 3.930014344082077*^9, 3.930015302501187*^9, 
   3.9300235304819407`*^9, 3.9300271150762205`*^9, 3.930027195080739*^9, 
   3.930027719294486*^9, 3.930030726225977*^9, 3.930031863408619*^9, 
   3.9300339051791687`*^9, 3.930034188655522*^9, 3.9300345105563345`*^9, 
   3.9300345763014765`*^9, 3.930034758630554*^9, 3.930034879273416*^9, 
   3.9300352081133027`*^9, 3.9300357087387743`*^9, 3.9300358482746534`*^9, 
   3.9300359106404533`*^9, {3.9300359967591896`*^9, 3.930036023267582*^9}, 
   3.9300360914545555`*^9, 3.9300361444858494`*^9, {3.930036203496314*^9, 
   3.9300362086176677`*^9}},
 CellLabel->"Out[5]=",ExpressionUUID->"c29b5a20-9b83-4384-8644-ee56d8715bda"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"(", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"1", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ".", 
       TemplateBox[{
         RowBox[{"p", "[", 
           RowBox[{"x", ",", "y"}], "]"}], 
         RowBox[{"{", 
           RowBox[{"x", ",", "y"}], "}"}], "Inactive"}, "InactiveGrad", 
        SyntaxForm -> Del]}], ")"}], 
   RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], "Inactive"},
  "InactiveDiv"]], "Output",
 CellChangeTimes->{
  3.92951915887719*^9, 3.9295191890666*^9, 3.9295198563231*^9, 
   3.929519946836713*^9, 3.929528013911416*^9, 3.929528096425491*^9, 
   3.929528210422949*^9, 3.929528274834448*^9, 3.9295285671352406`*^9, {
   3.9295286837174697`*^9, 3.929528708356325*^9}, {3.9295287590859313`*^9, 
   3.929528789083373*^9}, 3.929528873128338*^9, 3.9295290217774878`*^9, 
   3.9295291001402135`*^9, 3.929529397128969*^9, 3.9295296085943556`*^9, 
   3.929530278843833*^9, 3.9295303364297056`*^9, 3.9295780769562874`*^9, 
   3.929578130900167*^9, 3.92957830213811*^9, 3.9295786697285037`*^9, 
   3.9295787203870544`*^9, 3.9295789585489407`*^9, 3.929579086533895*^9, 
   3.929579145735087*^9, 3.929943018426308*^9, 3.9299431193198323`*^9, 
   3.9299432430446835`*^9, 3.929943544277854*^9, 3.929944617369229*^9, {
   3.929950209750993*^9, 3.9299502150308743`*^9}, 3.929950288320777*^9, 
   3.929950489201553*^9, 3.9299510019607286`*^9, 3.9299510439303226`*^9, 
   3.929951131010335*^9, {3.9299513351805563`*^9, 3.9299513580605173`*^9}, 
   3.9299515233303676`*^9, 3.9299516812103434`*^9, 3.929951726370355*^9, 
   3.9299517746800184`*^9, 3.9299519696704063`*^9, 3.929952001240426*^9, 
   3.929952912040329*^9, 3.9299529735099516`*^9, 3.930011000940671*^9, 
   3.930011054840867*^9, 3.930014344082077*^9, 3.930015302501187*^9, 
   3.9300235304819407`*^9, 3.9300271150762205`*^9, 3.930027195080739*^9, 
   3.930027719294486*^9, 3.930030726225977*^9, 3.930031863408619*^9, 
   3.9300339051791687`*^9, 3.930034188655522*^9, 3.9300345105563345`*^9, 
   3.9300345763014765`*^9, 3.930034758630554*^9, 3.930034879273416*^9, 
   3.9300352081133027`*^9, 3.9300357087387743`*^9, 3.9300358482746534`*^9, 
   3.9300359106404533`*^9, {3.9300359967591896`*^9, 3.930036023267582*^9}, 
   3.9300360914545555`*^9, 3.9300361444858494`*^9, {3.930036203496314*^9, 
   3.9300362086376743`*^9}},
 CellLabel->"Out[6]=",ExpressionUUID->"c5f20988-b90e-4228-8863-86f43cdd0e77"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Geometry definition", "Subsubsection",
 CellChangeTimes->{{3.929516539622249*^9, 
  3.929516542552112*^9}},ExpressionUUID->"d8593d58-c90b-472a-a043-\
20a0d78cf9c7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"r", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"in", "=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x", "+", "1"}], ")"}], "^", "2"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"y", "+", "1"}], ")"}], "^", "2"}]}], "<=", 
     RowBox[{"r", "^", "2"}]}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ground", " ", "=", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x", "-", "1"}], ")"}], "^", "2"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"y", "-", "1"}], ")"}], "^", "2"}]}], "<=", 
     RowBox[{"r", "^", "2"}]}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"X", " ", "=", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x", "+", "1"}], ")"}], "^", "2"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"y", "-", "1"}], ")"}], "^", "2"}]}], "<=", 
     RowBox[{"r", "^", "2"}]}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Y", " ", "=", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x", "-", "1"}], ")"}], "^", "2"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"y", "+", "1"}], ")"}], "^", "2"}]}], "<=", 
     RowBox[{"r", "^", "2"}]}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalOmega]dual", "=", 
   RowBox[{"ImplicitRegion", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"!", "\[IndentingNewLine]", "X"}], "&&", 
      RowBox[{"!", "Y"}], "&&", 
      RowBox[{"!", "in"}], " ", "&&", 
      RowBox[{"!", "ground"}]}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", 
         RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalOmega]", "=", 
   RowBox[{"ImplicitRegion", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"!", "in"}], " ", "&&", 
      RowBox[{"!", "ground"}]}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", 
         RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.9295007408313284`*^9, 3.9295007797760425`*^9}, {
   3.9295008337303867`*^9, 3.929500863925886*^9}, {3.929500908528099*^9, 
   3.929501050807297*^9}, {3.929502228019032*^9, 3.9295023295016985`*^9}, {
   3.9295026984002533`*^9, 3.92950270090333*^9}, {3.9295028125950336`*^9, 
   3.92950281820632*^9}, {3.9295032298622694`*^9, 3.92950323897561*^9}, 
   3.9295036413151116`*^9, 3.929504674767993*^9, {3.9295054388201976`*^9, 
   3.929505470502794*^9}, {3.929505568130824*^9, 3.929505594564581*^9}, 
   3.929505834465349*^9, {3.9295096088521404`*^9, 3.929509610971942*^9}, {
   3.929516455914254*^9, 3.929516461075597*^9}, {3.92951964767144*^9, 
   3.929519664018374*^9}, 3.9299431026044044`*^9, 3.929944614057065*^9, {
   3.929950240405599*^9, 3.929950265387006*^9}, {3.929950325001111*^9, 
   3.9299503273409653`*^9}, {3.92995036410069*^9, 3.929950393651044*^9}, {
   3.929950630521001*^9, 3.929950633230708*^9}, {3.929950946550821*^9, 
   3.929950955620566*^9}, 3.9299511062206335`*^9, 3.929951160570463*^9, 
   3.9299514455553293`*^9, {3.9299519060201445`*^9, 3.9299519212404556`*^9}, 
   3.930014341660534*^9},
 CellLabel->"In[7]:=",ExpressionUUID->"2329cadc-9b50-450e-838c-ac5fddee909d"],

Cell[CellGroupData[{

Cell[BoxData[{"\[CapitalOmega]dual", "\[IndentingNewLine]", \
"\[CapitalOmega]"}], "Input",
 CellChangeTimes->{{3.929951312720433*^9, 3.9299513150005603`*^9}, {
  3.929951913950237*^9, 3.929951917350343*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"876ed925-8d3b-45b9-b892-b4d0aceb30b1"],

Cell[BoxData[
 RowBox[{"ImplicitRegion", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", "x"}], ")"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "y"}], ")"}], "2"]}], ">", 
     "0.010000000000000002`"}], "&&", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "x"}], ")"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", "y"}], ")"}], "2"]}], ">", 
     "0.010000000000000002`"}], "&&", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", "x"}], ")"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", "y"}], ")"}], "2"]}], ">", 
     "0.010000000000000002`"}], "&&", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "x"}], ")"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "y"}], ")"}], "2"]}], ">", 
     "0.010000000000000002`"}], "&&", 
    RowBox[{
     RowBox[{"-", "2"}], "\[LessEqual]", "x", "\[LessEqual]", "2"}], "&&", 
    RowBox[{
     RowBox[{"-", "2"}], "\[LessEqual]", "y", "\[LessEqual]", "2"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.929951317580536*^9, 3.9299513607404127`*^9, 3.9299515262152805`*^9, 
   3.929951681610469*^9, 3.929951726690362*^9, 3.929951777650564*^9, 
   3.929951925250088*^9, 3.9299519701302185`*^9, 3.9299520041204653`*^9, 
   3.9300110050220547`*^9, 3.9300110576407213`*^9, 3.9300143471618977`*^9, 
   3.9300277239690533`*^9, 3.9300339082214375`*^9, 3.9300345110763025`*^9, 
   3.9300345805928364`*^9, 3.930034778104241*^9, 3.930034883455808*^9, 
   3.9300352123523335`*^9, 3.9300357116103783`*^9, 3.9300359108904414`*^9, {
   3.930035997219157*^9, 3.9300360236475105`*^9}, 3.9300360919345284`*^9, 
   3.9300361448958254`*^9, 3.930036211638542*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"4e47dbc1-daaf-4528-982f-9d4d6180a68f"],

Cell[BoxData[
 RowBox[{"ImplicitRegion", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", "x"}], ")"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", "y"}], ")"}], "2"]}], ">", 
     "0.010000000000000002`"}], "&&", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "x"}], ")"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "y"}], ")"}], "2"]}], ">", 
     "0.010000000000000002`"}], "&&", 
    RowBox[{
     RowBox[{"-", "2"}], "\[LessEqual]", "x", "\[LessEqual]", "2"}], "&&", 
    RowBox[{
     RowBox[{"-", "2"}], "\[LessEqual]", "y", "\[LessEqual]", "2"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.929951317580536*^9, 3.9299513607404127`*^9, 3.9299515262152805`*^9, 
   3.929951681610469*^9, 3.929951726690362*^9, 3.929951777650564*^9, 
   3.929951925250088*^9, 3.9299519701302185`*^9, 3.9299520041204653`*^9, 
   3.9300110050220547`*^9, 3.9300110576407213`*^9, 3.9300143471618977`*^9, 
   3.9300277239690533`*^9, 3.9300339082214375`*^9, 3.9300345110763025`*^9, 
   3.9300345805928364`*^9, 3.930034778104241*^9, 3.930034883455808*^9, 
   3.9300352123523335`*^9, 3.9300357116103783`*^9, 3.9300359108904414`*^9, {
   3.930035997219157*^9, 3.9300360236475105`*^9}, 3.9300360919345284`*^9, 
   3.9300361448958254`*^9, 3.930036211648538*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"b35dcef2-59b6-4b77-b430-ddc578b719bb"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Neumann BCs measurement", "Subsubsection",
 CellChangeTimes->{{3.929516550073169*^9, 3.929516557623625*^9}, {
  3.9300355118199415`*^9, 
  3.9300355130297976`*^9}},ExpressionUUID->"3c460d00-19b1-4c0d-8df9-\
5b89fe7b89b8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["\[CapitalGamma]", "N"], "=", 
   RowBox[{"NeumannValue", "[", 
    RowBox[{"0", " ", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x", "==", "2"}], ",", 
       RowBox[{"y", "==", "2"}], ",", 
       RowBox[{"x", "==", 
        RowBox[{"-", "2"}]}], ",", 
       RowBox[{"y", "==", 
        RowBox[{"-", "2"}]}]}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9294994668170033`*^9, 3.9294995142011747`*^9}, {
   3.929499633755769*^9, 3.9294996916847486`*^9}, {3.9294997607146783`*^9, 
   3.9294997610146112`*^9}, {3.929500033856673*^9, 3.92950009103852*^9}, {
   3.9295001434778504`*^9, 3.929500172385523*^9}, {3.9295002345265365`*^9, 
   3.9295002783276167`*^9}, 3.9295003286610546`*^9, {3.9295003942203865`*^9, 
   3.9295005557108717`*^9}, {3.9295010699220114`*^9, 3.929501077233324*^9}, 
   3.9295011163299685`*^9, {3.9295011778146696`*^9, 3.9295012020109015`*^9}, {
   3.9295021083533*^9, 3.9295021096950874`*^9}, 3.9295021419495*^9, 
   3.92950219856223*^9, {3.9295023730893755`*^9, 3.929502381210001*^9}, {
   3.9295024404214697`*^9, 3.929502525309042*^9}, {3.9295026023010416`*^9, 
   3.9295026294261527`*^9}, {3.929504497537858*^9, 3.9295045056932535`*^9}, {
   3.929505612309729*^9, 3.9295056130613766`*^9}, 3.929508958924095*^9, {
   3.929509400298564*^9, 3.9295094851844482`*^9}, {3.9295166321821423`*^9, 
   3.9295166839594784`*^9}, {3.9295781413259945`*^9, 3.9295781441906643`*^9}, 
   3.9295790201206274`*^9, 3.9295790687691813`*^9, {3.9295791690741634`*^9, 
   3.9295792000153246`*^9}, {3.930010991578074*^9, 3.930010993039576*^9}, {
   3.9300355046785474`*^9, 3.93003550924009*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"e595fe43-5424-4430-a9ed-b97d97827b35"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Functions", "Subsubsection",
 CellChangeTimes->{{3.9295186590232887`*^9, 
  3.929518660065057*^9}},ExpressionUUID->"adb4241c-94dc-43fe-87e3-\
6f4858a2927e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ErrorFunc", "[", 
   RowBox[{"A_", ",", "B_", ",", "px_", ",", "py_"}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"A", "-", "px"}], ",", 
    RowBox[{"B", "-", "py"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"InpNew", "[", 
   RowBox[{"InpOld_", ",", "\[Alpha]_", ",", "Error_"}], "]"}], ":=", 
  RowBox[{"InpOld", "-", 
   RowBox[{"\[Alpha]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Error", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "+", 
      RowBox[{"Error", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ")"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xpNew", "[", 
   RowBox[{"xpOld_", ",", "\[Alpha]_", ",", "Error_"}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"xpOld", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "+", 
     RowBox[{"\[Alpha]", 
      RowBox[{"(", 
       RowBox[{"Error", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ")"}]}]}], ",", 
    RowBox[{
     RowBox[{"xpOld", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "+", 
     RowBox[{"\[Alpha]", 
      RowBox[{"(", 
       RowBox[{"Error", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ")"}]}]}]}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.929518961793748*^9, 3.929518962133666*^9}, 
   3.9295190126227846`*^9},
 CellLabel->"In[17]:=",ExpressionUUID->"922e57be-d543-4e20-a330-e8c65d0fd54f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Loop", "Subsection",
 CellChangeTimes->{{3.929516568034293*^9, 
  3.9295165711658945`*^9}},ExpressionUUID->"80c7c21a-687b-45f0-a5da-\
434042ee53f7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Iterate", " ", "to", " ", "solve", " ", "for", " ", "p_dual", " ", 
    "multiple", " ", "times"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"iterations", "=", "5"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"pduals", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", "iterations", "}"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"pduals", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "=", "pdual0"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      SubscriptBox["Inp", "dual"], "=", "1.039"}], ";"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Inpdual", "=", "1.0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      SubscriptBox["xp", "dual"], "=", 
      RowBox[{"{", 
       RowBox[{"0.2", ",", "0.23"}], "}"}]}], ";"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xpdual", "=", 
     RowBox[{"{", 
      RowBox[{"0.2", ",", "0.8"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Error", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.069"}], ",", "0.030"}], "}"}]}], ";"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Error", "=", 
     RowBox[{"{", 
      RowBox[{"0.0", ",", "0.0"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"InpLst", "=", 
     RowBox[{"{", "Inpdual", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xpLst", "=", 
     RowBox[{"{", "xpdual", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ErrorLst", "=", 
     RowBox[{"{", "Error", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Alpha]", "=", "1.0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"A", "=", "0.25"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"B", "=", "0.35"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.929516582675395*^9, 3.9295165899175863`*^9}, 
   3.9295187332835464`*^9, {3.9295187689417887`*^9, 3.9295188800536957`*^9}, {
   3.9295189189926577`*^9, 3.9295189491111946`*^9}, {3.929518982767331*^9, 
   3.9295190868854275`*^9}, {3.9295198733323245`*^9, 3.9295198795177493`*^9}, 
   3.9295281089123297`*^9, {3.9295290769634*^9, 3.929529085984646*^9}, {
   3.929529346513273*^9, 3.929529393457777*^9}, {3.929529496236206*^9, 
   3.9295295499972043`*^9}, {3.9295789245153666`*^9, 
   3.9295789539775844`*^9}, {3.9299432098343763`*^9, 3.929943210834672*^9}, {
   3.9299504381305285`*^9, 3.929950441426682*^9}, {3.930034357474291*^9, 
   3.9300343642502813`*^9}, {3.9300345573539867`*^9, 3.9300345677704334`*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"6cf15ba8-e3f3-4caf-a228-7726bb977484"],

Cell[CellGroupData[{

Cell[BoxData["ErrorLst"], "Input",
 CellChangeTimes->{{3.929527955264819*^9, 3.92952796631765*^9}, 
   3.9295280597738743`*^9},
 CellLabel->"In[28]:=",ExpressionUUID->"6df9a3f4-15ae-4d22-a877-72ad611300e5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"0.`", ",", "0.`"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.929527957014656*^9, 3.929527966727599*^9}, 
   3.929528014201398*^9, {3.929528055894124*^9, 3.929528060283842*^9}, 
   3.9295281118821363`*^9, 3.9295282108429193`*^9, 3.929528275134428*^9, 
   3.9295285674852037`*^9, {3.929528683887428*^9, 3.9295287087450294`*^9}, 
   3.9295287592759185`*^9, 3.9295287895133295`*^9, 3.9295288828117933`*^9, 
   3.929529022237424*^9, 3.9295291101727576`*^9, 3.929529407300759*^9, 
   3.929529558222723*^9, 3.929529617765449*^9, 3.929530279123865*^9, 
   3.929578077506257*^9, 3.929578720567034*^9, 3.929943057914323*^9, 
   3.9299432434546375`*^9, 3.929950335760913*^9, 3.9299503712760663`*^9, 
   3.9299516817054567`*^9, 3.929951726780297*^9, 3.9299517890804605`*^9, 
   3.929951970226401*^9, 3.9299520106502934`*^9, 3.930034511166298*^9, 
   3.9300345883039994`*^9, 3.9300357174400043`*^9, 3.930035910980417*^9, {
   3.9300359973191504`*^9, 3.9300360237175517`*^9}, 3.930036092044516*^9, 
   3.9300361450158176`*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"492a0fff-25d4-450d-b5a2-9713cec0d8ca"]
}, Open  ]],

Cell[CellGroupData[{

Cell["BCs dual", "Subsubsection",
 CellChangeTimes->{{3.9295165987207355`*^9, 
  3.9295166015405426`*^9}},ExpressionUUID->"6055696c-0d42-4cdc-a502-\
6cc6f5c09cca"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Inpdual", "=", 
    RowBox[{"InpNew", "[", 
     RowBox[{
      RowBox[{"InpLst", "[", 
       RowBox[{"[", 
        RowBox[{"-", "1"}], "]"}], "]"}], ",", "\[Alpha]", ",", 
      RowBox[{"ErrorLst", "[", 
       RowBox[{"[", 
        RowBox[{"-", "1"}], "]"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"xpdual", "=", 
    RowBox[{"xpNew", "[", 
     RowBox[{
      RowBox[{"xpLst", "[", 
       RowBox[{"[", 
        RowBox[{"-", "1"}], "]"}], "]"}], ",", "\[Alpha]", ",", 
      RowBox[{"ErrorLst", "[", 
       RowBox[{"[", 
        RowBox[{"-", "1"}], "]"}], "]"}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.929518674527135*^9, 3.929518709518431*^9}, {
   3.929518739784622*^9, 3.929518766261963*^9}, {3.9295190912879124`*^9, 
   3.929519091917804*^9}, {3.9295279384737215`*^9, 3.9295279881514263`*^9}, {
   3.9295280362456007`*^9, 3.929528036935568*^9}, {3.929530229926769*^9, 
   3.9295302309966707`*^9}, 3.929530319974881*^9, {3.9300343723539085`*^9, 
   3.930034377289443*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"065cd602-57fb-420c-b9f9-f6b6ec0f52c6"],

Cell[BoxData["1.`"], "Output",
 CellChangeTimes->{
  3.9295780775462575`*^9, 3.9295781575411654`*^9, 3.9295783131607437`*^9, 
   3.9295786772222166`*^9, 3.9295787206070356`*^9, 3.9295789658501062`*^9, 
   3.9295790243880215`*^9, {3.929579076390416*^9, 3.9295790948058844`*^9}, {
   3.9295791544878197`*^9, 3.929579206116495*^9}, 3.929943060099408*^9, 
   3.929943127904756*^9, {3.9299432164595084`*^9, 3.929943243489293*^9}, 
   3.9299435552946053`*^9, 3.9299446280574555`*^9, 3.9299502229107*^9, {
   3.929950253995826*^9, 3.929950295015821*^9}, 3.9299503382009945`*^9, {
   3.9299503731010094`*^9, 3.9299504011508102`*^9}, 3.9299504441542196`*^9, 
   3.9299504978309703`*^9, 3.9299510101426415`*^9, 3.9299510531208487`*^9, 
   3.9299511417805777`*^9, 3.9299513756606092`*^9, 3.9299515334402485`*^9, 
   3.9299516817585382`*^9, 3.9299517268201475`*^9, 3.929951790645862*^9, 
   3.929951970290455*^9, 3.9299520121503735`*^9, 3.929952919269781*^9, 
   3.9299529814100575`*^9, 3.930011012053318*^9, 3.9300110691147947`*^9, 
   3.9300143554466705`*^9, 3.93001531320395*^9, 3.930023538184108*^9, 
   3.930027172670143*^9, 3.9300272029977603`*^9, 3.9300277305442257`*^9, 
   3.930030735149703*^9, 3.930031870639288*^9, 3.9300339135887966`*^9, 
   3.9300341959367647`*^9, 3.9300345112862844`*^9, 3.9300345892039223`*^9, 
   3.9300347846955247`*^9, 3.930034888937109*^9, 3.9300352190461845`*^9, 
   3.930035718699921*^9, 3.930035855378536*^9, 3.930035911040429*^9, {
   3.9300359973891463`*^9, 3.9300360237675514`*^9}, 3.930036092104512*^9, 
   3.930036145065817*^9, 3.9300362169598074`*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"f7d14e7b-b853-41e2-8df9-9e6d689b4dd5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.2`", ",", "0.8`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.9295780775462575`*^9, 3.9295781575411654`*^9, 3.9295783131607437`*^9, 
   3.9295786772222166`*^9, 3.9295787206070356`*^9, 3.9295789658501062`*^9, 
   3.9295790243880215`*^9, {3.929579076390416*^9, 3.9295790948058844`*^9}, {
   3.9295791544878197`*^9, 3.929579206116495*^9}, 3.929943060099408*^9, 
   3.929943127904756*^9, {3.9299432164595084`*^9, 3.929943243489293*^9}, 
   3.9299435552946053`*^9, 3.9299446280574555`*^9, 3.9299502229107*^9, {
   3.929950253995826*^9, 3.929950295015821*^9}, 3.9299503382009945`*^9, {
   3.9299503731010094`*^9, 3.9299504011508102`*^9}, 3.9299504441542196`*^9, 
   3.9299504978309703`*^9, 3.9299510101426415`*^9, 3.9299510531208487`*^9, 
   3.9299511417805777`*^9, 3.9299513756606092`*^9, 3.9299515334402485`*^9, 
   3.9299516817585382`*^9, 3.9299517268201475`*^9, 3.929951790645862*^9, 
   3.929951970290455*^9, 3.9299520121503735`*^9, 3.929952919269781*^9, 
   3.9299529814100575`*^9, 3.930011012053318*^9, 3.9300110691147947`*^9, 
   3.9300143554466705`*^9, 3.93001531320395*^9, 3.930023538184108*^9, 
   3.930027172670143*^9, 3.9300272029977603`*^9, 3.9300277305442257`*^9, 
   3.930030735149703*^9, 3.930031870639288*^9, 3.9300339135887966`*^9, 
   3.9300341959367647`*^9, 3.9300345112862844`*^9, 3.9300345892039223`*^9, 
   3.9300347846955247`*^9, 3.930034888937109*^9, 3.9300352190461845`*^9, 
   3.930035718699921*^9, 3.930035855378536*^9, 3.930035911040429*^9, {
   3.9300359973891463`*^9, 3.9300360237675514`*^9}, 3.930036092104512*^9, 
   3.930036145065817*^9, 3.9300362169798064`*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"55282ed9-b405-4f3b-b7c4-3cd4421223e2"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pdualDirichletConds", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"DirichletCondition", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"pdual", "[", 
         RowBox[{"x", ",", "y"}], "]"}], "==", "Inpdual"}], ",", "in"}], 
      "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"DirichletCondition", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"pdual", "[", 
         RowBox[{"x", ",", "y"}], "]"}], "==", "0"}], ",", "ground"}], "]"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"DirichletCondition", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"pdual", "[", 
         RowBox[{"x", ",", "y"}], "]"}], "==", 
        RowBox[{"xpdual", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", "X"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"DirichletCondition", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"pdual", "[", 
         RowBox[{"x", ",", "y"}], "]"}], "==", 
        RowBox[{"xpdual", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ",", "Y"}], "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[CapitalGamma]", 
      RowBox[{"D", ",", "in", ",", "dual"}]], "=", 
     RowBox[{"DirichletCondition", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["p", "dual"], "[", 
         RowBox[{"x", ",", "y"}], "]"}], "==", "1"}], ",", "in"}], "]"}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{
     SubscriptBox["\[CapitalGamma]", 
      RowBox[{"D", ",", "ground", ",", "dual"}]], "=", 
     RowBox[{"DirichletCondition", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["p", "dual"], "[", 
         RowBox[{"x", ",", "y"}], "]"}], "==", "0"}], ",", "ground"}], 
      "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     SubscriptBox["\[CapitalGamma]", 
      RowBox[{"D", ",", "X", ",", "dual"}]], "=", 
     RowBox[{"DirichletCondition", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["p", "dual"], "[", 
         RowBox[{"x", ",", "y"}], "]"}], "==", "0.3"}], ",", "X"}], "]"}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{
     SubscriptBox["\[CapitalGamma]", 
      RowBox[{"D", ",", "Y", ",", "dual"}]], "=", 
     RowBox[{"DirichletCondition", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["p", "dual"], "[", 
         RowBox[{"x", ",", "y"}], "]"}], "==", "0.2"}], ",", "Y"}], "]"}]}], 
    ";"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.9295094919568443`*^9, 3.9295094939467173`*^9}, {
   3.929515599238732*^9, 3.929515600778697*^9}, {3.9295166716252365`*^9, 
   3.929516771959341*^9}, {3.9295168100777717`*^9, 3.9295168339695053`*^9}, {
   3.929518520979495*^9, 3.9295185229192915`*^9}, {3.929519103720416*^9, 
   3.9295191203892994`*^9}, 3.9295192044495063`*^9, 3.9295789128943195`*^9, {
   3.929578968749981*^9, 3.9295790026920443`*^9}, {3.930034386178177*^9, 
   3.9300344038388505`*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"45e82c88-014e-4e71-a94f-676c95ad3c51"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"pdualfun", "=", 
     RowBox[{"NDSolveValue", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          SubscriptBox["op", "dual"], "==", 
          SubscriptBox["\[CapitalGamma]", "N"]}], ",", 
         SubscriptBox["\[CapitalGamma]", 
          RowBox[{"D", ",", "in", ",", "dual"}]], ",", 
         SubscriptBox["\[CapitalGamma]", 
          RowBox[{"D", ",", "ground", ",", "dual"}]], ",", 
         SubscriptBox["\[CapitalGamma]", 
          RowBox[{"D", ",", "X", ",", "dual"}]], ",", 
         SubscriptBox["\[CapitalGamma]", 
          RowBox[{"D", ",", "Y", ",", "dual"}]]}], "}"}], ",", 
       SubscriptBox["p", "dual"], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", "y"}], "}"}], "\[Element]", "\[CapitalOmega]"}]}], 
      "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Clear", "[", "pfun", "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"Clear", "[", "op", "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"pdualfun", "=", 
    RowBox[{"NDSolveValue", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"opdual", "==", 
         SubscriptBox["\[CapitalGamma]", "N"]}], ",", "pdualDirichletConds"}],
        "}"}], ",", "pdual", ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}], "\[Element]", 
       "\[CapitalOmega]dual"}]}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pfun", "=", 
     RowBox[{"NDSolveValue", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"op", "==", 
          SubscriptBox["\[CapitalGamma]", "N"]}], ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"DirichletCondition", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"p", "[", 
               RowBox[{"x", ",", " ", "y"}], "]"}], " ", "==", " ", "1"}], 
             ",", " ", "in"}], "]"}], ",", " ", 
           RowBox[{"DirichletCondition", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"p", "[", 
               RowBox[{"x", ",", " ", "y"}], "]"}], " ", "==", " ", "0"}], 
             ",", " ", "ground"}], "]"}]}], "}"}]}], "}"}], ",", "p", ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", "y"}], "}"}], "\[Element]", "\[CapitalOmega]"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.929499521664329*^9, 3.9294996072712965`*^9}, 
   3.929499985825045*^9, {3.9295001345118465`*^9, 3.9295001360733423`*^9}, 
   3.929500206817171*^9, {3.9295002818501844`*^9, 3.929500297285109*^9}, {
   3.9295007856335154`*^9, 3.9295008168454857`*^9}, {3.9295026339176273`*^9, 
   3.929502638507331*^9}, 3.9295036504361787`*^9, {3.929509453622449*^9, 
   3.9295094539724264`*^9}, {3.9295095018679714`*^9, 
   3.9295095500931344`*^9}, {3.9295096600580235`*^9, 
   3.9295096893826666`*^9}, {3.9295191301003623`*^9, 
   3.9295191487343607`*^9}, {3.9295199305028114`*^9, 3.929519938994912*^9}, 
   3.9295281238838882`*^9, {3.929528196309369*^9, 3.929528206243205*^9}, 
   3.929529605854538*^9, 3.9295791221373925`*^9, 3.92995064581581*^9, {
   3.9299515018006735`*^9, 3.929951502710467*^9}, {3.929951538960353*^9, 
   3.9299515392302628`*^9}, {3.9299519326807146`*^9, 3.929951934240309*^9}, 
   3.930034409740173*^9, {3.9300346695268817`*^9, 3.9300346705867767`*^9}, {
   3.9300347401436214`*^9, 3.930034755899251*^9}, {3.9300348207591867`*^9, 
   3.930034877144084*^9}, {3.9300349161526966`*^9, 3.9300349200589905`*^9}, {
   3.930036086597843*^9, 3.9300360868279*^9}, {3.9300361274798856`*^9, 
   3.9300361278698487`*^9}, {3.930036194519833*^9, 3.9300361962787285`*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"da764609-3604-49b2-9307-174f5fa507e7"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["InterpolatingFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{
               GrayLevel[0.6], 
               AbsolutePointSize[5], 
               PointBox[{1, 1}], 
               PointBox[{2, 4}], 
               PointBox[{3, 2}], 
               PointBox[{4, 3}]}, {{}, {}, {
                AbsoluteThickness[1], 
                Opacity[1.], 
                LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                 "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
             GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
               GrayLevel[0.7], 
               Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "2.0000000000000284`"}], ",", 
                    "2.0000000000000284`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "2.0000000000000284`"}], ",", 
                    "2.0000000000000284`"}], "}"}]}], "}"}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"scalar\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{
               GrayLevel[0.6], 
               AbsolutePointSize[5], 
               PointBox[{1, 1}], 
               PointBox[{2, 4}], 
               PointBox[{3, 2}], 
               PointBox[{4, 3}]}, {{}, {}, {
                AbsoluteThickness[1], 
                Opacity[1.], 
                LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                 "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
             GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
               GrayLevel[0.7], 
               Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "2.0000000000000284`"}], ",", 
                    "2.0000000000000284`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "2.0000000000000284`"}], ",", 
                    "2.0000000000000284`"}], "}"}]}], "}"}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"scalar\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Unstructured\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["False", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  InterpolatingFunction[{{-2.0000000000000284`, 
   2.0000000000000284`}, {-2.0000000000000284`, 2.0000000000000284`}}, {
   5, 4225, 0, {1605, 0}, {3, 0}, 0, 0, 0, 0, Indeterminate& , {}, {}, 
    False}, {
    NDSolve`FEM`ElementMesh[CompressedData["
1:eJzdvPlfjd33Px4SGZJkSpI5ISQksaIyZUimkHRnyDyEDCVD5iEZypyEpFJJ
iNKqpELSrHmeNGk4Ded0yrf73muf1+Pd9z/4nF+ux97X3ms/19prr+m6zjXc
cp/J1s5SUlKGMlJS/16jYv/9VaLUf78akFLs6XBrfhWGPOh8JS+1Bn4+0Jzz
5no1Dti7LCJnTy3QOHx0799fLdA4lLI5PuedWS3QOFQKKLEYE1QDNO5/9Nk4
vBgj+j3HpBpoHKaO3Gw7b1SVhD7hAhqHhAvi2TiMZbg4fck8joPP4zj4PI6D
881xcL5TCMcP4pvjkNAnHJxvGifhm9PnfHM5cr65HDnfHeTP6XNcnE/sgF8y
TyJ/msdxcPwd5M/lI5nHcXTAL5knkT/NI/lI5nWQP+eTywcGkfw76I9k3yTy
p3lcD/i+dZA/3yfJPC7/lP+rP5J5EvnTPI6D9Br02ISwjteQ4H9/LcjbR4/8
+2uStKf+96uXtHOy//1VSdprVv/7K5a07/7Hb7qkLd/33194xzZ0GC9pr2L0
JO0stp6krcXwSNqEV9Imfjryq9fhKunvwL9eB/71OvCv14F/vQ7863XgX68D
/3od+NfrwL9eB/71OvCv14F/vQ7863XgX69D//+z+/z/+j4uXHjroca3OmwJ
MymK86nGM49Tr919WYO8f9++9Cj3XeWSfjGNs6b++TSO7oMDjdvP7gMfv4CN
A+rndPh9WNiBjg2No37g6x8kurQO7wdDGsfHc7oHaLyIcIg69DcfuZuaM64O
Z1YEydzrVolP0+d4zUiqQ4HHzc/VsTW49fJTu6niWhTSuIEBGUdHbKuWjJOT
/2kyz6cCt9C44CVnvJ3WlUvG1ROdUOqfTev0pXlPiI4SGy/BQ/RgM9Gl8e3+
gNH9wOgBx+nO6AAQfaIDHE8DGwfytC7h4POB5qM29XN+NxEORZqnTDg5PzQO
uJxILsD570e4LYlOCOEeQnQ43yQHMKdxjUSX0+P4OV+zCOdHosflrEDr6ZIc
qF8yjvqBj6tLKvRYkCjAj/VJTknDK7DvjcoH/7a1fQJqnZrr8OWVynsB4j9o
fWBEkPu2Bhxgqh2wf0MJjpBxmTFgXx3uoX4vNg5GUf8wNg6Q6I6geeM/yr7x
6NR+Ptg8KM8eE/NvP7D1YCK7DweIrgqjBxo0v5HhBb7+aFqH2qBK4z6xdcGX
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
m2s04tLum54kRYqBrqibFJik9ikZDmS8mTrprwBkAu8P0S8Jg3n1u1c8e14P
BSqXe6sPFeJcuR27YkcKYTldG1k/fDk5WHVT9U+07XPCU//dR7SMveT1IFWA
xwruaGo7poLqUFn7H7IiMBs/YVDkBwHmuW6+tHPKH7z8fPKUKmVB+znS3xDT
tQrnnu6mfli5ARN9Pi4+pVOJ69/2f4qJ9ajyXwGzVVJvlZm6olftUjFuX31Q
o9/+tv/f9dBQ+Wf5mi34y/LxrrmDWnH1qy2Lr5aJ0C6jWbblUAtq6szqkuAs
xsbhei25ui1k/7/Cp8RI2TtT2yT2gK/H6pspkvvkByR4jL1M16gE1GPTr5V+
nRza0Dr2+FG95AZJe2O3zKfq/gJccH3BzukzRfhsZxdRqKwAAxLrhk2racJR
LkaZ79UaUWFoo4xBZyHaXO//Y5ttLYofDE2/PbkCb790z8CCWjR2Tv5wan0Z
Drw5umhGez7sWLSv9OyU3yiteeDWW6s6yTxNqevZh3xqMePSD/9Np2ox8YWZ
oHFgHZo+WfyiNKFGIlcXohvce+HV2Vb1OIjoxnmaH8n1r8FJmfv9ZJTrUE/l
S/WE9bXY/eDB2JzvtShQnN21xKQWVfOcP8gcr0O3RSpP6qIrwNJ3Xt+5rtVY
O3iw1bztleDw+fAID6MqjIDkq3U9K2BI6rmGqeur8Ghjwo7hCbW4fePr+Vl1
Inxu39116D/1qC5q2O88oAXn3Ftg2PtJHfoobNZaXCDGhcn6mu1GDnWHjtQJ
lq1BN5mNld2SGvGOtPfuE4IaTHLYLncCmtDd7ZGj3+RqHKA685WvQR3mX1+W
BJ0TMeDrkLWGGXWoWTJ0c9eqdjv14uG0xca1uG/p8klyY9vjNFNPn+t725DV
oSskbVanLpXsM49LLKZ8n7r5WRWOvfL3glpqFSyp3OKq97cSXf/mGwx4UQk1
jH88y/gHuezOS6fq/IbTK2U/HfCtwMTMwBlO7fm+E+1fnGfZlNO7yiB5Sdij
jWll2I3kzOXH5axE8uP7soXkrbI6d7z3vhq0H72wNrk9Hzu+8us/R7bVYMTV
sSEatyok+77Jf/5AhfgKNLZS2hY3sRbHMfwSPXnI8KPbzMon26fXSejU7R8w
pGhKHdpbjLO2WvMHG+V3jHwTV4cfuuQoefetwe+77ZfGQiOecPgu6tW5FJ3G
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
ZxdkJkFjwlaFUQvFaJavO2KsahrM1P4yuDkvHi6cWvRc2liEV9kV8mew/pAf
O+vynnzFbl91T11YLIbQEcZjHVRf4d6Pu1I2vGmE9S5OI42fPgF01v87RdwA
V9Lv3IzUywbb32Nb5v1tgnqPrMrVLpE4Oa/yxtZ4AQYuzbl9eFMqugaMv9fz
Tbs/cQ6NtH6agxWhebFVLU34rvRuk4FVHDrvvHpGN0mI6lY/9dbEJ+NedHg7
6ZIIg3q23Pp6Mk1y3luXQ1rvyCxc4ehlmu7Vbg9+plb4pLfQ92uCMH64/aIk
u1PgqbH5ZPn2z1Az+N7heac+Y9x3aZU+atEw1tXEub91Io5s+7mvbXI6qKWf
LMzMjsVHlTezwpXywGfLbPskry/4VX5S4trWMmi0dN1W21SA9mpGl30j8mDW
7Q/DRT/z8KjvABmhbwa4XLkUcbJrExb9XKa3ZHAeao75LT5wX4iDv19yWjQl
ETfIz3pxD5pxdKvCsdX9vmGJ3mzPpBlNuH7pwasFc8JQSgHmT1nVSt8f+oxa
fYaa91zYgianv0qNDP2JdnuSok0zWyT779NvZUCnSc141/Ducv2XIWBz9rXL
pC5CLHCcNfzT1lRo2r7A86FLE64J+jPTNS0NMm90D9nXLmfFsNIBmb9y4Ore
vsdHRQrp+0ZhkMPeF5X8f9QH+2+dXtGEiQ57l/Va2QShc1ee7/qkAXfP/Zuq
+EMEIbLb6yLONsCruGy53+Ui1FBaa3anqhG2HHp6e3d5C8L47Xs825ok9ovb
CW4HzIv6nwx1/gI112/OVHoiBp/3SlW7lD4Cj0eOtJ6/Wtb4A8r7rzfU+dsA
psueFYmEqXD1gabG7hlNkCbUXDtfOwG6/kqDIzOaJe+18vdeOe53jA+wI9yJ
jA/g33Hh33kp+ztmyPHJ7XGP6+hGOdsmfPKwLbI4tQm1NxzXk2+XU7RleK/3
jbkYK55yPvdhMkxfWDLsYnEhOv06ZzhhfwTaqi2TmTioBB21/K/MvRsDuR/M
y63HZuCObZ/7Fxx9Cc+v2/zOzynAp0aDxZ1vhUPneA/lismBYJNyIz/XMR52
3TORnTIoD10axQXadW9Bu/89V5eMPJTbNGyanNd3mK0eIXvJQYShYx9s8zkb
B8NXOgw1KxPhwweG8rfmpnSw+wkQdX2Wy4yXn1HHuVNPR81GMJpV+DV+8Tfw
nBo5xchDCEH2L6Z1+fkSLDyfvq6/UwcCL1G1b99H4FdyzO6f5QJYVK4qpfqs
APN6Wim+LmzCvbkqh/q+Tserum6HrhtJvmcl8asrbY4tWb0jA91uF+lVLm/P
X9/7+81bgDjPTfDmSkQKBKQLdWYuj8WueWPkAofEQ4/tIeXOEbXYZV9Dw8ew
D7BpuKJuSEADSpUMnnK8MhOCDuT3cFhVjwuWvdo/xTUNWl+Kz3/51YRaph4Y
H1AAHb7Xo9fBv0jq2923a9R4uYkk3xXj4+ftMenyZ2QKGH14qHQi53/+jPvR
DvqqJ0t0eH2Wr8dxdPD/YeM8jq/0cRNJ6vexwz/v6VfYiFvC/8hfKGtA+++y
R0doClFBLJXyIEqE3QP11UxyXPHRJ2WXVEyHC7sTFc+s/oDBM+b2d1iQA12/
PF2VpZKK0lU2ofqHw8CsVXPUNotkdLoQ7CyQjoOjwxRnRGyvx109Wqa3vEuE
gGs7D8muqMeKRm9drTcxoG+302+GlggdVec3HxE2QXO48+HP01twcd+uC9+s
EsJD6l/MxoEJ9XeN+G8c/Oq+8/Gq+jIY8WlE7iPvZohidRhYWMXqMlxO/PmH
Yj/Pi3lrWyDE7Yr3U896/Kf0xAHncWIQGNs9mj6pBeecfTw/3yccTNynJx8y
aYD/D/84UI4=
     "], {
      NDSolve`FEM`TriangleElement[CompressedData["
1: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
rRf8lXtT850hznT/D9PzroU=
       "]]}, {
      NDSolve`FEM`LineElement[CompressedData["
1:eJxFlElsTXEUh8+79/+/KDVVS1uqpUVnalbUPFV1QFXNNbeNCsLGyp61VUPC
TkQkIkEkxKZJbSw0sWoiFnZNJMTO7+RrYvH1O995975723dfK/qGuq4lZjYo
UuFzTjxM/nehfoTJ139rjkYPas6M/qJ5itHXNU81+obmaUbf1JxndL3m6Ubf
0TzD6LEc1/f+o2FA7hedKb4qulN8xTvgy+JtxJfEu4gviroMXxC1KT4vPgXc
JwoCPieGIz4rOgI+I15GvE1UZ7hF9CR4q6jJ8BbRnuDNfn6Cm70D3iSeRbxR
lGR4g2gNeL3/rQJeJx4neK34msNrxIuAV/t9Btzkv2PEq5wMd4rnOdzlx2X4
sHidw0f8mBQf9fcNuFs8jfiYqMhwj7gX8XHxKod7xUjAJ0RRwCfFo4hP+fsG
fNqfrQxvF28i3iF+JHinGE/wLn8tw7vFgxTvEaMB7xUTAe/zZzXi/eJ+xAf8
eU1xq/gW8EFRFnCbeBLxIXE74HbxIeIO0ZBh/071ptif40btq+SV4rPuf5nR
/TpmudEftV9h9F3N1UY365gao0s01xo9rGPqjK7Svt7oJs0NRpdpbjS6LeX6
3uU6t1iuFEPalxhdrH2pTbb2C42e0Ge6yOhxzWVGf9e82OhbOrfc6DzNFUb/
0jFLjB7VfqnR/g/Gr++9QHO+2z97zTONztc9zDJ6RPvZRg9oP8foMe3nGl2g
ucDoSs3zjH6vudDoRp1bZHSp9vON/plwfe+/mv8B97Rjzw==
       "], {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 13, 13, 13, 13, 13, 13,
        13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 
       14, 14, 14, 14, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
        15, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 13, 
       13, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
        34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 
       51, 52}]}, {
      NDSolve`FEM`PointElement[CompressedData["
1:eJwt0ztIFAAcx/GrLMsyq0vzTru80srHeXn28lG+epudWl1qD8uePsio0MXJ
veYmKagtJAQJKoLCRbDFIaNJkIY2ISja+gQ3fIb//Pv+o33DnfdXBgKBb6xI
+3+vIoPVrCGTtawji/VsIJuN5LCJzWwhyFZyyWMb+YQIU0Ah24mwgyKi7GQX
xZSwmz3spZQyyqkgRiVx9lFFgmr2c4CDHOIwNdRSRz1HOEoDjTTRTAvHOM4J
TnKK05yhlbO0cY4k7XTQyXkucJEUl+iimx4uc4WrXKOX69ygj5vc4jZ3uMs9
+hlgkCEmDTbNW76ywCJLLPOLP+lRswiSSz4hCiiimBhNJOmilyEe8JBHPGaU
MZ4xwQs+8plZ5vjCPAss8oOf/OYvmQLLJkSYCCWUEydBHW10kKKHAQYZ5imT
BIWaR4QY1dTTSjsp+hnhDVPMMMsc31lmXOxPmOA5L3nFa6Z4x3s+8IkZ5snw
IGGilFJGBZXEqSJBM/8A+ulNOw==
       "], {54, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 93, 95, 96, 97, 
       98, 99, 100, 101, 102, 103, 104, 94, 81, 83, 84, 85, 86, 87, 88, 89, 
       90, 91, 92, 82, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 70, 67, 14,
        14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 65, 68, 16, 16, 
       16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 66, 15, 15, 15, 15, 15,
        15, 15, 15, 15, 15, 15, 15, 15, 15, 13, 13, 13, 13, 13, 13, 13, 13, 
       13, 13, 13, 13, 13, 13, 15, 15, 15, 14, 11, 33, 34, 32, 37, 12, 39, 36,
        46, 2, 40, 30, 50, 28, 47, 9, 41, 14, 14, 14, 4, 6, 7, 8, 35, 10, 20, 
       1, 23, 14, 48, 19, 43, 38, 17, 5, 45, 16, 16, 51, 3, 52, 16, 42, 31, 
       22, 26, 24, 13, 49, 25, 21, 27, 13, 13, 13, 18, 44, 29, 16, 15, 13, 15,
        16, 14, 15, 14, 14, 13, 15, 13, 16, 14, 14, 13, 15, 16, 16, 16, 15, 
       16, 13, 15, 16, 15, 14, 13, 15, 13, 13, 16, 14, 16, 15, 14, 15, 13, 14,
        13, 16, 13, 14, 15, 16}]}]}, CompressedData["
1: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
ifOJSMaLS0R8HdIpO9mtLEy/veOqq02FW5TttQg5Is+V5V1EX/cTnDx1R7yx
H6OvAs1zfg4gUIQUnLqtC0/O/TU3lO7EM86LXsGCdiz3LkreMkbG5+vJHclS
rUQ9/tAuda4BMd9anEs9GiFzx7vIQq4BExpV3LSoeljeu9VDIji80bzl58Yz
bLgmbEoXqWAjTihPVCOWja9K+2Klo9jQ6t1y2jebjb4zIdsiiHg0J1+zMRHv
A8s0b/aCCB3ilhHVQ9o0RMhaWIRK0XBft29NxA86nv4N86BMdGPS9cXHgkv9
WB/Y77p3aRei5nPfSJr1oJ79eeW3jd1E/le+rXBrRuaH51XBbS342Kt3qO93
C+EZ6kaO63ogJGOooTTVAjQkS7gHt6Eh6CRo5h0oveVn+3BlB64eP36IVsoi
/Pmpk2chE5LTG6tydJgoKXReEkPmQrAw9fhlvkFo9gxq8/q1YtPpqTbLqCaI
z7hGRlWR8H3FM1v7XyR8sUk1NX7FwqKxZZU9twhevOyr8ORLOV5k5EfXTJYh
qmq1klNbLW7EX7Wx8/mGyQuHl5j94MBafUQouIoDF2+BDiGiP1/1r4nhOcCB
IcMpLl2XgwAWJyBWmIvRVc5p69o5uPxjywMT3y7wHnl3b/hUNxYsDHcptWqD
3XXS/dKLVNi6etFMH3XiovrXKfe8LsifFGO6qFBQEGs9Fr6PAr5rDfy/mGSs
1OqYN1fNBMN8O79GAxMi9WuT3vcxkcm1ErLgJ7zMV2JFqSALzyaUTgwUMWHe
5hqzakc1AgT/uB/t/QZW8FJSZ0gtwldsWVv7ogptz67K3GupxAMLJVsGwbMh
D7lWi/IrYGrc6kD1qIDn3qc3TEvLcIwxWLI3kosrhjPizfFcPOYNX1LVw8U7
+1H7sAgutKzHPU/epmJI8oW1jkg/NgrsFdJx60eCyqItY8Z9WP9gGX3JdSri
882HJC5R8d3bm3fw0wBWhF72a147gAvHLvcPq/dDavdF81W1VLw50stYY0RF
TqnDgW0+feAeLM5XLehFg2/xSsPzvTgtuFhkfCUVM0wpL43ZHtxK1/Z9mDqA
R5tHKXKNA3gV1Hi3/G8/wo/X7ikq7YUU/+qK0Fc9WKk68DVPiQ177qL2/Slt
UE7LMw4pawDpyMsK//ONUBNJWbRMsBEXy5M4PMI1eL9vh0ESUecNRNwzKgk+
W7Myes0HCgeKZiI1ecs50Aoqe/SC8Ni8lqLfgw8IX8s6N/O2gIN7i25+qyH1
gDuqnCBxrQf0fe4pp0N6EPTr9Lt4304U7LW4rPa+Hbk0HZ0SUjPW6MXpfvjQ
ji0hHpdMrnaC11Q75+gtJr5t+RDXfoIOnmO+ScnJNNydOhFQPzEA/6gNHm1b
aPiZrXemm4+Ol3cKy55+GECXtqPirRYqom0GnNM/9OBHQsGPg+Ru1EIrZf+R
LrDqNLYVFVHx9xJJoNSdglAmJgMsKHi5W/LLtkQyanPCmiM2spBhEKE/Ls6C
YcxkbjYfC8efOU8cHmJieLrJWOVHLTYddGyrda7DpY8O7NLKOkzt+LYm/c03
nLXXOLTqRS2ET/RGUvUqoP2xdbBqoAxqgdJFzd8JnlOI0nydwYV76LNoB9FB
9KqU/aT/JPx0YGfP5MJuaIcrSf4+MYBit8vZzKxepF+++kzYmAreRouJw0Qe
OMk9N27z7kKwrbGSoyQVTuHLzUe+9yBemN7NyOhDT/bPcz4avcg4aB+Td60P
oYKf5LauJiFg2Tns46/DdJrpyxuhJCzZv371CoJn29doBSzQ5SIts/vE1ucc
HOVjMK7t5uA6b7lycGk3cls2pjkOdOLy8TJ7xafdWKGhRp+JIebjsOKi95su
fN+lE3BoZTfhN9XnF8V3YPnv88xT/hRc2fC19OYsBd3m6nBuIa5PmkvcUK/H
/VPK61M8v2HvoqpxM5UKGCQphHnGlMO0Up0mWFIOuZQD341yudD3fBzyq42L
tZPt7i2NXAxpZdWlKQ5iObNktqCTi0NC1Wc2v+pAvf4qg3yiv9LISrJNf3sx
5SCbSFHsQa7a1mStzh4kUbST5mf1oaQgWLugkIKGkkyqQi4FF94er6k0Kof0
zbaMgJfl8Nm4+LfupXJEr7J2Kw3sxgblp17Dwkxc4ZuzO0bwqmboX6FbmUx0
2utaLzZrwP8HjX8kJA==
   "], {Automatic}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.9300349230556793`*^9, 3.9300352245130277`*^9, 3.9300357240095053`*^9, 
   3.9300358600249243`*^9, 3.930035912850258*^9, {3.9300359991689763`*^9, 
   3.930036025539878*^9}, 3.930036093906744*^9, 3.9300361468856435`*^9, 
   3.9300362236104245`*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"f45eacda-134e-4fe2-b572-173a4d9b3c7a"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.92951532309758*^9},
 CellLabel->"In[35]:=",ExpressionUUID->"e6cab5fc-b172-4cd6-a4c7-277e517904e2"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Plot3D", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{"pdualfun", "[", 
      RowBox[{"x", ",", "y"}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", 
      RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
    RowBox[{"RegionFunction", "->", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
       RowBox[{"RegionMember", "[", 
        RowBox[{"\[CapitalOmega]dual", ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}], "]"}]}], ",", 
    RowBox[{"PlotRange", "->", "All"}], ",", 
    RowBox[{"Mesh", "->", "None"}], ",", 
    RowBox[{"ColorFunction", "->", "\"\<TemperatureMap\>\""}], ",", " ", 
    RowBox[{"PlotLabel", "->", 
     RowBox[{"Style", "[", 
      RowBox[{
      "\"\<\!\(\*SubscriptBox[\(p\), \(dual\)]\)\>\"", ",", "16", ",", 
       "Bold"}], "]"}]}], ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<p\>\""}], "}"}]}]}], 
   "]"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Plot3D", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"pfun", "[", 
       RowBox[{"x", ",", "y"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
     RowBox[{"RegionFunction", "->", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
        RowBox[{"RegionMember", "[", 
         RowBox[{"\[CapitalOmega]", ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}], "]"}]}], ",", 
     RowBox[{"PlotRange", "->", "All"}], ",", 
     RowBox[{"Mesh", "->", "None"}], ",", 
     RowBox[{"ColorFunction", "->", "\"\<TemperatureMap\>\""}], ",", " ", 
     RowBox[{"PlotLabel", "->", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<p\>\"", ",", "16", ",", "Bold"}], "]"}]}], ",", 
     RowBox[{"AxesLabel", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<p\>\""}], "}"}]}]}], 
    "]"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Plot3D", "[", 
    RowBox[{
     RowBox[{"pfun", "[", 
      RowBox[{"x", ",", "y"}], "]"}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}], "\[Element]", "\[CapitalOmega]"}]}], 
    "]"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.929499781361809*^9, 3.9294997813718076`*^9}, {
   3.929499987494935*^9, 3.9294999955096736`*^9}, {3.9295010876642976`*^9, 
   3.9295010949978514`*^9}, 3.9295056370801215`*^9, {3.929505767403589*^9, 
   3.929505775725501*^9}, {3.929508917647708*^9, 3.9295089366717553`*^9}, {
   3.9295090566989746`*^9, 3.929509116761698*^9}, {3.929509512702312*^9, 
   3.929509515558054*^9}, {3.929509559807103*^9, 3.929509571313394*^9}, {
   3.92951531458645*^9, 3.9295153369125333`*^9}, {3.9299510868104205`*^9, 
   3.929951087780896*^9}, 3.929951936530167*^9, {3.930035233178031*^9, 
   3.930035245052548*^9}, 3.930035748223752*^9},
 CellLabel->"In[36]:=",ExpressionUUID->"aa4ec106-045e-41b2-a487-221486ce2245"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
XQB1wQ==
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[Polygon3DBox[CompressedData["
1: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
7XtT3zv0AX/ZISb4Avc0dzT3MfczPKNayu/c0/8p8rnPmT/Gd87ytt5rg4t8
zvPOuc6+ZT+wF9r5HaMspLv/He4MqZHyvqHuy12vh0L+V+S6ecCcv19Ucs0P
zCX7hLns043qsW5wITgb/KhJ2Dw05fbxKbc/dN1Zc3gXvIh3/l83lZ90M/6d
5maQ3zcGEX/KelVDpqccG9zi2JTz9an5+0QbU1POEf3tU87jLnO3x5xNiP4j
5B67zDV5HhF9R/vd5ijngqFDyrboH5wyvuohI1PGsdv12asfcrTPNaE+qTv2
SHPPrrvM5efqtkx5bfj/MjPlteF9dsrrxznSI+V14r1nym3+n56Usl04z2j5
D/311H8wZFi8Dw2pGTIx5EjPojEp+/7S9f7KNd9vTVAPtdw37K+h/l9+0Bo5
4Dz2MHvidWNNxntAHOjPcb3KrRfqBO4/KZ4NzOdxIYfI9U/0rKB26jiXOqmi
zo54H5AyH6U2RqX8zQs7Y1P+j0e8LUIamZ8hKd8NvJ+c8rlQy9r82Jqc61qw
RybHs7F26trP2jWLZ339Dhd3bTFQV4OtKWqIuqhmDKU6rWMse9UZZL7J1fvu
07qpskbq6neA9VlmTTZw7qnm6sgix876PmSdNDb/Q6yNO133Rto8JeV9yjK/
aH45oz50P7NWI40XzHCHdUW+vz5xD+/02cyc1LCusN/FPcJ+7Gs/tV1f/W7G
SA2zZxq5ZneZt2PVaWGd0z/OtXvJM4P/I5wbtV2LKq5rK2u3tXVS5v6lTvYY
3/HG/o520BmvnbfF1cKaGagdfPLfpe1Ba93eteC7bzvtYJN3/o/xTRidXfZ1
9J01ZC0/00aHg+x0UofzqrO+ThA/75z9YOA/DXki17vt62zOO9vP+x7nj7OG
m5rb9+wfLIZO4hkhTmLhDimzftizg8TJOdTTGuOu4OyCIzS2v3RGdXN9scOZ
ts6a7+Fc+FG5dcu3t+764kzr5Ts6fa0f+vhOt197vXxvqQ5n2j4xcw5z7vXR
frnvX+i/tzh59tAOZyGcZpNx9XMu+2+Adc6e45xi33HGcuYwr406Ze7xQdZb
G2uoqrkfaC0xPlgd8jTEeDlvh6VKLP3FgM5J1mRD9Xlvbv8+z66h5rbM/GPz
gHax2VW/nJl8K+E/P98A+uuXc499wBn3trGPMC5i59zh3OS8mSi2jup8pv1R
1hX1OdJ6q+87tXqEOtVdw9GuBf0TnAuesdpnfTm/7vKsGONaH6lOTXMy2njB
z37mzuA84Ozgfuqs/d3W1UTtULtw/kdcl0lio54nm8+hvuNrQcj8VPltgiff
BuAhp9m3wPdy9/vX+6fIfeixNzkj+D7CtxF4Dt9Q6Btg/0Cf03znDJmuTlvt
4Av+wP8W4lgUz4UpxzNNfc4T8sD995I66N9tPpdZS2CbI2b4Hv9b4APV7P/U
fTRTX4zPUocn3IV9tM4x7ovZ6tCHz7n6nW8e8cW3Kb5VwYtrqPOFuVpgnjm3
ubfgEPPMf7m55727Nuf53l08+OU/IP/94LPkhvd7XJcK15r+RWI7w/Y9Yl5k
PqnPs60f6nlpyvuaOjnX2mC/LE55L1CTS1Ku7QrnV9f/Qn0tcT46zGvgXPzU
19c5Ka/Tl+KZaX6W6g8M7IVz1DnXNnj+D3gRRdY=
           "]],
          Annotation[#, "Charting`Private`Tag$6468#1"]& ]],
        Lighting->"Neutral"]}, {}, {}, {}, {}}, 
     {GrayLevel[0], 
      Line3DBox[{328, 1, 292, 235, 16, 31, 46, 61, 76, 91, 106, 121, 136, 151,
        166, 181, 196, 257, 336, 211, 326, 268, 212, 213, 214, 215, 216, 217, 
       218, 219, 220, 221, 222, 223, 224, 259, 337, 225, 327, 269, 210, 195, 
       180, 165, 150, 135, 120, 105, 90, 75, 60, 45, 30, 237, 329, 15, 317, 
       261, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 260, 328},
       VertexColors->None], 
      Line3DBox[{278, 367, 270, 363, 277, 366, 276, 362, 278},
       VertexColors->None], 
      Line3DBox[{281, 369, 271, 365, 280, 368, 279, 364, 281},
       VertexColors->None]}},
    VertexColors->CompressedData["
1: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
3BE=
     "],
    VertexNormals->CompressedData["
1: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
LMe2jdmxiG24I4bZ+R+XGc//
     "]], {}},
  Axes->True,
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"y\"", TraditionalForm], 
    FormBox["\"p\"", TraditionalForm]},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{384.48988301434645`, 271.25562421194394`},
  ImageSizeRaw->Automatic,
  Lighting->"Neutral",
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "RotationControl" -> 
    "Globe"},
  PlotLabel->FormBox[
    StyleBox[
    "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(dual\\)]\\)\"", 16, Bold, 
     StripOnInput -> False], TraditionalForm],
  PlotRange->{All, All, All},
  PlotRangePadding->{Automatic, Automatic, Automatic},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{1.448464623504489, 2.68639852950513, 1.4612368648267304`},
  ViewVertical->{-0.2049459353807368, -0.3801034906208455, 
   0.9019526040700606}]], "Output",
 CellChangeTimes->{
  3.929519191196424*^9, 3.929519858685704*^9, 3.9295280160012803`*^9, 
   3.929528127069415*^9, 3.9295282126651545`*^9, 3.92952827691431*^9, 
   3.9295285692574806`*^9, 3.9295287105748696`*^9, 3.92952879138548*^9, 
   3.929528895655076*^9, 3.9295290241173058`*^9, 3.929529187816928*^9, 
   3.9295294186349072`*^9, 3.9295296263283396`*^9, 3.929530280773755*^9, 
   3.929578080588523*^9, 3.9295781637833548`*^9, 3.9295783210820713`*^9, 
   3.9295786851326485`*^9, 3.92957872233692*^9, {3.9295789735657215`*^9, 
   3.9295789821177497`*^9}, 3.929579081152481*^9, {3.9295791910816026`*^9, 
   3.9295792121220536`*^9}, 3.929943069659422*^9, 3.9299431339947824`*^9, 
   3.9299432454790816`*^9, 3.9299435776945143`*^9, 3.929944635793722*^9, {
   3.9299502287610884`*^9, 3.929950258580905*^9}, 3.9299503000505323`*^9, 
   3.92995034712085*^9, {3.929950379201017*^9, 3.9299504070260057`*^9}, 
   3.9299504492910004`*^9, 3.9299505026507664`*^9, 3.929951015815876*^9, 
   3.9299511527304096`*^9, {3.9299513816908655`*^9, 3.929951393045806*^9}, 
   3.929951542730405*^9, 3.929951684790728*^9, 3.9299517299603453`*^9, 
   3.9299518002903004`*^9, 3.9299519732729025`*^9, 3.9299520189254584`*^9, 
   3.929952989266322*^9, 3.9300110792426567`*^9, 3.930014364363145*^9, 
   3.930015319126467*^9, 3.9300235438564024`*^9, 3.9300271298367558`*^9, 
   3.9300272086887846`*^9, 3.9300277368354216`*^9, 3.93003074233189*^9, 
   3.9300318767614613`*^9, 3.930033919964667*^9, 3.930034200552024*^9, 
   3.930034512146228*^9, 3.930034595249508*^9, 3.930035245922475*^9, 
   3.930035749913638*^9, 3.930035862384824*^9, 3.930035913590262*^9, {
   3.9300359999089804`*^9, 3.93003602629988*^9}, 3.930036094823031*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"ad1ac0bd-a92b-42c7-a989-65df4cba25e9"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.9300270214124455`*^9, 3.9300270315325117`*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"997945f0-f35f-4114-b902-963ae9d926fd"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"gradPdual", "=", 
    RowBox[{"Grad", "[", 
     RowBox[{
      RowBox[{"pdualfun", "[", 
       RowBox[{"x", ",", "y"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}], ";"}], "\n", 
  RowBox[{"(*", 
   RowBox[{"gradPdualx", "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Derivative", "[", 
        RowBox[{"1", ",", "0"}], "]"}], "[", "pdualfun", "]"}], 
      "\[IndentingNewLine]", "gradPdualy"}], "=", 
     RowBox[{
      RowBox[{"Derivative", "[", 
       RowBox[{"0", ",", "1"}], "]"}], "[", "pdualfun", "]"}]}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Sigma]", "[", 
      RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "+", 
          RowBox[{"gradPdualx", "^", "2"}]}], "]"}]}], ",", 
       RowBox[{"1", "/", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "+", 
          RowBox[{"gradPdualy", "^", "2"}]}], "]"}]}]}], "}"}]}], ";"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"\[Sigma]x", " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "/", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"1", "+", 
         RowBox[{
          RowBox[{"Evalute", "[", "gradPdualx", "]"}], "^", "2"}]}], "]"}]}], 
      "\[IndentingNewLine]", "\[Sigma]y"}], "=", 
     RowBox[{"1", "/", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"1", "+", 
        RowBox[{"gradPdualy", "^", "2"}]}], "]"}]}]}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
   RowBox[{"1", "/", 
    RowBox[{"Sqrt", "[", 
     RowBox[{"1", "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"Grad", "[", 
         RowBox[{
          RowBox[{"pdualfun", "[", 
           RowBox[{"x", ",", "y"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "y"}], "}"}]}], "]"}], ")"}], "2"]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", "gradPdual", "\[IndentingNewLine]", 
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"gradPdual", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"RegionFunction", "->", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
      RowBox[{"RegionMember", "[", 
       RowBox[{"\[CapitalOmega]dual", ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}], "]"}]}], ",", 
   RowBox[{"PlotRange", "->", "All"}], ",", 
   RowBox[{"Mesh", "->", "None"}], ",", 
   RowBox[{"ColorFunction", "->", "\"\<TemperatureMap\>\""}], ",", " ", 
   RowBox[{"PlotLabel", "->", 
    RowBox[{"Style", "[", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(gradPdual\), \(x\)]\)\>\"", ",", "16", ",", 
      "Bold"}], "]"}]}], ",", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<gradPdual\>\""}], 
     "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"gradPdual", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"RegionFunction", "->", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
      RowBox[{"RegionMember", "[", 
       RowBox[{"\[CapitalOmega]dual", ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}], "]"}]}], ",", 
   RowBox[{"PlotRange", "->", "All"}], ",", 
   RowBox[{"Mesh", "->", "None"}], ",", 
   RowBox[{"ColorFunction", "->", "\"\<TemperatureMap\>\""}], ",", " ", 
   RowBox[{"PlotLabel", "->", 
    RowBox[{"Style", "[", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(gradPdual\), \(y\)]\)\>\"", ",", "16", ",", 
      "Bold"}], "]"}]}], ",", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<gradPdual\>\""}], 
     "}"}]}]}], "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.92950877327188*^9, 3.9295088217896976`*^9}, {
   3.929508943982838*^9, 3.929508953282714*^9}, {3.92950906286115*^9, 
   3.9295090636611004`*^9}, {3.9295091042991257`*^9, 3.92950911874164*^9}, {
   3.929509910745694*^9, 3.92950991102575*^9}, {3.9295155154309907`*^9, 
   3.9295155245329304`*^9}, {3.9295157092997293`*^9, 3.929515715381115*^9}, {
   3.929528529488268*^9, 3.929528540901988*^9}, {3.9295286280844097`*^9, 
   3.9295286304742546`*^9}, {3.9295287499538574`*^9, 
   3.9295287558934774`*^9}, {3.92995183293559*^9, 3.929951836030519*^9}, {
   3.9299519429703293`*^9, 3.929951944385219*^9}, 3.929953551707179*^9, {
   3.9300179727964134`*^9, 3.930018006656617*^9}, {3.930023460945201*^9, 
   3.9300235025793858`*^9}, {3.9300236654098363`*^9, 
   3.9300238649503837`*^9}, {3.9300239521820965`*^9, 
   3.9300240350094633`*^9}, {3.930024073111086*^9, 3.9300241096657324`*^9}, {
   3.930028727918944*^9, 3.930028775776762*^9}, {3.9300291122908688`*^9, 
   3.930029152645384*^9}, {3.93002996504189*^9, 3.930029966704373*^9}, {
   3.9300307746702795`*^9, 3.9300307923732243`*^9}, {3.9300308337818604`*^9, 
   3.9300308519930973`*^9}, {3.9300308897217493`*^9, 3.930030954068982*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"25c06d06-1799-4578-902c-377adff9fd1b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    InterpretationBox[
     RowBox[{
      TagBox["InterpolatingFunction",
       "SummaryHead"], "[", 
      DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
       "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxOpener"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GraphicsBox[{{
                  GrayLevel[0.6], 
                  AbsolutePointSize[5], 
                  PointBox[{1, 1}], 
                  PointBox[{2, 4}], 
                  PointBox[{3, 2}], 
                  PointBox[{4, 3}]}, {{}, {}, {
                   AbsoluteThickness[1], 
                   Opacity[1.], 
                   LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                  GrayLevel[0.7], 
                  Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "2.0000000000000284`"}], ",", 
                    "2.0000000000000284`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "2.0000000000000284`"}], ",", 
                    "2.0000000000000284`"}], "}"}]}], "}"}], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxCloser"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GraphicsBox[{{
                  GrayLevel[0.6], 
                  AbsolutePointSize[5], 
                  PointBox[{1, 1}], 
                  PointBox[{2, 4}], 
                  PointBox[{3, 2}], 
                  PointBox[{4, 3}]}, {{}, {}, {
                   AbsoluteThickness[1], 
                   Opacity[1.], 
                   LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                  GrayLevel[0.7], 
                  Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "2.0000000000000284`"}], ",", 
                    "2.0000000000000284`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "2.0000000000000284`"}], ",", 
                    "2.0000000000000284`"}], "}"}]}], "}"}], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Unstructured\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]},
        "SummaryPanel"],
       DynamicModuleValues:>{}], "]"}],
     InterpolatingFunction[{{-2.0000000000000284`, 
      2.0000000000000284`}, {-2.0000000000000284`, 2.0000000000000284`}}, {
      5, 4225, 0, {1605, 0}, {3, 0}, {1, 0}, 0, 0, 0, Indeterminate& , {}, {},
        False}, {
       NDSolve`FEM`ElementMesh[CompressedData["
1:eJzdvPlfjd33Px4SGZJkSpI5ISQksaIyZUimkHRnyDyEDCVD5iEZypyEpFJJ
iNKqpELSrHmeNGk4Ded0yrf73muf1+Pd9z/4nF+ux97X3ms/19prr+m6zjXc
cp/J1s5SUlKGMlJS/16jYv/9VaLUf78akFLs6XBrfhWGPOh8JS+1Bn4+0Jzz
5no1Dti7LCJnTy3QOHx0799fLdA4lLI5PuedWS3QOFQKKLEYE1QDNO5/9Nk4
vBgj+j3HpBpoHKaO3Gw7b1SVhD7hAhqHhAvi2TiMZbg4fck8joPP4zj4PI6D
881xcL5TCMcP4pvjkNAnHJxvGifhm9PnfHM5cr65HDnfHeTP6XNcnE/sgF8y
TyJ/msdxcPwd5M/lI5nHcXTAL5knkT/NI/lI5nWQP+eTywcGkfw76I9k3yTy
p3lcD/i+dZA/3yfJPC7/lP+rP5J5EvnTPI6D9Br02ISwjteQ4H9/LcjbR4/8
+2uStKf+96uXtHOy//1VSdprVv/7K5a07/7Hb7qkLd/33194xzZ0GC9pr2L0
JO0stp6krcXwSNqEV9Imfjryq9fhKunvwL9eB/71OvCv14F/vQ7863XgX68D
/3od+NfrwL9eB/71OvCv14F/vQ7863XgX69D//+z+/z/+j4uXHjroca3OmwJ
MymK86nGM49Tr919WYO8f9++9Cj3XeWSfjGNs6b++TSO7oMDjdvP7gMfv4CN
A+rndPh9WNiBjg2No37g6x8kurQO7wdDGsfHc7oHaLyIcIg69DcfuZuaM64O
Z1YEydzrVolP0+d4zUiqQ4HHzc/VsTW49fJTu6niWhTSuIEBGUdHbKuWjJOT
/2kyz6cCt9C44CVnvJ3WlUvG1ROdUOqfTev0pXlPiI4SGy/BQ/RgM9Gl8e3+
gNH9wOgBx+nO6AAQfaIDHE8DGwfytC7h4POB5qM29XN+NxEORZqnTDg5PzQO
uJxILsD570e4LYlOCOEeQnQ43yQHMKdxjUSX0+P4OV+zCOdHosflrEDr6ZIc
qF8yjvqBj6tLKvRYkCjAj/VJTknDK7DvjcoH/7a1fQJqnZrr8OWVynsB4j9o
fWBEkPu2Bhxgqh2wf0MJjpBxmTFgXx3uoX4vNg5GUf8wNg6Q6I6geeM/yr7x
6NR+Ptg8KM8eE/NvP7D1YCK7DweIrgqjBxo0v5HhBb7+aFqH2qBK4z6xdcGX
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
m2s04tLum54kRYqBrqibFJik9ikZDmS8mTrprwBkAu8P0S8Jg3n1u1c8e14P
BSqXe6sPFeJcuR27YkcKYTldG1k/fDk5WHVT9U+07XPCU//dR7SMveT1IFWA
xwruaGo7poLqUFn7H7IiMBs/YVDkBwHmuW6+tHPKH7z8fPKUKmVB+znS3xDT
tQrnnu6mfli5ARN9Pi4+pVOJ69/2f4qJ9ajyXwGzVVJvlZm6olftUjFuX31Q
o9/+tv/f9dBQ+Wf5mi34y/LxrrmDWnH1qy2Lr5aJ0C6jWbblUAtq6szqkuAs
xsbhei25ui1k/7/Cp8RI2TtT2yT2gK/H6pspkvvkByR4jL1M16gE1GPTr5V+
nRza0Dr2+FG95AZJe2O3zKfq/gJccH3BzukzRfhsZxdRqKwAAxLrhk2racJR
LkaZ79UaUWFoo4xBZyHaXO//Y5ttLYofDE2/PbkCb790z8CCWjR2Tv5wan0Z
Drw5umhGez7sWLSv9OyU3yiteeDWW6s6yTxNqevZh3xqMePSD/9Np2ox8YWZ
oHFgHZo+WfyiNKFGIlcXohvce+HV2Vb1OIjoxnmaH8n1r8FJmfv9ZJTrUE/l
S/WE9bXY/eDB2JzvtShQnN21xKQWVfOcP8gcr0O3RSpP6qIrwNJ3Xt+5rtVY
O3iw1bztleDw+fAID6MqjIDkq3U9K2BI6rmGqeur8Ghjwo7hCbW4fePr+Vl1
Inxu39116D/1qC5q2O88oAXn3Ftg2PtJHfoobNZaXCDGhcn6mu1GDnWHjtQJ
lq1BN5mNld2SGvGOtPfuE4IaTHLYLncCmtDd7ZGj3+RqHKA685WvQR3mX1+W
BJ0TMeDrkLWGGXWoWTJ0c9eqdjv14uG0xca1uG/p8klyY9vjNFNPn+t725DV
oSskbVanLpXsM49LLKZ8n7r5WRWOvfL3glpqFSyp3OKq97cSXf/mGwx4UQk1
jH88y/gHuezOS6fq/IbTK2U/HfCtwMTMwBlO7fm+E+1fnGfZlNO7yiB5Sdij
jWll2I3kzOXH5axE8uP7soXkrbI6d7z3vhq0H72wNrk9Hzu+8us/R7bVYMTV
sSEatyok+77Jf/5AhfgKNLZS2hY3sRbHMfwSPXnI8KPbzMon26fXSejU7R8w
pGhKHdpbjLO2WvMHG+V3jHwTV4cfuuQoefetwe+77ZfGQiOecPgu6tW5FJ3G
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
ZxdkJkFjwlaFUQvFaJavO2KsahrM1P4yuDkvHi6cWvRc2liEV9kV8mew/pAf
O+vynnzFbl91T11YLIbQEcZjHVRf4d6Pu1I2vGmE9S5OI42fPgF01v87RdwA
V9Lv3IzUywbb32Nb5v1tgnqPrMrVLpE4Oa/yxtZ4AQYuzbl9eFMqugaMv9fz
Tbs/cQ6NtH6agxWhebFVLU34rvRuk4FVHDrvvHpGN0mI6lY/9dbEJ+NedHg7
6ZIIg3q23Pp6Mk1y3luXQ1rvyCxc4ehlmu7Vbg9+plb4pLfQ92uCMH64/aIk
u1PgqbH5ZPn2z1Az+N7heac+Y9x3aZU+atEw1tXEub91Io5s+7mvbXI6qKWf
LMzMjsVHlTezwpXywGfLbPskry/4VX5S4trWMmi0dN1W21SA9mpGl30j8mDW
7Q/DRT/z8KjvABmhbwa4XLkUcbJrExb9XKa3ZHAeao75LT5wX4iDv19yWjQl
ETfIz3pxD5pxdKvCsdX9vmGJ3mzPpBlNuH7pwasFc8JQSgHmT1nVSt8f+oxa
fYaa91zYgianv0qNDP2JdnuSok0zWyT779NvZUCnSc141/Ducv2XIWBz9rXL
pC5CLHCcNfzT1lRo2r7A86FLE64J+jPTNS0NMm90D9nXLmfFsNIBmb9y4Ore
vsdHRQrp+0ZhkMPeF5X8f9QH+2+dXtGEiQ57l/Va2QShc1ee7/qkAXfP/Zuq
+EMEIbLb6yLONsCruGy53+Ui1FBaa3anqhG2HHp6e3d5C8L47Xs825ok9ovb
CW4HzIv6nwx1/gI112/OVHoiBp/3SlW7lD4Cj0eOtJ6/Wtb4A8r7rzfU+dsA
psueFYmEqXD1gabG7hlNkCbUXDtfOwG6/kqDIzOaJe+18vdeOe53jA+wI9yJ
jA/g33Hh33kp+ztmyPHJ7XGP6+hGOdsmfPKwLbI4tQm1NxzXk2+XU7RleK/3
jbkYK55yPvdhMkxfWDLsYnEhOv06ZzhhfwTaqi2TmTioBB21/K/MvRsDuR/M
y63HZuCObZ/7Fxx9Cc+v2/zOzynAp0aDxZ1vhUPneA/lismBYJNyIz/XMR52
3TORnTIoD10axQXadW9Bu/89V5eMPJTbNGyanNd3mK0eIXvJQYShYx9s8zkb
B8NXOgw1KxPhwweG8rfmpnSw+wkQdX2Wy4yXn1HHuVNPR81GMJpV+DV+8Tfw
nBo5xchDCEH2L6Z1+fkSLDyfvq6/UwcCL1G1b99H4FdyzO6f5QJYVK4qpfqs
APN6Wim+LmzCvbkqh/q+Tserum6HrhtJvmcl8asrbY4tWb0jA91uF+lVLm/P
X9/7+81bgDjPTfDmSkQKBKQLdWYuj8WueWPkAofEQ4/tIeXOEbXYZV9Dw8ew
D7BpuKJuSEADSpUMnnK8MhOCDuT3cFhVjwuWvdo/xTUNWl+Kz3/51YRaph4Y
H1AAHb7Xo9fBv0jq2923a9R4uYkk3xXj4+ftMenyZ2QKGH14qHQi53/+jPvR
DvqqJ0t0eH2Wr8dxdPD/YeM8jq/0cRNJ6vexwz/v6VfYiFvC/8hfKGtA+++y
R0doClFBLJXyIEqE3QP11UxyXPHRJ2WXVEyHC7sTFc+s/oDBM+b2d1iQA12/
PF2VpZKK0lU2ofqHw8CsVXPUNotkdLoQ7CyQjoOjwxRnRGyvx109Wqa3vEuE
gGs7D8muqMeKRm9drTcxoG+302+GlggdVec3HxE2QXO48+HP01twcd+uC9+s
EsJD6l/MxoEJ9XeN+G8c/Oq+8/Gq+jIY8WlE7iPvZohidRhYWMXqMlxO/PmH
Yj/Pi3lrWyDE7Yr3U896/Kf0xAHncWIQGNs9mj6pBeecfTw/3yccTNynJx8y
aYD/D/84UI4=
        "], {
         NDSolve`FEM`TriangleElement[CompressedData["
1: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
rRf8lXtT850hznT/D9PzroU=
          "]]}, {
         NDSolve`FEM`LineElement[CompressedData["
1:eJxFlElsTXEUh8+79/+/KDVVS1uqpUVnalbUPFV1QFXNNbeNCsLGyp61VUPC
TkQkIkEkxKZJbSw0sWoiFnZNJMTO7+RrYvH1O995975723dfK/qGuq4lZjYo
UuFzTjxM/nehfoTJ139rjkYPas6M/qJ5itHXNU81+obmaUbf1JxndL3m6Ubf
0TzD6LEc1/f+o2FA7hedKb4qulN8xTvgy+JtxJfEu4gviroMXxC1KT4vPgXc
JwoCPieGIz4rOgI+I15GvE1UZ7hF9CR4q6jJ8BbRnuDNfn6Cm70D3iSeRbxR
lGR4g2gNeL3/rQJeJx4neK34msNrxIuAV/t9Btzkv2PEq5wMd4rnOdzlx2X4
sHidw0f8mBQf9fcNuFs8jfiYqMhwj7gX8XHxKod7xUjAJ0RRwCfFo4hP+fsG
fNqfrQxvF28i3iF+JHinGE/wLn8tw7vFgxTvEaMB7xUTAe/zZzXi/eJ+xAf8
eU1xq/gW8EFRFnCbeBLxIXE74HbxIeIO0ZBh/071ptif40btq+SV4rPuf5nR
/TpmudEftV9h9F3N1UY365gao0s01xo9rGPqjK7Svt7oJs0NRpdpbjS6LeX6
3uU6t1iuFEPalxhdrH2pTbb2C42e0Ge6yOhxzWVGf9e82OhbOrfc6DzNFUb/
0jFLjB7VfqnR/g/Gr++9QHO+2z97zTONztc9zDJ6RPvZRg9oP8foMe3nGl2g
ucDoSs3zjH6vudDoRp1bZHSp9vON/plwfe+/mv8B97Rjzw==
          "], {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 13, 13, 13, 13, 13, 
          13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 
          14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 
          15, 15, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 
          16, 13, 13, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 
          31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 
          48, 49, 50, 51, 52}]}, {
         NDSolve`FEM`PointElement[CompressedData["
1:eJwt0ztIFAAcx/GrLMsyq0vzTru80srHeXn28lG+epudWl1qD8uePsio0MXJ
veYmKagtJAQJKoLCRbDFIaNJkIY2ISja+gQ3fIb//Pv+o33DnfdXBgKBb6xI
+3+vIoPVrCGTtawji/VsIJuN5LCJzWwhyFZyyWMb+YQIU0Ah24mwgyKi7GQX
xZSwmz3spZQyyqkgRiVx9lFFgmr2c4CDHOIwNdRSRz1HOEoDjTTRTAvHOM4J
TnKK05yhlbO0cY4k7XTQyXkucJEUl+iimx4uc4WrXKOX69ygj5vc4jZ3uMs9
+hlgkCEmDTbNW76ywCJLLPOLP+lRswiSSz4hCiiimBhNJOmilyEe8JBHPGaU
MZ4xwQs+8plZ5vjCPAss8oOf/OYvmQLLJkSYCCWUEydBHW10kKKHAQYZ5imT
BIWaR4QY1dTTSjsp+hnhDVPMMMsc31lmXOxPmOA5L3nFa6Z4x3s+8IkZ5snw
IGGilFJGBZXEqSJBM/8A+ulNOw==
          "], {54, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 93, 95, 96, 97,
           98, 99, 100, 101, 102, 103, 104, 94, 81, 83, 84, 85, 86, 87, 88, 
          89, 90, 91, 92, 82, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 70, 
          67, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 65, 68, 
          16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 66, 15, 15, 
          15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 13, 13, 13, 13, 13, 
          13, 13, 13, 13, 13, 13, 13, 13, 13, 15, 15, 15, 14, 11, 33, 34, 32, 
          37, 12, 39, 36, 46, 2, 40, 30, 50, 28, 47, 9, 41, 14, 14, 14, 4, 6, 
          7, 8, 35, 10, 20, 1, 23, 14, 48, 19, 43, 38, 17, 5, 45, 16, 16, 51, 
          3, 52, 16, 42, 31, 22, 26, 24, 13, 49, 25, 21, 27, 13, 13, 13, 18, 
          44, 29, 16, 15, 13, 15, 16, 14, 15, 14, 14, 13, 15, 13, 16, 14, 14, 
          13, 15, 16, 16, 16, 15, 16, 13, 15, 16, 15, 14, 13, 15, 13, 13, 16, 
          14, 16, 15, 14, 15, 13, 14, 13, 16, 13, 14, 15, 
          16}]}]}, CompressedData["
1:eJy1uGk4VW/Yv48MRRGVIjJESlFKqPARokGaVIZQhlIkKSlKSGUokubJGIkM
GSpD5inT3ts8b/a8DSlTSvzX8z+OX98Xz+tnvVnH2vtY677XdV/3dZ3nUnC4
cNiZl4eHZ5cgD8+L5/9z1OD/9sz5Pzvz/P/H6P/x+f/uSCht3GSSx8WxVKp1
QDIXJaHDKa1nuSiLGe8/28aBFrtWJb+ajY4V1kclNrMQe2M80EiTAQXvR2Kn
+Gk4WfX19WwDFckbxcpDXXvwti/8rvfHDkie1e94/qkV1LsiDdFxzUh+lSRw
82QTzqquZNkVUmDn9uH2jnsUuPYfYP/8woRM09RP/1gmlicYRyYdYCLmd3t0
ThoD7rbFg9x4Osyn96r8XUPDlRjxnv17+yGu7L1ZyKEXhhXyKT5THWgTcjrQ
+rQF/TlSq2JfkRFz43CjRE8dng9ujV0ZV41uW7QJW1WCrfPlkYl1BTqdB7VN
l1dgXxS1rLOaC+XCOXF/FhcDW4W/W/3gQumL4aGpQi6khJwEC3ZyEfL9roLH
Kw6ibY8V7/rNxlygT2nKVTbC3Q17m1axIfLVI/0glYUNjZ5Gg29ZWBr0/NFi
O+La8qcZTZSFU9dNpi3JTFh9LTf+aEtB6jOtH6sGyLgc8XDJtBEZ3/wq/Uyy
SXCrHTl8DSTozmYU+gU1QiVvb5KnbANsxPeUYHkdbvnY7BsMr0Hip2bq+elK
5E9dXH15fgX4v4joUbeXI9cyepmZQzl0VrxTmukux1Dpt9jf64ehqFnUJDc4
jPCmDRE7ZIahbnwiOFNhCIeaupl1Yo1gDvYEZiwh4yHPciXl9jp8J1vdieFv
ROVNg3s839jIdU5coXyFBY1Xtgb8umxEb95/4dKqT7gYvFZ4R1IGsqy94rzi
c/FRMcIjRZ+N/fwZ79Inv2Jcrzo199MQFN26XKW8hpFFMpTeRhnG+fzLMu1l
w7jywcBwddAwDNjuV1e9G4LjnbBLFopDWGXxcPz+ySFo77dr8TEkIXW9hm/b
4gZUhJn/4mkn4cji5LoHomTsVmA4KRvVY1gl0WiNYj2kZO8tEZ6tx+tmId/k
gyTkCkT26KWzsa5NfNLrExsGzTkjwo9Y2KtXvf7TVRaECtIoOb5sSIr0XljY
x0L+2PFv9b1ZuN39M25tUR7aFQu2ivRnIrD2hJz6hUxUMU4n9llng1dV/dRF
gzy0rp82tvNnY/xzpXFXGwvlIoeLin98hdiQwePJyQIsFf+VLHyTi6OFx/38
uwexXNt39trOIcjQDMO1tg1CZKvGnSNfKAi67O+S5dcCt+pr4uelOai7aJTm
W9KIh2LfzPX2ksD75FZdoRgbR56dex9mwMC3gLSQj/os8Jn7HDgoUwZlXc3p
qn4K9AfeJyROFCK5yK7MaLQUM2nTajOdLHR9+Ok6VvQNtxUlPz65wYC37Pcn
IqcHIcmv5nHgEAdrvy8x8ncawuCfnUX3awbxnnZQSfMDF3n2NolPbMlI27wu
fuZRM+7MXOo/dKwFFfHRvNd0OJi8TWeKOzSilPRsw3MVNlyXLg+N/kTEcV5A
46scBi5vSpygWDBg0bbIry2fiSkJmajslmKkqIyQTc0q4KOoq9FrSEbH4KrR
j10FODY/26DjaAUab6Q8U9vPQvsGD43IBXWYt1WLnhHAwfB4p9HjSBKqQv7k
jPG14GQg1+33rxpcPKrKGY8oxvtzii+6kpl4/Mi7b1XaN3z2uuKiuY2Dq7U3
c/OODGJmfEfM9YImeHkpaobGMKD7/stnFTsSHm2UdfxLYsFjbHK1wQQDNw3V
lO7nNqHaTq3tRGYpUj/p+C2RrYOawuvBdl4OLHTE/T86DMA6gf/Aye1d+Ci4
KvDQdC2qni1a+pLGAE3M4I1AWjNKQx8IZxiwwB/uZbb0KhfjlcoTDt+5SD7o
VGtzbBAR1xfsvfe6FeKRlcWp6yjY71llY0rc/7J6Ma+aNxMZ7nMvGvjJ+Nsl
EVK3nwRzScdbr2+wwK7KSUntYMHF+8FZfwoTmecYt1myDKx9dbQ35WUbTj6x
Gvd+Roba9nVmpvrl4POPt2hOLIWHduxa9p9KUFe/uXmK24jFW4LPT5iwESpu
3Pr2Dwf8+s63DyrSMFdmVvmeMgAtiZ5Jj/wO5ImsnX1i04mM4Kc4x2rA0nvH
7C4uqobsfY+du7az8Mjm8ZoPJXR4yrJPxI00Q/jx+4j5gRQkeJxl2AZxYMIr
c7X9DxcpjO9jCxWbcL6glHqxvx88W560+yuTUNm3oiNwmIXhCBKbyqZDo+KE
trAdGQbtHdEk8XJo2pSEB8dR8O1oLkn9JROLFwfw9ZJ7kHVpp8C0GB3jvrKm
20X7kPCoXiEpk+hPomnvZpxouC38+dDYPgq2VD+nG7iQcVZ0oOBcJAtNhX9U
1UNpoDrvay//TUVWBelF6+YuqP3azZJuo6H6W7DK6V/9+Guie3iJGAlXDe2l
hh42Y6hVR6BVjY3WinVrpOUZSG854XX8Eh12jzf0ht/swey1ieg3hm0QvEOP
2LOhH4wsu/MeuXSc8Xd0PjtFgmZSnUlCBgtVkzobuzOZUJ4yf1tqyMAVs4jz
WsW9MLt7yfFXQCvcJnsky9AFh8DEVpnofkT+jfqlnDeA8hd2IeXnSHip/67q
qCMLeutnjfmv0WF1NbvnQkw/9v7Kj+o6TcMGiziBa/M6sXZ2992Kdy14YXnL
o963Fx9vFf+tGmxEGmd7WAcfG6fP7r4e7tSPKb7X+uaHBtBov914LLYNE+77
BFVFmnAlrOubxeEG1P7VPyXDIuYda8XzI5SNx2PW/IUTvVAJYXR5SNKxK0fM
1p3RAd9Qpae0691wyhmX2S3fjKyH58zZ0l2Q7gmoawtpQ5f2IuoSdTZIm9KE
244z8dRXPerELyIvDjcK0HkG8ZuzcZht1oKmH8pvqpY1416849yoJwkdBvdr
5lpIYE9Z/HxcSfRX7VrqoscszB646JmzqhzHX5KNymfKsIaTo3lxdyNG47uo
Bve/YZO3xM1jj7m4WeBzc9kvDuqNf9Oyhtqg36X2ooqIL/nTIyPZJ2RMC8zf
NKPJwp7ZU7kd8Uy0Nt0um0mpgPgXYbEauWpsVIpvNi+pRJpfZnSVDRfXz1JP
X9LogV9HrsjZbhosnjwVmjsygP4/Gd/DhQZwplbop2QgFcvEKhL9zKi4a53T
XdfXj9vb8eLVNjaO3iR5X/vYhgiTodVn1jaiiC/lXpRXPRY1OSBwMQf6jT2/
mlLY0O45dKx+BQeGYafyfDS7oTTqk2/+px08ix+2H9Pow0b8cXJybMPnpjua
D/UYEKzVO63+mYEPYgVyTjdo0EldY6SxcgALrE99SwykY1KVf7hesw+Ne4Nk
cvQpWG93L29BIRmRiztUb61l4YRrifPlYSYUP/BpOvER9Wx8tnrRqQqUpke4
reEQcW7ZPi8hiQvRJ4+9awu6YXZaZOMNBSrOmOkGJ3d2YEG3fIfUABUSujWl
zw/2Yd5UUQG5iIr27HFWx5U+7NXtTyIz+7Ei6OAvd1EqGpjrJbxfN0D+2eiV
4e0knLw7WjH8lQ3bhwb3nTM4eMdLV710mov7w8K9Y7c4+PxScFZsrBkB5EHx
82OdGIrb+fnSPioS3F5dUNPqxo8j2bH1/B2gHbIdSA+lIO2jgjNPVR2cW33L
RUk18E003rlSogJn4i1uPsnnAs6j3NYuLgxC1hzT6+YiOtF8c05VFx5c0+E1
je3F9RXuz0NqenE2fN+2LBYFitmlwTIx5Yh4IKgn2M5F2+t3Alv+dGDa6shF
re/lqPfS/bpwiIbjqXMaLjw0NPYsVXhxlolOqwz5itF2LJi39AJvQR+S3MwM
4gdYeOc6cF69vglMVYEtSUZMPJi+6PApj4lQu4yvI3210OCLXKLs2IjZqPrT
nNMUcORFvlS/KUfg33DjLwf7cexAVaHbVDfIhVs1G44Qebv+5JvhniHQj7Ic
PikNIenMgiiP10MY2OX1WOYrF3fd9Hqny7jYITSpYktw/+ap5IUlBP9y+7Yw
JSu5kM+4vKgriwt1Pqczq2wIjmsTVFQxZYMVRW+YIvbtptVWddkEHw/mb1nh
OsnFjR/2N07/5MKxfdzy6upB2FcqkU8SXOHpPTBuJzMIbrLFt6uPhrBZosRv
dxgXf0x/GEzXcrFSJvb+/eph1Hy8UVyTPYL9UzcTo/xGQBv384+/MYSeo4fD
NZKGkHCF986johG8D+W76lU4gsEfjpMbZofBa3ZxySuCS9tbZKsFEtnw0r15
aEyeja5pT4sT8oPYeqLmT7vsIH6aCy57zDsICw1HT5/vHJAdzqcsa+Hiinji
ko0qXKgp1R7xcKGjfmBsqX0EA6Jki8bjugysXF/MYXqzIdgcbpz7noU11hLF
axex/3lljNHtfG5WPe5ExyYGuNRji0mV+BZVFmw2j3cfiGRi0S1eyr4NTFgE
z8t4qjCCzOXp3W9XDIOvR2r+nh0j//wuJlZ84YUrw7jrrhYYGzP87/eJ0rXL
sxeMwHHkwXCkLfH+J1PKu41GYLEuLNHZZRjIP7htKp+NR1+F9o2eZGM9XfDW
uXwOhk5Y69saDsHhwJCT6OwQNmn/2aM9NwgJ8sw9T+FBbBRatfZ2weC/cXgt
Hh3/HTWM2E0ii7fe+G98w8J1ysyRYVxUUdu/KWEE596cq937eeTf+4+s+ZSX
01IH3c1XnkS8qcMq9y30zNphDGjZT5g9G8H9OrfMT/EjoBqPp64h8jJw4wGJ
U3dZ0OL14dmxn/lvnLuvKluDj5PAsywjwpGIp/uOAxvsr5LhtKo1mPy9BK8d
dwQZbf0MIZZrTaBoCUZD+8tMLwxDrvNsqrfhCEa/6X9ecfO/eAq19y9tuTYE
67O3RIazhjAhyGfXOTwMyjUJXUX2MDItBo2LhIYRuTQ+cO/ZIRzdZCS7YXgI
Od+eZ97XHPrn9XxX7F7IRv233p6reF7uz6hFzuTLBwFPa/+Xp6+/Ecgs5gz/
u/+2V+G1WQUOXD/Ve+bLc/AmLsjx5PQQmAvCni1XGPnn9crRX566OKYjultm
adXAB2zbF71gdzv733NaAuOeMO5wIeJA+nQhgIurHNaUnF8jqt6t11YY5GJo
a1Xib+NBKMot2rQgm4uOu3rUDRcGoTLTNcyXOvhv/nJfv9YWBDWgt3Vk7mJs
A9rbut4cOkKCjSnz97pogqffOJhZ72mAyLDTzgCjBihVue3uqyWhKTTg0/jH
erixk55ZWpKw0qpd9fr8BjStMHCM+E3B140ldKfeZijfNY2ys25C89WQ4QWL
2/Dpq7qRPKkFfvZpWiL5bVC3rnLbSPis3pvVZjS/eijtSjlmTq/7956rfHwW
nmtjw+Gcmd2fSjbspx8GCD9uxm0xdmXAYAsMTQ1DXYi6v742a/mnVxS4nb+1
cN+peryTumrVJVyHqSPOlSVltTizoH5tbw4Zhue6PlV6NcGltXbvnkEyJATf
eb08Qob7pTsJNtwm7Nogci/+dDNIf4u/hOQ3wXB1goOZBwOhW60YtzvpyAvq
sv1exMATJf9inR8kaCuJ3vVwbsKSKJZsmFUT1j/N/7XnGQWSb444vkumYPBM
XIv8PQoCf70fK5hshJGl1dWaBhI8/qTd+ibSisRCEfM1hK/IC3fVaz5owRff
zLankRRobr5c/NyVAkftL50OGRQMr5wrzvYm1in/Un6kXQNq3vgb3C+rg5zB
fn6dKgr4t5wJ+d1NBsNdtvtFFwV8zpLTY4daEJPuKPgmoAnPFVqmdqXU/lv3
2XtxJ/ffboTlTqa1WlUDLvatiDGWIv37f7NNc4piXN3/+m72//I6WdAt9Vn5
IPQ+KDnr5/2XT9MWGXc0PzRgJFXR/rdDA3qit+jHogH+9mfuHjKp+5ffhe9T
VbYKJaDdZ/vgS98ErL8mJmGp0wibuOAgJ5N6RLtQrbxSG/F2x1WXJsIzhQRW
eqqTyDAK600TSBhEc9S4ZOLmIQjXDYVNqpFA/XPp/uhCEgoWCeS+0CBB9XDi
eblFg/igYf9LUW4IpmUsn/nDJNjKXnlychMZXrIRR0UsyPBzW7ODz7AO6YVT
H9KfNODW8fgle4i+KlUk4lukQ8K9k8ddipVIkOysUA8xI2FaLYLf3oiES7Om
N8MNSDhQQrZyzSLWFdvW5gj9Fy+p5fUKwS9IeFIkrX0YJMSfpHsuu1oLcbnd
Oko3aiE5yl9Maf8vHgeU9DXj21PgQ6N4vhn5gC+/p5eU6zLRoBV662IpEyLL
ytWPDLGgaatmUSpMeJnlWp++hWxYz3dY2e9HwikzkbNy0hykHynxVmxkgy/1
z8FNQYNo8j36p+9EOVy6NpgELavAxuUfh+Xt86Bnd6hD0YEN/+EPRUMabHgY
0jYYL2Hjt5/53J8MJraEmrj50ZjYntDOU1dN1GnpxNDmGjY+t5ws1lhG+LbP
ZcMJgs+prgxduu4gSllXtu0hPN/Nh1elkvA1S5lLTwtpLHRaDhqXET56nl/5
8M1eFjJqjmje6mPBQO3U7Ozf/+pZ2M2zV/eOENd2G1y9FnFRGyBrmXKB/S8+
xWvLb27OSUCHteyG+nUJGGOeq2r24GLFGfk/N04N4cIDnywjgiMcjGfiF+//
r15rZDu/+X6DDaNG2+sq/5733/fTV+ysZNqeVOx/LaOVVU7E3+rZk4TjbKxU
Vv6dY/FfnT9X7XIlvmkYJod/Wt6zZEHgOCuxgPBFlvfgH4tjrH/jHSveFrj7
DBuXpCe3G5xnY+f4dJjzdzaM6Vt2iJGKUBggrb+voxi3Pn1UUy0ow/EfrYIe
Mx9hNSa52ds2HxfiVJvr/ZlIa6lk77jMhID8UWcJwmt/3s2p+PGeCZeHJzLn
vjDB+qFWOpzFRFJ60/jT2hIMn7YmnP0Tet/7/hAT++879DCvYVZ8YSbkGMXW
JOl3+MJ9SitbWoBUkQ2U/Se+ImrX/S9dO0rQ2qrt/5LgzLuxP8aO+zBRQyId
/1mVB4ZRvZnPcCFK7BsDBBZ/BlclLq25mgUlP8O3sXGsf/EpDVEXIi9lQ3ix
1xGrtP/W9Ujlr0JdYp2fFT70d5NjI2fj/GuXY9hQ1L9osuQFC7sS1lRR7NiI
WPolSEosAyGaWSGHSz9BfnpVTGUgEzc3iXpPNrHgIt73oJDwYo8oY6OX84px
RS/FdHNbGUhf1+8+IFYFxvPrs34lbVD1jipNSWiFfomGuGdHO7KG62RKHzCg
FbZauvYwE0WLIiRPR/03vyeuhVmbXL+iTGx/dszGAlhvE/uUeKEEH5d8Hnmf
xEbevWGxi8T4pX/Sd/xOZuGoz/hNsbYWcLc1b3Fb3QLelsvHGzc1gSrQksku
HcRMvwGTdTv7f+UZW3FB/m+fRCzou7XzjOg7/NFbv3nN8ux//1dEr5XusMvC
sztVnipgYv+DWCkrh6+g3CyqKDbPhqpRY4SlFgs1z/a0bz/M/HdfpZq7VkVm
BgwUrkrbf82Ac03GrG9EBixdrQpE4zKRe31heZZEPg77OIzeojWgYp7TZNqB
RkQqzmlPEv2+NiNoubvLf/EI93ScYS0h9o0IaV3Sycx/43yw3ips0/EVFmLL
dlxf/AUPT1haMAreQrd3T25rcAYExXzvBq0sh4VmbcqWhWW43Kxsk+hXhh97
FWaMyt/+e87yiRP7bfmIfm6WKNMTzkI1ZeXvV8UsSLUd8qI3VUCzZaWFLakc
456B1o2kaiw99+ie6O5qUF8v9Pj8oxLJ5ibu18uyYfYq/v6SDe8xPzWibY9H
FcKer30vM1WFooq9cj1najAY5xpjcYaFuz7OLo6LWPhy6McGmh0Dj+rvT2zp
ZvybzzMZN+Fz1mw0pnvxquQWwO0v80vnk8+4nz1hdmNbObZlTeS+WVMOdUZy
Tp5WOYLmMqUsYsvRG/Jktle3HCs0LLZ89C1H6gnGjJk5G85ClWX3xliYZv3Z
UbOKjdIEIY2fQhVodx0PujVaDidJDfqwZAXm35gL+nWMAYrVlaAzQwUIneJ3
vdZTjldO4XF+7HK8UX+V3rupAgJLp998OF2KjWSxGLnlJXh7/tfg3FAxHl/X
nzocTEeFeaPE6ww6utTq7x7QoUOsRaW0TJiOVS+e/36vQ/v3nv9vfZsjHnqs
2FqGMXN7T3GHSpg/siyWni7/l697FPQ+L/VhoCj9xoicLRO6onw+Wj0UGK9+
5O+wqwkyNs8orlcGsUVk7ZxlKgslX+RJNILfRTZvPye1k6jrhwP8ph1YYJgc
V+2nNsOXfeRdzkompPe+D5U8RPiSwnGZDV0slDk+/Ougy4FS4YhyD5uLOOkV
jU66BM+6Wy4o6iYhdK4wRyKKhKAfegtSRshYtSZM1fsRCSKPljcteExCw1fD
L9q8ZDwQahc52U/w6gFZiQe5LGzxiw9gfO+A19ga4ZRbbdhla1THCWlDWDYF
nTPfwPQuZ0Zdq0SV5BuN+iQGrmff0RrQZsBk05jmNTUGlvrVaF8ToGDHFpGn
w/fIMAnsvrCT4IR4OY2lp0RaIDmRmpRO+HFcZXGxxY9SkD8UrKSplMLj58MC
h4PlmP+c9tjkcQXE/eYajd6x4JEqLRWmzoJ0d3K/rR8LQuWzktPziXlWiYqG
PKiEyMzbvc0mvYhZtDhowLkbuYnS88voXSi50mQ2ZdgF09E7216f68bgQqO0
SwM9+GvyLOaNZwteB7oP8fg1YZWzqEqbYwuU7BafkCa81k1zuPGLPQcMWvcn
68MsbK3v9Rv+xEVEqH41fdsgDA9eOJ3XxsX5/O0m7aNcXNTynK/Uz4XceZp5
ZibhxQoKfol/ODjXkfl07hoXC6uO1GTGcLD8q7Kh410mdjQLJoilMtG8duvG
URUWnq27To705EB3Hl99zLxmaKjtYhvFNSNt2f7eFw5EvrToMw0uteNAUYn5
pEI7zC1DpkcyO2FqJ7nHvoSFwL+rpV32Erww/M3EToqJDB4FWd7yJhS8yyhb
akTwQnlA7LaqDhzVm/i0/kUbdp5VXsZ0aEOPccT3YhkSlCp8MSlKhqSOk81Z
VyJPQsxE+38Qvi1kpNtF7P93VoHNkVdZcLL7qXKcGEfm46Fyu48skFyWJtje
YkKzinc37yTBOXtmVMVuMKHzNP67WSUN71sn7DpGaIhcEB7VmjiAqQ2eUtcL
yZhTvc/LJvJi0LctLCm+GfJ2jI7te8lYvOZLV6V4LSKjmhxVCG7b299vGvaC
AZdc73dPt5Ug60yJqaVENS42ttQlSlXCxX9x17LrBGc/mOl8FEmG1jfBhGWZ
FDQLn70UEkRBwKsbJy7m12Ce1kxf0Y4KWMwNljcEfMPL3/fNUl/VYSxYP4kZ
XIZDZfL+nOkyjPd035HnrYXNtXdn37+tgaym79KZkiqo2VsNWy9kISrOufyk
ChPXcuRnTyVVgJF708tXnY7euU8jwjU07H3cfVK4ZgDvRXlqI9M5+CuanhuV
x0b8rrDNi05ysGXcXef0SxISjjZWnnJpgsA5gTnnSgraRiH//Xw7klUN/9i4
dyJUMnuvanwbviedOjfWycBlN3L/SyuivtuaZdCW1+N2Uvx7KaMabBDIfrVA
lwxSn1y2pRcJaYWiF+TGqtGqeHx9qGcZemJ5M6nhZdh6Sv2YJLFugfkipkEv
Wdh8xHlfYAcbE6+F+7deYkG+xNHj9f9wCHRiYjpZSBPOCW+/0oQFzru+thL5
sc7z9qrT1mT8ejXulLiaAukTYwpul+sxRv42vUaN4DzWItJXW4I/xfPSeEc4
UD56O7j00SD4t2bF1p4nQ+Gi5Eu7fSToBembkb1J0DlHjrxM1KXfablRfDYk
VL5e+XhNOZFPit5+FkT9GUmtUoygsPA6niPqtomF3Wdt5N7k0fHnZL47laj3
c2s31qy+2QqB3rBM2/cl2FzN1/CgthFHX9UZnJJvwG/THUem3hNxfm33dmkZ
F7R+s1NXttGhdlp+g/Y9oo79ragO1mOgcJFdTLgzCY3VX26fkGRg97Oft74k
M3D6hrljlTkdNaLqPRkPGyGQkG4+rkCH9MYDq1UkaDDuT7zoUUJD/0tFq+Ny
dCwaVDFtTWCD25F1fj+XjWU+QZI0CS4mt7TqevNzUWg+O/vrLQcG9+mNSXe5
4Dkf2KR5lotTseOv6t5xwTz6JzhIlgvDNfe8Y8y5sO1q0Myy5eK7qetvpiUX
T0sXFLrd4UKnQ8qzNZSLVZqj3QVS7djsGvx5TUs76LtS2xqPEvv5tt3RV/6d
GD8Q/mGfbwfSnIv2+FuS4VMg9sLiGBkJVgvbTxP7Tz1M/x1JmIIvgZtqAoi+
4Gpf3x6twcDnR6czZlvomOG9qEK+SfT3+7tUlnbQIWFPDfS07kfyPvoyHXY/
xDQ44suuEHmuH7DM9gIJ5ey4+7diSEhdODUn8owEbN6nKPiIjK8PDVVHN5Dw
nPcKacyUhF9fk8RPEtwrW3i3tC6dhdlil6sLslnQFtttLkhwWf6drj5rBRYm
DdD8isPCEGkiQK6bhfkeAhvuhhD8WDulw094QtL+e9S3JkxIUOd5XCH49m9o
S6LsLzqcKTTW8gsMSFvUJApHDGCLzdm9LSdpyGrYr/d5OQ3S6c5lGZ5EPc/m
CVN0YeKzqSVzJ08T1ma1Cv7qr0Zgw+esn3rfIGhyoUL/WQ1+SFtP/OivwAPf
gtuNNpVEH5HnPWVbgaOa3LfaoQQnJbq8rq6oBN/I+RKdjxVYaH5dxdCnDKW2
2/ZsTKrEU6r0yjNMwhcbePmtWRVgv7aoCxqrx5X0x50HcuqQa/UlINmyFgs2
feni31OFy3e2LSnYSAHNWWHEfAEZb73phq572QjbBO9Jwvcey78uOL6BhRn6
td5567jg3s30vxbIxdJFk87RvYQ3vntanx3Nxr7zQ25/SGyMFG+2i0rvJ/L8
SUz7wgEY8iz0+2XPgJR+lFuCLh3LQl6oSvJT8bblhb/Non6EHOHptt7Xjz2+
L6qDBXrgHKsc38rtxcI4458ZSj0QHttoHLCpE58+UJcbXm+H073Lc3K/qVhy
pEtLiN6ParFLzy3HqAgf31t+62M95sLqFqcJNoBP6/25Jz214Fshl3fMqxFV
WUGvDhL84S1zPXj18gpYRWuNmepVoiPAudXkYT34i5gho9INOKRO2Vk8Ugd/
3x1/4noZ8MpQUbGWY+LEHrXNJwgfvH8nW3Y5UVe/LBwWeuTNgY6vb3fpWSo2
JXtVRX6lIngw/1CNeT+avzP+hOl3IDBwNuzm8nag0jR/3nQLBvfsMBeX7MSI
dKbKdEsrRIfJDi3RVPTKGxxspfQj4+2O3f7v+hGhuumJ69smVF/mcUhCC6a6
jZLtG5uxKlax+y9PD9arKB7JlOmB1fVZf3XFLhyT8k86dYqDpk7IuctyoGZZ
WVevxsXKn3zONQT3FLUtJGkncGGw9XHRjyEu1i2utmMzuVhw9hU5mcrF+E4R
5b+SFPjM9xVRWEhwo+cFzrA5Be/LpFPfWzfhul9gy36BJoj5ZZoXKzfBof7R
39gyOhLfvJIJH6LD1ubmnGp/H8YmO13rKnpxjNN6tEOhF65+YSNWiQQPWouN
LREgYW9BJ28XuxHpF1eU/g+HWizIrVcbYcFPqZ++nLie91q18PpfFroSzwqR
BQgvXb+ULFvDAOPbJXXDMRpOz5wdvLu9FSIbtHqTI9tQZDi9XntVK1gqNfop
34m+609bFZVTDpuNfZIqZhXQV+FZlbmY2D9ee4VCzMohkKT52dWpHGtU58/E
3SB84DHfQmfzVsiM7r6qnNuCawtXuctuasbhWN91cnebUObcujR0czPU5CX0
JmJYOCbNuyJQmAXeoddarAd0rGMcqKVsoCLZbSbiNq0POzf1PJ353oybix2M
ruXRYC/e91mMn4YLvTv1klkD6CwXYxrsooOAqm7pfTQIJt7qbh4bwGbywKf0
n/2w4Zw51V1MxSOBl8pPs6gI+3mA58c6JtZ9+vV83RMmPnWtmWidx0TAmz4h
vWkGIgSsVro8G8C4lQjTzXAA9Z8tBaPe9uNIvPU5vec0fKxeynw4MICBCYNn
AXbNeCzbdliW4M8LvzqMy1NJGK+b0ebbTsai2QNWwXkk3D+koD3JIePkTOdj
CbsmFFLWH7Gop8DGliZAuUBG86V77L/LmrAxbqVzXjcbVfYCtcbb2Wj1smdP
6LFhUBU/L/IHAxsagnO0uAwsFyCvUHjDxJGk9CftNgN4febJfRdjOvg8rO90
E/E5Tpf57R5Px7OZoy9i7vejtCL+vqsEFY/XFQbM9FKhcUm+gCbZhxOmmTuP
BvbgUsPVJ5fp3bDq8Hmim0GBwC/h9KnlFBgK69QX/KYRPHdvkvOaBlMnsour
PA124/qDO5f0o2LnaLWATj8Ue7c9nOAfgLeIkY47iYHeZG+t1i460jSrJ8Md
BiBz4VCKa8YAtv+8VNnt34t3VffntFP6oDSbWGLiQoLcvF2ngxobUZzLIygY
0oW/z9qP2ht1QcYndWHwdDfePbR+NOrUioaTi64KqTbDrqz5ZOlCDngX/4Ra
MxvyJ57yrbUj+GxLqfC4Gxtj5U9zeWMYWLzThpI0yoCly8Ksv710aE6p9cYS
+W6rG8kqrqDDMVWpVauUhvCXFXnh7QOI9S568/4CHYG8nkV3/Ppw+I2ol/z+
Pqx968HHWtiJNYG6NnNHu7EsVnTy4UQHfKqcYqaMmhFfKfW34CMFv8SaRUZM
O6C5TeCwkkYXJE7csd58sx8a89v2jz8dQNxCq/znNwbQLb3j50uLAURL3304
ReT71zhGbvlVBt6Y8VKeltMR6VJuwblGwvHHqkY/95KwP2pxdOQUC6PY6nS4
koU2g7tXlG8wIFry8uWeWRqqNmT+yB9lIvrOGzrZi4ktrnVDoSt7oRo+s8Sv
pguP+4PHXZe2oTo44ImeQQdGBWRiGyra8aL2cYOFJeGF9Ef1PYSP7BywuMZp
6sbWw1KXqJ4dSMlK3N95rgtX5ox8F1f3YodhZFnaVD/WRhY43lw2gAST+1VS
DBre7v5wWTKnF2c2ih5a+7sRSf49i2/ws0Gvi0nXamMiSP9I51TQAFQP11yZ
8qBBnVt4NUdkAA8Pva0z8aOi3DjD9u0rKhwoizJwrR/Zr1IjirK6kDMY986S
04qYLsWU6cWdOPXozzyxjDbYS/ROt3hScWiFiruPYT+iDp8MTNhPBfvM86tV
Dv04GP3XcOIuFQ9c1Bt/qjTijtNdF+qORljqqjNGghqxdvmEyFF9Nmymqs3S
ifOJSMaLS0R8HdIpO9mtLEy/veOqq02FW5TttQg5Is+V5V1EX/cTnDx1R7yx
H6OvAs1zfg4gUIQUnLqtC0/O/TU3lO7EM86LXsGCdiz3LkreMkbG5+vJHclS
rUQ9/tAuda4BMd9anEs9GiFzx7vIQq4BExpV3LSoeljeu9VDIji80bzl58Yz
bLgmbEoXqWAjTihPVCOWja9K+2Klo9jQ6t1y2jebjb4zIdsiiHg0J1+zMRHv
A8s0b/aCCB3ilhHVQ9o0RMhaWIRK0XBft29NxA86nv4N86BMdGPS9cXHgkv9
WB/Y77p3aRei5nPfSJr1oJ79eeW3jd1E/le+rXBrRuaH51XBbS342Kt3qO93
C+EZ6kaO63ogJGOooTTVAjQkS7gHt6Eh6CRo5h0oveVn+3BlB64eP36IVsoi
/Pmpk2chE5LTG6tydJgoKXReEkPmQrAw9fhlvkFo9gxq8/q1YtPpqTbLqCaI
z7hGRlWR8H3FM1v7XyR8sUk1NX7FwqKxZZU9twhevOyr8ORLOV5k5EfXTJYh
qmq1klNbLW7EX7Wx8/mGyQuHl5j94MBafUQouIoDF2+BDiGiP1/1r4nhOcCB
IcMpLl2XgwAWJyBWmIvRVc5p69o5uPxjywMT3y7wHnl3b/hUNxYsDHcptWqD
3XXS/dKLVNi6etFMH3XiovrXKfe8LsifFGO6qFBQEGs9Fr6PAr5rDfy/mGSs
1OqYN1fNBMN8O79GAxMi9WuT3vcxkcm1ErLgJ7zMV2JFqSALzyaUTgwUMWHe
5hqzakc1AgT/uB/t/QZW8FJSZ0gtwldsWVv7ogptz67K3GupxAMLJVsGwbMh
D7lWi/IrYGrc6kD1qIDn3qc3TEvLcIwxWLI3kosrhjPizfFcPOYNX1LVw8U7
+1H7sAgutKzHPU/epmJI8oW1jkg/NgrsFdJx60eCyqItY8Z9WP9gGX3JdSri
882HJC5R8d3bm3fw0wBWhF72a147gAvHLvcPq/dDavdF81W1VLw50stYY0RF
TqnDgW0+feAeLM5XLehFg2/xSsPzvTgtuFhkfCUVM0wpL43ZHtxK1/Z9mDqA
R5tHKXKNA3gV1Hi3/G8/wo/X7ikq7YUU/+qK0Fc9WKk68DVPiQ177qL2/Slt
UE7LMw4pawDpyMsK//ONUBNJWbRMsBEXy5M4PMI1eL9vh0ESUecNRNwzKgk+
W7Myes0HCgeKZiI1ecs50Aoqe/SC8Ni8lqLfgw8IX8s6N/O2gIN7i25+qyH1
gDuqnCBxrQf0fe4pp0N6EPTr9Lt4304U7LW4rPa+Hbk0HZ0SUjPW6MXpfvjQ
ji0hHpdMrnaC11Q75+gtJr5t+RDXfoIOnmO+ScnJNNydOhFQPzEA/6gNHm1b
aPiZrXemm4+Ol3cKy55+GECXtqPirRYqom0GnNM/9OBHQsGPg+Ru1EIrZf+R
LrDqNLYVFVHx9xJJoNSdglAmJgMsKHi5W/LLtkQyanPCmiM2spBhEKE/Ls6C
YcxkbjYfC8efOU8cHmJieLrJWOVHLTYddGyrda7DpY8O7NLKOkzt+LYm/c03
nLXXOLTqRS2ET/RGUvUqoP2xdbBqoAxqgdJFzd8JnlOI0nydwYV76LNoB9FB
9KqU/aT/JPx0YGfP5MJuaIcrSf4+MYBit8vZzKxepF+++kzYmAreRouJw0Qe
OMk9N27z7kKwrbGSoyQVTuHLzUe+9yBemN7NyOhDT/bPcz4avcg4aB+Td60P
oYKf5LauJiFg2Tns46/DdJrpyxuhJCzZv371CoJn29doBSzQ5SIts/vE1ucc
HOVjMK7t5uA6b7lycGk3cls2pjkOdOLy8TJ7xafdWKGhRp+JIebjsOKi95su
fN+lE3BoZTfhN9XnF8V3YPnv88xT/hRc2fC19OYsBd3m6nBuIa5PmkvcUK/H
/VPK61M8v2HvoqpxM5UKGCQphHnGlMO0Up0mWFIOuZQD341yudD3fBzyq42L
tZPt7i2NXAxpZdWlKQ5iObNktqCTi0NC1Wc2v+pAvf4qg3yiv9LISrJNf3sx
5SCbSFHsQa7a1mStzh4kUbST5mf1oaQgWLugkIKGkkyqQi4FF94er6k0Kof0
zbaMgJfl8Nm4+LfupXJEr7J2Kw3sxgblp17Dwkxc4ZuzO0bwqmboX6FbmUx0
2utaLzZrwP8HjX8kJA==
      "], {Automatic}],
     Editable->False,
     SelectWithContents->True,
     Selectable->False], "[", 
    RowBox[{"x", ",", "y"}], "]"}], ",", 
   RowBox[{
    InterpretationBox[
     RowBox[{
      TagBox["InterpolatingFunction",
       "SummaryHead"], "[", 
      DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
       "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxOpener"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GraphicsBox[{{
                  GrayLevel[0.6], 
                  AbsolutePointSize[5], 
                  PointBox[{1, 1}], 
                  PointBox[{2, 4}], 
                  PointBox[{3, 2}], 
                  PointBox[{4, 3}]}, {{}, {}, {
                   AbsoluteThickness[1], 
                   Opacity[1.], 
                   LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                  GrayLevel[0.7], 
                  Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "2.0000000000000284`"}], ",", 
                    "2.0000000000000284`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "2.0000000000000284`"}], ",", 
                    "2.0000000000000284`"}], "}"}]}], "}"}], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxCloser"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GraphicsBox[{{
                  GrayLevel[0.6], 
                  AbsolutePointSize[5], 
                  PointBox[{1, 1}], 
                  PointBox[{2, 4}], 
                  PointBox[{3, 2}], 
                  PointBox[{4, 3}]}, {{}, {}, {
                   AbsoluteThickness[1], 
                   Opacity[1.], 
                   LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                  GrayLevel[0.7], 
                  Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "2.0000000000000284`"}], ",", 
                    "2.0000000000000284`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "2.0000000000000284`"}], ",", 
                    "2.0000000000000284`"}], "}"}]}], "}"}], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Unstructured\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]},
        "SummaryPanel"],
       DynamicModuleValues:>{}], "]"}],
     InterpolatingFunction[{{-2.0000000000000284`, 
      2.0000000000000284`}, {-2.0000000000000284`, 2.0000000000000284`}}, {
      5, 4225, 0, {1605, 0}, {3, 0}, {0, 1}, 0, 0, 0, Indeterminate& , {}, {},
        False}, {
       NDSolve`FEM`ElementMesh[CompressedData["
1:eJzdvPlfjd33Px4SGZJkSpI5ISQksaIyZUimkHRnyDyEDCVD5iEZypyEpFJJ
iNKqpELSrHmeNGk4Ded0yrf73muf1+Pd9z/4nF+ux97X3ms/19prr+m6zjXc
cp/J1s5SUlKGMlJS/16jYv/9VaLUf78akFLs6XBrfhWGPOh8JS+1Bn4+0Jzz
5no1Dti7LCJnTy3QOHx0799fLdA4lLI5PuedWS3QOFQKKLEYE1QDNO5/9Nk4
vBgj+j3HpBpoHKaO3Gw7b1SVhD7hAhqHhAvi2TiMZbg4fck8joPP4zj4PI6D
881xcL5TCMcP4pvjkNAnHJxvGifhm9PnfHM5cr65HDnfHeTP6XNcnE/sgF8y
TyJ/msdxcPwd5M/lI5nHcXTAL5knkT/NI/lI5nWQP+eTywcGkfw76I9k3yTy
p3lcD/i+dZA/3yfJPC7/lP+rP5J5EvnTPI6D9Br02ISwjteQ4H9/LcjbR4/8
+2uStKf+96uXtHOy//1VSdprVv/7K5a07/7Hb7qkLd/33194xzZ0GC9pr2L0
JO0stp6krcXwSNqEV9Imfjryq9fhKunvwL9eB/71OvCv14F/vQ7863XgX68D
/3od+NfrwL9eB/71OvCv14F/vQ7863XgX69D//+z+/z/+j4uXHjroca3OmwJ
MymK86nGM49Tr919WYO8f9++9Cj3XeWSfjGNs6b++TSO7oMDjdvP7gMfv4CN
A+rndPh9WNiBjg2No37g6x8kurQO7wdDGsfHc7oHaLyIcIg69DcfuZuaM64O
Z1YEydzrVolP0+d4zUiqQ4HHzc/VsTW49fJTu6niWhTSuIEBGUdHbKuWjJOT
/2kyz6cCt9C44CVnvJ3WlUvG1ROdUOqfTev0pXlPiI4SGy/BQ/RgM9Gl8e3+
gNH9wOgBx+nO6AAQfaIDHE8DGwfytC7h4POB5qM29XN+NxEORZqnTDg5PzQO
uJxILsD570e4LYlOCOEeQnQ43yQHMKdxjUSX0+P4OV+zCOdHosflrEDr6ZIc
qF8yjvqBj6tLKvRYkCjAj/VJTknDK7DvjcoH/7a1fQJqnZrr8OWVynsB4j9o
fWBEkPu2Bhxgqh2wf0MJjpBxmTFgXx3uoX4vNg5GUf8wNg6Q6I6geeM/yr7x
6NR+Ptg8KM8eE/NvP7D1YCK7DweIrgqjBxo0v5HhBb7+aFqH2qBK4z6xdcGX
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
m2s04tLum54kRYqBrqibFJik9ikZDmS8mTrprwBkAu8P0S8Jg3n1u1c8e14P
BSqXe6sPFeJcuR27YkcKYTldG1k/fDk5WHVT9U+07XPCU//dR7SMveT1IFWA
xwruaGo7poLqUFn7H7IiMBs/YVDkBwHmuW6+tHPKH7z8fPKUKmVB+znS3xDT
tQrnnu6mfli5ARN9Pi4+pVOJ69/2f4qJ9ajyXwGzVVJvlZm6olftUjFuX31Q
o9/+tv/f9dBQ+Wf5mi34y/LxrrmDWnH1qy2Lr5aJ0C6jWbblUAtq6szqkuAs
xsbhei25ui1k/7/Cp8RI2TtT2yT2gK/H6pspkvvkByR4jL1M16gE1GPTr5V+
nRza0Dr2+FG95AZJe2O3zKfq/gJccH3BzukzRfhsZxdRqKwAAxLrhk2racJR
LkaZ79UaUWFoo4xBZyHaXO//Y5ttLYofDE2/PbkCb790z8CCWjR2Tv5wan0Z
Drw5umhGez7sWLSv9OyU3yiteeDWW6s6yTxNqevZh3xqMePSD/9Np2ox8YWZ
oHFgHZo+WfyiNKFGIlcXohvce+HV2Vb1OIjoxnmaH8n1r8FJmfv9ZJTrUE/l
S/WE9bXY/eDB2JzvtShQnN21xKQWVfOcP8gcr0O3RSpP6qIrwNJ3Xt+5rtVY
O3iw1bztleDw+fAID6MqjIDkq3U9K2BI6rmGqeur8Ghjwo7hCbW4fePr+Vl1
Inxu39116D/1qC5q2O88oAXn3Ftg2PtJHfoobNZaXCDGhcn6mu1GDnWHjtQJ
lq1BN5mNld2SGvGOtPfuE4IaTHLYLncCmtDd7ZGj3+RqHKA685WvQR3mX1+W
BJ0TMeDrkLWGGXWoWTJ0c9eqdjv14uG0xca1uG/p8klyY9vjNFNPn+t725DV
oSskbVanLpXsM49LLKZ8n7r5WRWOvfL3glpqFSyp3OKq97cSXf/mGwx4UQk1
jH88y/gHuezOS6fq/IbTK2U/HfCtwMTMwBlO7fm+E+1fnGfZlNO7yiB5Sdij
jWll2I3kzOXH5axE8uP7soXkrbI6d7z3vhq0H72wNrk9Hzu+8us/R7bVYMTV
sSEatyok+77Jf/5AhfgKNLZS2hY3sRbHMfwSPXnI8KPbzMon26fXSejU7R8w
pGhKHdpbjLO2WvMHG+V3jHwTV4cfuuQoefetwe+77ZfGQiOecPgu6tW5FJ3G
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
ZxdkJkFjwlaFUQvFaJavO2KsahrM1P4yuDkvHi6cWvRc2liEV9kV8mew/pAf
O+vynnzFbl91T11YLIbQEcZjHVRf4d6Pu1I2vGmE9S5OI42fPgF01v87RdwA
V9Lv3IzUywbb32Nb5v1tgnqPrMrVLpE4Oa/yxtZ4AQYuzbl9eFMqugaMv9fz
Tbs/cQ6NtH6agxWhebFVLU34rvRuk4FVHDrvvHpGN0mI6lY/9dbEJ+NedHg7
6ZIIg3q23Pp6Mk1y3luXQ1rvyCxc4ehlmu7Vbg9+plb4pLfQ92uCMH64/aIk
u1PgqbH5ZPn2z1Az+N7heac+Y9x3aZU+atEw1tXEub91Io5s+7mvbXI6qKWf
LMzMjsVHlTezwpXywGfLbPskry/4VX5S4trWMmi0dN1W21SA9mpGl30j8mDW
7Q/DRT/z8KjvABmhbwa4XLkUcbJrExb9XKa3ZHAeao75LT5wX4iDv19yWjQl
ETfIz3pxD5pxdKvCsdX9vmGJ3mzPpBlNuH7pwasFc8JQSgHmT1nVSt8f+oxa
fYaa91zYgianv0qNDP2JdnuSok0zWyT779NvZUCnSc141/Ducv2XIWBz9rXL
pC5CLHCcNfzT1lRo2r7A86FLE64J+jPTNS0NMm90D9nXLmfFsNIBmb9y4Ore
vsdHRQrp+0ZhkMPeF5X8f9QH+2+dXtGEiQ57l/Va2QShc1ee7/qkAXfP/Zuq
+EMEIbLb6yLONsCruGy53+Ui1FBaa3anqhG2HHp6e3d5C8L47Xs825ok9ovb
CW4HzIv6nwx1/gI112/OVHoiBp/3SlW7lD4Cj0eOtJ6/Wtb4A8r7rzfU+dsA
psueFYmEqXD1gabG7hlNkCbUXDtfOwG6/kqDIzOaJe+18vdeOe53jA+wI9yJ
jA/g33Hh33kp+ztmyPHJ7XGP6+hGOdsmfPKwLbI4tQm1NxzXk2+XU7RleK/3
jbkYK55yPvdhMkxfWDLsYnEhOv06ZzhhfwTaqi2TmTioBB21/K/MvRsDuR/M
y63HZuCObZ/7Fxx9Cc+v2/zOzynAp0aDxZ1vhUPneA/lismBYJNyIz/XMR52
3TORnTIoD10axQXadW9Bu/89V5eMPJTbNGyanNd3mK0eIXvJQYShYx9s8zkb
B8NXOgw1KxPhwweG8rfmpnSw+wkQdX2Wy4yXn1HHuVNPR81GMJpV+DV+8Tfw
nBo5xchDCEH2L6Z1+fkSLDyfvq6/UwcCL1G1b99H4FdyzO6f5QJYVK4qpfqs
APN6Wim+LmzCvbkqh/q+Tserum6HrhtJvmcl8asrbY4tWb0jA91uF+lVLm/P
X9/7+81bgDjPTfDmSkQKBKQLdWYuj8WueWPkAofEQ4/tIeXOEbXYZV9Dw8ew
D7BpuKJuSEADSpUMnnK8MhOCDuT3cFhVjwuWvdo/xTUNWl+Kz3/51YRaph4Y
H1AAHb7Xo9fBv0jq2923a9R4uYkk3xXj4+ftMenyZ2QKGH14qHQi53/+jPvR
DvqqJ0t0eH2Wr8dxdPD/YeM8jq/0cRNJ6vexwz/v6VfYiFvC/8hfKGtA+++y
R0doClFBLJXyIEqE3QP11UxyXPHRJ2WXVEyHC7sTFc+s/oDBM+b2d1iQA12/
PF2VpZKK0lU2ofqHw8CsVXPUNotkdLoQ7CyQjoOjwxRnRGyvx109Wqa3vEuE
gGs7D8muqMeKRm9drTcxoG+302+GlggdVec3HxE2QXO48+HP01twcd+uC9+s
EsJD6l/MxoEJ9XeN+G8c/Oq+8/Gq+jIY8WlE7iPvZohidRhYWMXqMlxO/PmH
Yj/Pi3lrWyDE7Yr3U896/Kf0xAHncWIQGNs9mj6pBeecfTw/3yccTNynJx8y
aYD/D/84UI4=
        "], {
         NDSolve`FEM`TriangleElement[CompressedData["
1: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
rRf8lXtT850hznT/D9PzroU=
          "]]}, {
         NDSolve`FEM`LineElement[CompressedData["
1:eJxFlElsTXEUh8+79/+/KDVVS1uqpUVnalbUPFV1QFXNNbeNCsLGyp61VUPC
TkQkIkEkxKZJbSw0sWoiFnZNJMTO7+RrYvH1O995975723dfK/qGuq4lZjYo
UuFzTjxM/nehfoTJ139rjkYPas6M/qJ5itHXNU81+obmaUbf1JxndL3m6Ubf
0TzD6LEc1/f+o2FA7hedKb4qulN8xTvgy+JtxJfEu4gviroMXxC1KT4vPgXc
JwoCPieGIz4rOgI+I15GvE1UZ7hF9CR4q6jJ8BbRnuDNfn6Cm70D3iSeRbxR
lGR4g2gNeL3/rQJeJx4neK34msNrxIuAV/t9Btzkv2PEq5wMd4rnOdzlx2X4
sHidw0f8mBQf9fcNuFs8jfiYqMhwj7gX8XHxKod7xUjAJ0RRwCfFo4hP+fsG
fNqfrQxvF28i3iF+JHinGE/wLn8tw7vFgxTvEaMB7xUTAe/zZzXi/eJ+xAf8
eU1xq/gW8EFRFnCbeBLxIXE74HbxIeIO0ZBh/071ptif40btq+SV4rPuf5nR
/TpmudEftV9h9F3N1UY365gao0s01xo9rGPqjK7Svt7oJs0NRpdpbjS6LeX6
3uU6t1iuFEPalxhdrH2pTbb2C42e0Ge6yOhxzWVGf9e82OhbOrfc6DzNFUb/
0jFLjB7VfqnR/g/Gr++9QHO+2z97zTONztc9zDJ6RPvZRg9oP8foMe3nGl2g
ucDoSs3zjH6vudDoRp1bZHSp9vON/plwfe+/mv8B97Rjzw==
          "], {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 13, 13, 13, 13, 13, 
          13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 
          14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 
          15, 15, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 
          16, 13, 13, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 
          31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 
          48, 49, 50, 51, 52}]}, {
         NDSolve`FEM`PointElement[CompressedData["
1:eJwt0ztIFAAcx/GrLMsyq0vzTru80srHeXn28lG+epudWl1qD8uePsio0MXJ
veYmKagtJAQJKoLCRbDFIaNJkIY2ISja+gQ3fIb//Pv+o33DnfdXBgKBb6xI
+3+vIoPVrCGTtawji/VsIJuN5LCJzWwhyFZyyWMb+YQIU0Ah24mwgyKi7GQX
xZSwmz3spZQyyqkgRiVx9lFFgmr2c4CDHOIwNdRSRz1HOEoDjTTRTAvHOM4J
TnKK05yhlbO0cY4k7XTQyXkucJEUl+iimx4uc4WrXKOX69ygj5vc4jZ3uMs9
+hlgkCEmDTbNW76ywCJLLPOLP+lRswiSSz4hCiiimBhNJOmilyEe8JBHPGaU
MZ4xwQs+8plZ5vjCPAss8oOf/OYvmQLLJkSYCCWUEydBHW10kKKHAQYZ5imT
BIWaR4QY1dTTSjsp+hnhDVPMMMsc31lmXOxPmOA5L3nFa6Z4x3s+8IkZ5snw
IGGilFJGBZXEqSJBM/8A+ulNOw==
          "], {54, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 93, 95, 96, 97,
           98, 99, 100, 101, 102, 103, 104, 94, 81, 83, 84, 85, 86, 87, 88, 
          89, 90, 91, 92, 82, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 70, 
          67, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 65, 68, 
          16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 66, 15, 15, 
          15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 13, 13, 13, 13, 13, 
          13, 13, 13, 13, 13, 13, 13, 13, 13, 15, 15, 15, 14, 11, 33, 34, 32, 
          37, 12, 39, 36, 46, 2, 40, 30, 50, 28, 47, 9, 41, 14, 14, 14, 4, 6, 
          7, 8, 35, 10, 20, 1, 23, 14, 48, 19, 43, 38, 17, 5, 45, 16, 16, 51, 
          3, 52, 16, 42, 31, 22, 26, 24, 13, 49, 25, 21, 27, 13, 13, 13, 18, 
          44, 29, 16, 15, 13, 15, 16, 14, 15, 14, 14, 13, 15, 13, 16, 14, 14, 
          13, 15, 16, 16, 16, 15, 16, 13, 15, 16, 15, 14, 13, 15, 13, 13, 16, 
          14, 16, 15, 14, 15, 13, 14, 13, 16, 13, 14, 15, 
          16}]}]}, CompressedData["
1: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
ifOJSMaLS0R8HdIpO9mtLEy/veOqq02FW5TttQg5Is+V5V1EX/cTnDx1R7yx
H6OvAs1zfg4gUIQUnLqtC0/O/TU3lO7EM86LXsGCdiz3LkreMkbG5+vJHclS
rUQ9/tAuda4BMd9anEs9GiFzx7vIQq4BExpV3LSoeljeu9VDIji80bzl58Yz
bLgmbEoXqWAjTihPVCOWja9K+2Klo9jQ6t1y2jebjb4zIdsiiHg0J1+zMRHv
A8s0b/aCCB3ilhHVQ9o0RMhaWIRK0XBft29NxA86nv4N86BMdGPS9cXHgkv9
WB/Y77p3aRei5nPfSJr1oJ79eeW3jd1E/le+rXBrRuaH51XBbS342Kt3qO93
C+EZ6kaO63ogJGOooTTVAjQkS7gHt6Eh6CRo5h0oveVn+3BlB64eP36IVsoi
/Pmpk2chE5LTG6tydJgoKXReEkPmQrAw9fhlvkFo9gxq8/q1YtPpqTbLqCaI
z7hGRlWR8H3FM1v7XyR8sUk1NX7FwqKxZZU9twhevOyr8ORLOV5k5EfXTJYh
qmq1klNbLW7EX7Wx8/mGyQuHl5j94MBafUQouIoDF2+BDiGiP1/1r4nhOcCB
IcMpLl2XgwAWJyBWmIvRVc5p69o5uPxjywMT3y7wHnl3b/hUNxYsDHcptWqD
3XXS/dKLVNi6etFMH3XiovrXKfe8LsifFGO6qFBQEGs9Fr6PAr5rDfy/mGSs
1OqYN1fNBMN8O79GAxMi9WuT3vcxkcm1ErLgJ7zMV2JFqSALzyaUTgwUMWHe
5hqzakc1AgT/uB/t/QZW8FJSZ0gtwldsWVv7ogptz67K3GupxAMLJVsGwbMh
D7lWi/IrYGrc6kD1qIDn3qc3TEvLcIwxWLI3kosrhjPizfFcPOYNX1LVw8U7
+1H7sAgutKzHPU/epmJI8oW1jkg/NgrsFdJx60eCyqItY8Z9WP9gGX3JdSri
882HJC5R8d3bm3fw0wBWhF72a147gAvHLvcPq/dDavdF81W1VLw50stYY0RF
TqnDgW0+feAeLM5XLehFg2/xSsPzvTgtuFhkfCUVM0wpL43ZHtxK1/Z9mDqA
R5tHKXKNA3gV1Hi3/G8/wo/X7ikq7YUU/+qK0Fc9WKk68DVPiQ177qL2/Slt
UE7LMw4pawDpyMsK//ONUBNJWbRMsBEXy5M4PMI1eL9vh0ESUecNRNwzKgk+
W7Myes0HCgeKZiI1ecs50Aoqe/SC8Ni8lqLfgw8IX8s6N/O2gIN7i25+qyH1
gDuqnCBxrQf0fe4pp0N6EPTr9Lt4304U7LW4rPa+Hbk0HZ0SUjPW6MXpfvjQ
ji0hHpdMrnaC11Q75+gtJr5t+RDXfoIOnmO+ScnJNNydOhFQPzEA/6gNHm1b
aPiZrXemm4+Ol3cKy55+GECXtqPirRYqom0GnNM/9OBHQsGPg+Ru1EIrZf+R
LrDqNLYVFVHx9xJJoNSdglAmJgMsKHi5W/LLtkQyanPCmiM2spBhEKE/Ls6C
YcxkbjYfC8efOU8cHmJieLrJWOVHLTYddGyrda7DpY8O7NLKOkzt+LYm/c03
nLXXOLTqRS2ET/RGUvUqoP2xdbBqoAxqgdJFzd8JnlOI0nydwYV76LNoB9FB
9KqU/aT/JPx0YGfP5MJuaIcrSf4+MYBit8vZzKxepF+++kzYmAreRouJw0Qe
OMk9N27z7kKwrbGSoyQVTuHLzUe+9yBemN7NyOhDT/bPcz4avcg4aB+Td60P
oYKf5LauJiFg2Tns46/DdJrpyxuhJCzZv371CoJn29doBSzQ5SIts/vE1ucc
HOVjMK7t5uA6b7lycGk3cls2pjkOdOLy8TJ7xafdWKGhRp+JIebjsOKi95su
fN+lE3BoZTfhN9XnF8V3YPnv88xT/hRc2fC19OYsBd3m6nBuIa5PmkvcUK/H
/VPK61M8v2HvoqpxM5UKGCQphHnGlMO0Up0mWFIOuZQD341yudD3fBzyq42L
tZPt7i2NXAxpZdWlKQ5iObNktqCTi0NC1Wc2v+pAvf4qg3yiv9LISrJNf3sx
5SCbSFHsQa7a1mStzh4kUbST5mf1oaQgWLugkIKGkkyqQi4FF94er6k0Kof0
zbaMgJfl8Nm4+LfupXJEr7J2Kw3sxgblp17Dwkxc4ZuzO0bwqmboX6FbmUx0
2utaLzZrwP8HjX8kJA==
      "], {Automatic}],
     Editable->False,
     SelectWithContents->True,
     Selectable->False], "[", 
    RowBox[{"x", ",", "y"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.930017979466152*^9, 3.9300180075465593`*^9}, 
   3.930018119363324*^9, 3.930023503279351*^9, 3.9300235489187393`*^9, {
   3.9300237018069096`*^9, 3.930023723217043*^9}, {3.930023764877325*^9, 
   3.930023767927127*^9}, 3.9300238023686714`*^9, 3.930023865700306*^9, {
   3.930023946979869*^9, 3.930023974396719*^9}, 3.9300240110120687`*^9, {
   3.9300240756326227`*^9, 3.9300241118681326`*^9}, {3.9300287536305265`*^9, 
   3.930028776738468*^9}, 3.93002911853412*^9, 3.930029153565325*^9, {
   3.930030750003162*^9, 3.9300307978345633`*^9}, {3.930030834661805*^9, 
   3.9300308526250143`*^9}, {3.930030892903261*^9, 3.930030956460583*^9}, 
   3.9300318789913206`*^9, 3.9300339258642783`*^9, 3.930034204394396*^9, 
   3.9300345124862094`*^9, 3.930034598399307*^9, 3.9300357550261*^9, 
   3.9300358657264743`*^9, 3.9300359137002583`*^9, {3.9300360000489745`*^9, 
   3.930036026419873*^9}, 3.9300360949830136`*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"42820930-43aa-491a-a440-b9a7c1ea6650"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
VA==
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[Polygon3DBox[CompressedData["
1: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
f0J2mnNypmXMi4+dG1w/cdxGWc9Ix3u64/y9cshwNma2Y/urddIu+nCegD0z
bC17baOqjBfIC5Nfp+wzy6faLrpwFoJnj2iTP7cObOwsyzkr8ekC9XxuObp8
oT7T5Jlf/Idl8Ub+jwUcyf/E+I8Y/vlH6+bM51c+/8r79uLYOZZv7ruc5WNf
jf/ygFfJocKf4/OvlKHsG2UWkUd24Ub+R47zMJxrhccPQvxvjv+roe9i6sxz
5PB9s9SZb42/If/brPtb2xqnPPWBz6iDc98/OxaUce6A8x47+U1+dzwX93/Q
/F+L68/q3MxBX1HNxzGPO6fgwTNcf7V8pvyH6v+b/aXvCzWyn/Py8ParheXI
/O48eMTvC4+OYDB0pu+fqvMj9qMsUF48x8K1Yfks1wnP+V8k7fH/CfazwSrk
ZGif8o0sm2T5934zdJ6Xf20kxuY/Yi39nxhj1cr/ubWyvPmfN+T4Hxllrcy5
87+zRf3/POWLKM83p/w8ny9mOftBrRu5J0yeauVGxgLs/S3VyLMG5OFXbORe
GXtSyzVyL5d9hxUauW9JfYtbJ/NiMdti32T5Ru6jkrtbspH5N+K7JRoZA1IH
8dUx6kKOA32ITZZuZO6L539oZHyHr2/TyPwAMdeyjYyneI//9hCXEdOt1MgY
kHboT0fbRyd0YNwX8rvQV/Sjv5Qt7JyhHfrfz37T9j72iT4cZfuMy16OEzqd
qr6MKTozrvRnBfvE2NEvvjm6rqK+fA90/n9evmXT
           "]],
          Annotation[#, "Charting`Private`Tag$6665#1"]& ]],
        Lighting->"Neutral"]}, {}, {}, {}, {}}, 
     {GrayLevel[0], 
      Line3DBox[{629, 1, 559, 268, 16, 31, 46, 61, 76, 91, 106, 121, 136, 151,
        166, 181, 196, 364, 646, 211, 627, 388, 212, 213, 214, 215, 216, 217, 
       218, 219, 220, 221, 222, 223, 224, 366, 647, 225, 628, 389, 210, 195, 
       180, 165, 150, 135, 120, 105, 90, 75, 60, 45, 30, 270, 630, 15, 619, 
       368, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 367, 629},
       VertexColors->None], 
      Line3DBox[{465, 783, 397, 782, 464, 791, 463, 781, 465},
       VertexColors->None], 
      Line3DBox[{565, 795, 578, 785, 470, 792, 469, 784, 565},
       VertexColors->None], 
      Line3DBox[{490, 787, 406, 786, 601, 796, 600, 794, 490},
       VertexColors->None], 
      Line3DBox[{486, 790, 408, 789, 485, 793, 484, 788, 486},
       VertexColors->None]}},
    VertexColors->CompressedData["
1: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
     "],
    VertexNormals->CompressedData["
1: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
cF98foGfFHnvjAtfyHuUUc8g732p/bAvWlML/67PVr7kdwlNXCa/i/l56z1c
N/TcS+rMv+JIfal9GHH2W7yFdwHaVXhEXH9ZEOwSk1wwvUPBhgftuvjvcjSF
UOTvcmxr8id/l2Op51cS2TUXbBuJVjgcXStLF4suSTct52mlzZ2WqWp8jphZ
/jg5R3xyxR1yjnhPb2owXmcj4ZH/8Dprf44h65x6TcSaKrMFs1Km1mt839E6
Dp9h+wEKzF710eNzx5fDFs8dx31aPHesNhUehu+zPm8neV+JD4PJfXxWS5P8
dv7DhVac3+5KOlKF89v/a057pZcNyV3/CZa8hnPXFw7o6uDctdwHNZKv1gwS
P4Xz1ck9Mmo4X52e+47kOU1D1QZwnnOL6ijJc+70dCJ5TgOGU504z8kx+Ink
OQMu7iM5zANSQ9Y4h/nR6x7JYbIG05O85QW3N9I4b/ngY0olzlt+5ConeUsZ
x+Mkb+mbs5i3tElZzOMpSzGTPN7z4MU8XvKVYpKv6w749wfn6xLu2ZB83VL5
tH0uVSRv1rBl+UecN6P7zW6I82b+CirER8geNCQ+wuHKA8RHWEr//z+rY6mY

     "]], {}},
  Axes->True,
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"y\"", TraditionalForm], 
    FormBox["\"gradPdual\"", TraditionalForm]},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{379.2805088910284, 306.64672024271766`},
  ImageSizeRaw->Automatic,
  Lighting->"Neutral",
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "RotationControl" -> 
    "Globe"},
  PlotLabel->FormBox[
    StyleBox[
    "\"\\!\\(\\*SubscriptBox[\\(gradPdual\\), \\(x\\)]\\)\"", 16, Bold, 
     StripOnInput -> False], TraditionalForm],
  PlotRange->{All, All, All},
  PlotRangePadding->{Automatic, Automatic, Automatic},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{0.5348161391914649, -2.584617363662398, 2.1174807627733307`},
  ViewVertical->{-0.12680048670211413`, 0.6127914167784662, 
   0.7800053308117497}]], "Output",
 CellChangeTimes->{{3.930017979466152*^9, 3.9300180075465593`*^9}, 
   3.930018119363324*^9, 3.930023503279351*^9, 3.9300235489187393`*^9, {
   3.9300237018069096`*^9, 3.930023723217043*^9}, {3.930023764877325*^9, 
   3.930023767927127*^9}, 3.9300238023686714`*^9, 3.930023865700306*^9, {
   3.930023946979869*^9, 3.930023974396719*^9}, 3.9300240110120687`*^9, {
   3.9300240756326227`*^9, 3.9300241118681326`*^9}, {3.9300287536305265`*^9, 
   3.930028776738468*^9}, 3.93002911853412*^9, 3.930029153565325*^9, {
   3.930030750003162*^9, 3.9300307978345633`*^9}, {3.930030834661805*^9, 
   3.9300308526250143`*^9}, {3.930030892903261*^9, 3.930030956460583*^9}, 
   3.9300318789913206`*^9, 3.9300339258642783`*^9, 3.930034204394396*^9, 
   3.9300345124862094`*^9, 3.930034598399307*^9, 3.9300357550261*^9, 
   3.9300358657264743`*^9, 3.9300359137002583`*^9, {3.9300360000489745`*^9, 
   3.930036026419873*^9}, 3.930036095342985*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"43dcb3f5-7fbc-4a27-a7f6-89d056136446"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
R71hhifwuWTAT+JEGu6N9+0k/wfWnXWU
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[Polygon3DBox[CompressedData["
1:eJxVm3kcl1P2x5/nEhq7iRhFpLFkGUrKSCWNMZGKrEnFhNRkHaJkH2XJlCVE
lsYyaChrZFcxNZWMtbEluyxjZhhj5nfenff3ld8f53XP9z7n3ufc+5x7zuec
5/luMXhE39+UqqpGNamqVaL9UV1V/F4/6MFgortqFvRI8KtFu2HQj6uUXTXo
pehfPdqNgjYOWiOoaVDzKvv5/RPmDVozaIMq52f8JspybVOvrxXUKmg9dVg3
9FmnznGXR/uu92+h7NpBz8WENwUtDf7uaO8K2in4KSX1ahP0cPAbxPj1g36q
vui4jXqjy67Kcv0nJXXaLuiOkvdrG/S34FtGu33QDlXymwW9EfNuGrRJULM6
17xtlXps7pqaR/9GQVtwv5hn7eDXCro76PSg96J/a/VCpw7qQt9mcb1lnfr2
irE9gt4P/uhot2TOoM1K6t8+aP/guwctC35xtHODPgh+Tkndf67u7N86QXv8
YE33xlxbBX0Y/N7Ox970sEWvh+L69kGfBt/T+Zjj1zH/ztG/PPhPHNs9aHr0
tQn6iGcR7Q5BnwX/WbR7BP0saPMYu220H6N/UOegPdmD6O8Y/V/yDOqcr2/Q
gc6NjhNCpi17EbRj0A5Bv4j+z9XtV0FPxNjdg74K/iDHsaa7gx4LejSoXZ2y
h3Hv4A+N9tigI9WpV1CX6P862gPYs7jPFfF7t6Cj1Ym5BwX1Uc/+Qfs5/jdB
A4KOCvqHMgPRLeZ5HLsNOlx92ddjnK9f0HFV6oNux9sie0LQEd7n56HHwTyH
oOHqzf0G/2DPtot7dA65vwc/zHHIjVAv9DnJNTBuWtCNQVOCTqlyneh1qi33
Os12SNBvbdm3s9SP+5zsfIw/3eus6Qzb473P5UHjg84MGur4C70Hc49R1xOD
zrFF33Ntuc95tug72r1g70epC7/P9zrruMCWe5ytLPe4yHui719K/r4qqGud
c10S9LOS97g0aK86x18W9HpJXVnP76P/n95znGs7y3WOcR1X2LKOsUEjlfu9
fazpd+rCnl2tfvRNCrrYcb+Ke+1b532eifa8oG+C/5f7eGXQL6KvR53rPjH0
7BX8fkHzg38q6Nvo/zx+vx/UIejJkuu4wf0eqH38Pa71C9onqE/I7Bv0XfTv
VnKfpga9UlLXPwTtGnz/kP1v8P+OdnbQgUG3x+9rXMfz8fuQoP8E3yfa3nXu
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
cH7yNXJEcslGXooMmAwZsBg6nWg/WG+Ye7LQfuzwRyXroWCJvYI/tU4bheDf
rhK7geWApBeUfE/82zrvf7I6XOpv8kdyL+qrO1eJYeDBYHepA+tqGXO85X3x
tfhcfH6bku93iOPUYImF+Py28uRE64TM0jrj1AMl64DElLWCf9ux25Z8j4sM
dU5iGL59i+h/t07s0c5+cqULS9ZS6af2iK8/RB8PT4xYr2QNCB/YruR7Jviv
jBnEi6tKvn9FH3Imak3X6bvg8c/rl6xD4QPbB/+N/I9L1mrwyZNKvkfhvHOO
LtImN4y+b+vsx1bpJ7+gpjFWW6UecrG2tFH0/6/OMzXE/hna8lhtHhw83meE
vVEvaNjIJdrPJSVrEzznS0vaCu8xwM7UI7C7ziXfFXGvd6us42/p/PBgb54L
OIf4+4b3BZcSu6mNEtNX1Nzq9L3EQHjiIPWWCdo/Nj5BW4KfqM2Dga/U9rA7
eLAz+BdMvIlnaJzzYIf0g/2I49dqb1uIUcGf4D7wH3V4MCR8V20VHNmtSjzI
WOrz4BrWArYBt4HxqHuDc5kTDLyj/eAKcBlYjVo62HW6+oNfwHNgG957gofA
otjYje4V2GSKNkg8JHYSH9s79gttc4rn6zztkvgM9pvsudjffmyVWHCb9kbs
AieAGTqIGfBXxCdiFrXBw+Tx57w/JY4S89sb64nLk4xNfzQmMP9/tbeJPkfi
A/GJWiK1GnKVZfrtO7VnfCp+lth6gjzPEb+CfyFekKfeo10RExhbtJe7vBe2
cbf22dk4gm9cz35sZpD63Ouz+5P20FqeWg35B/kbOcjG8h9qb9O0q03Vh7WQ
T92nPGPv067ONv4Si6gvTbef+tIMefK0+51za/mP5R/QDj+S/1ibfFB7Jqch
T2vkIvDkIOQX5Ggdq/SvyFP/GGQ/dostPabNkw88oq2Ss5BLcJaXyy/Xnh/V
rkbLk3+QK81ST2pQj2mfrZ2zk/Y2VxujJgNPfQZcD+7/Upsn5+HsUBd6Qvsn
h3lSfRpYH4wP/sen48/BtuDdRn0XfqLnAoyOf/5CPblXN/u/cewc5TlrYNBv
5Z/Tzg+Qpx/8CBbHj+0tz7no4Fp6u945rrG7c4JpwZKco5urxHrg2mu1c2I5
MR/8/IL9yMBzHsGQ4GnOMjn7n+1Ht3nquarYjzNY5DmbYDcw8U1V4sV5yvS1
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
xK0W+hb4dvp5vmfgzBKvqKe/o28hFuIf8BVXqBtxkvo7sZKaIWOpMZ6lPuBz
ziz67FVlDnuldo7Nw4PNyH+vco3EGGJNA5dNUB/2ARkwFfns1Z5B8DZYm/8C
cDbpJ8aR6xELiYPkZddqP5xleLAHjh/MMc2Yc537iX0SHx9xLZO0Q/Ks633W
PHf46eIOvq2cq/1P9lngA6kTsTfgd/7vwPf4fB/I/x+Igy/L858BWq4tdf/B
ELzrYp/BJbzTInbc7Fj2+xb3h3n+6j3o51myl3wzyPdA+Hy+veK7T7755PtD
eHATNanb7Od/OvCcU8byvT7/TyCHo17J3rO+292fA+V7uvdT3X/+z8BYcqAJ
6tPFGIQ+1Kj5loj/Faz4Nl5+T9u75Re7hrbOd6drwc6Q2cn2HuV5f/SMuu1j
P7K8W+KbXv5DxPe94Fowakf5VYzzYAVi/aHy4AKI/8Ty/dVrJcdPNc4SR4mD
R8lzRvimC3mwBPkLcXG58Yh4g4/6QL+AT8APPKD9D1WGGMT/dvhfzaq2zMu7
KmIsc7b2Xg+q28PKNPR8teSa+S8K/wVq4hkBC5KT8F/gmdoe7aOOZb2PaofY
02PaG2P4pn+I881UfjNlsG3aWcpz/RHn727/Zu41e8gzWRLtG2XlN+W0fKvI
95NP2bdEnm9LHlf/xjvQx+W5zhjq28Snpx1L/MIPHKxdPKttUNP4pGQuOdO9
YL3EKd6jN87EbM/CW9G+WfKbbL7Nfl4bvsmxrBEMxHW+e31eud21t9d8Fm/Z
jz3zPTzf6PMtKt+T8x05Z3CePHGZuD5Pnr556naHY/gOFDt43nuxD/PdK+r2
892TB5VnfnIy7nuVzxe/wf+fwOHkFeRr+Aa+BW/kVYvcB9oX5fk/10va1wLH
XqmfedE5WOti18u8C7zvnfZ/4B4scCy6vFxW+kN4dOR/A684FruG/4P3/6vy
tC+5lle0/6me+1eV308b6GLfa8pQA8TPE7Oe1Cb5fwPtEvfzKXmu810o/93C
z73pc2WNrzv2MvuR2V7ZN5Xh+uvOP8d+ZKiTvFOyjk6darn6UF/6vGQuTF3o
w5I1IuokH5XEDNQVPy5ZY5mrPsxNbv5pyVoBefZnJXPtMerKN1/Udt4uWef5
oKQctUpy/PdK5vt3eI1+anHvl6ytMo57t1EWvRs11WUlawKsCb1Z17slz94O
Yh5+wy8tuR5qPtf7eyfXin5nuFbGjHSt7NeZnmPGjFIv9mug92f9h7sHrOd8
94A1XOC+sjb29v8APozi1g==
           "]],
          Annotation[#, "Charting`Private`Tag$6709#1"]& ]],
        Lighting->"Neutral"]}, {}, {}, {}, {}}, 
     {GrayLevel[0], 
      Line3DBox[{653, 1, 598, 267, 16, 31, 46, 61, 76, 91, 106, 121, 136, 151,
        166, 181, 196, 370, 669, 211, 651, 396, 212, 213, 214, 215, 216, 217, 
       218, 219, 220, 221, 222, 223, 224, 372, 670, 225, 652, 397, 210, 195, 
       180, 165, 150, 135, 120, 105, 90, 75, 60, 45, 30, 269, 654, 15, 644, 
       374, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 373, 653},
       VertexColors->None], 
      Line3DBox[{480, 746, 408, 737, 479, 744, 478, 736, 480},
       VertexColors->None], 
      Line3DBox[{483, 747, 411, 739, 482, 745, 481, 738, 483},
       VertexColors->None], 
      Line3DBox[{505, 750, 421, 741, 504, 748, 503, 740, 505},
       VertexColors->None], 
      Line3DBox[{511, 751, 424, 743, 510, 749, 509, 742, 511},
       VertexColors->None]}},
    VertexColors->CompressedData["
1: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
3NKVoMpR6MSPcf4PUx1w7g==
     "],
    VertexNormals->CompressedData["
1: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
h6P8uyb0uu4IlxS1Px77ljRXODoGf56Njc/6VMLPeEPJs6016K97pEp0GwWu
cTodo92KIMPX5EXrz0gkMvM6i5+6rw8KnDpQtbUNxVeovd/fMgV7z8mNVfn1
wuPbenXXNnWhl8Z0NnRny+HgMZbk/UdngdYznkY3qwUufjtfX8BE7du/3O6Y
h/XC/k6lIR+3TqCYDkeGzmWi/X/3zlxJnAXbpuWzX190QPdEE1dDQRtsOjG8
qX77DBzdev/cmQkfEOkVExBo6AMnVbOucMYZiD5+KmqvZDZI/Lj3wlQ7GgX9
GKeIDxDwkZ6f9LM772z9jv3skTscpJ+1DT+uhuuGlv/qrHf/1c+EHiD9WlFT
LunX0u//82uheblkvXn2n4/b9ftfXUPJltSBzJL/8i11sf904KnrHxKfBN2E
HvazwTyZmXD8peKW5HECcgI9mGLiWpDylPztx9umUfDwlguvQ3rBm27L8aF4
Z2S13+eZ8iCBlhn5hhUZcyCr89P1i2vi0JwUuOXFU5AIbfe5jgst8NMl7pKp
kzQSaRy2ufCLQNyOeef37nu16vzUe2xfqVFzELgrxJp4NRLo+wBHqpB2IRgd
OnYYzzH32YyTc0z5G1fJOWY0x9lnyv+FQsmzJT1hx370kS+xzbJ7GoYOXOQf
2lMNa0IoYo/lSlCv3eWYe7sJ2Mc0noznevaz2wPwXO8hSzQ512MRbxbC/Zky
xUrB/XlH6O2vuD93CR//lbpuCpiuyt1oEq2FaZ+1wYp3BsGfaWfj+44g1CrL
PuDTSMCl/woUYjULoe9tdoeDrhi0/LdScpbq2ycbDLcoCbwCDjmenWFr4iAn
yrIqPp4C7wr5c65Kt4CAtjTJGwudbQ9h3ljd3U7yxloDVbW1Ac7w8ELvNxXM
NdLtvGcYcuDx6YglzAOb5rxJHnjBKYTkgV4Mb9paM+qggGAzCvpWCiImQwe0
BilwkWaS5GAaRj8XMQf7LNFKcjB9u/UBCnsq4eBUyOsDBQnQntzXmvCQgAun
bXY+eGKBMiudzTYUZSJejifj/tT14F+3z3dL2AOI+i1waPu7VMR0W8VwD9Uv
PFesdcK6vfo1InX7l4JNpG4vaD9G1q1q2sl6fd16sh52qKAC64TXfluPYJ3w
tvH+U6wTVjsf78waMuJ9FEsrSe6jUPE75D7K8Fl/Ctf9BcXJenfkv/2l1xJO
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
xRxgOVT5O+YATJUjbJgD2J9kaxPUbkG3zE/p6dxthipGxVpdw1lIEnlZg339
n9em5H2f8KJz5H0fF50eMieze6G6Cudk6CLYyZxMwjd/8jnrLB1WxM/52NcS
8jlvM4kifb3h5kOkr7f/HUX6+rf6x8j576Fvb/Xw/Lc0zo6c/3KwlpLz32Dn
/F48/zVnXSHnv6xf+Mi8DQuP8izO2yhdJMi8Tev1EXIuPLXjIenrz7FdJ329
E8/iIr5X5aWn74PvVZ12eUveq/pWYq6C71XdL4gAfK+KJWUDN75XZT3N0IDX
+ULuy494nf+49aobr3OzlzF1N9Uqwemy/IRY3ADct/F4U1w6Be0XAuYxxygK
M4zDHEPAuMMEc4wo81FynbCbTwTgdfJoaOc5vE50G96R+jn/SfwjrJ/3K7GT
+nm1ezSr9efABWGSy0l82S6OuZwi468ezOVWy9usdk/k6vXrZA5nUXL0DM7h
GB94RuZwlMT6LGJaK0Fuk/srAbdq0IyRs3k2tHq++oH9Bg08v0tiDtuF53fy
3mHk/M56tIn071m30sg5HQ/9MunfV8vh9JmZn8X+PVVdlPTvzXwzpH9fbb5m
N7zLGvv0SW+BEuzTKQXzhdinr6bbV8vt8LCzZuJc7vtBJx2cy00b3iSHc7lr
OyVUMA8MdDMdwTzwmzA3yQNzVe6Q/SeVy2wR9x/RH3Nk/1FdwxWC86WSNbGP
cL6U0fkWmS/tLxDUTMdzyCwN9avU8+p9Av8SE+MgaLA9InM1FYq/uHCu5j8H
QzJX42gZ5ZXUVIMMTnLxLK4bRfBKamDu1Dgcz3V7gus+Old243rfwql+XBcO
2ULyxuO10yRv7NSu+8cbdfeRfeNu5QZj3Ddc5+XJvnF+xJjM58TbB8jjfM7o
gYdkPufFn+E3eJ5SwPFvnvI65t88JULeuk7jwTDylTvEOCIzjiiLDSEq0m2w
Xs4rEecuPsgWKODcRdfxHjJ30d0tEop1yKOI76QO2W7+htQhq+mT1eYXH9US
OvGc8W7tkDieM/6ciFPCc8Yjn/g4MOdnrv7H+VV2/uP8+QSfP+b8tpetDmLO
70KjTnL+bZGmVlj3npf6Nz9qTvw3P1oflkDq3jf/0717/6d7hzR/LWD9yeFT
GYP1J7OtugvWn5Higr/DqkdQXHKRrhzVZ3zR3PxQf+MgpA+bkVy0eBffWcxF
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
kw==
     "]], {}},
  Axes->True,
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"y\"", TraditionalForm], 
    FormBox["\"gradPdual\"", TraditionalForm]},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{379.2805088910284, 306.64672024271766`},
  ImageSizeRaw->Automatic,
  Lighting->"Neutral",
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "RotationControl" -> 
    "Globe"},
  PlotLabel->FormBox[
    StyleBox[
    "\"\\!\\(\\*SubscriptBox[\\(gradPdual\\), \\(y\\)]\\)\"", 16, Bold, 
     StripOnInput -> False], TraditionalForm],
  PlotRange->{All, All, All},
  PlotRangePadding->{Automatic, Automatic, Automatic},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{0.5348161391914649, -2.584617363662398, 2.1174807627733307`},
  ViewVertical->{-0.12680048670211413`, 0.6127914167784662, 
   0.7800053308117497}]], "Output",
 CellChangeTimes->{{3.930017979466152*^9, 3.9300180075465593`*^9}, 
   3.930018119363324*^9, 3.930023503279351*^9, 3.9300235489187393`*^9, {
   3.9300237018069096`*^9, 3.930023723217043*^9}, {3.930023764877325*^9, 
   3.930023767927127*^9}, 3.9300238023686714`*^9, 3.930023865700306*^9, {
   3.930023946979869*^9, 3.930023974396719*^9}, 3.9300240110120687`*^9, {
   3.9300240756326227`*^9, 3.9300241118681326`*^9}, {3.9300287536305265`*^9, 
   3.930028776738468*^9}, 3.93002911853412*^9, 3.930029153565325*^9, {
   3.930030750003162*^9, 3.9300307978345633`*^9}, {3.930030834661805*^9, 
   3.9300308526250143`*^9}, {3.930030892903261*^9, 3.930030956460583*^9}, 
   3.9300318789913206`*^9, 3.9300339258642783`*^9, 3.930034204394396*^9, 
   3.9300345124862094`*^9, 3.930034598399307*^9, 3.9300357550261*^9, 
   3.9300358657264743`*^9, 3.9300359137002583`*^9, {3.9300360000489745`*^9, 
   3.930036026419873*^9}, 3.9300360956529565`*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"67d313d5-be94-43ea-94c9-0f60152eccb7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"sigmaxTable", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"x", ",", "y"}], "}"}], ",", 
           RowBox[{"1", "/", 
            RowBox[{"Sqrt", "[", 
             RowBox[{"1", "+", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"Derivative", "[", 
                  RowBox[{"1", ",", "0"}], "]"}], "[", "pdualfun", "]"}], "[", 
                RowBox[{"x", ",", "y"}], "]"}], "^", "2"}]}], "]"}]}]}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"-", "2"}], ",", "2", ",", "0.2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"y", ",", 
           RowBox[{"-", "2"}], ",", "2", ",", "0.2"}], "}"}]}], "]"}], ",", 
       "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"sigmayTable", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"x", ",", "y"}], "}"}], ",", 
           RowBox[{"1", "/", 
            RowBox[{"Sqrt", "[", 
             RowBox[{"1", "+", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"Derivative", "[", 
                  RowBox[{"0", ",", "1"}], "]"}], "[", "pdualfun", "]"}], "[", 
                RowBox[{"x", ",", "y"}], "]"}], "^", "2"}]}], "]"}]}]}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"-", "2"}], ",", "2", ",", "0.2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"y", ",", 
           RowBox[{"-", "2"}], ",", "2", ",", "0.2"}], "}"}]}], "]"}], ",", 
       "1"}], "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"sigmaxTable", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x", ",", "y", ",", 
           RowBox[{"1", "/", 
            RowBox[{"Sqrt", "[", 
             RowBox[{"1", "+", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"Derivative", "[", 
                  RowBox[{"1", ",", "0"}], "]"}], "[", "pdualfun", "]"}], "[", 
                RowBox[{"x", ",", "y"}], "]"}], "^", "2"}]}], "]"}]}]}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"-", "2"}], ",", "2", ",", "0.2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"y", ",", 
           RowBox[{"-", "2"}], ",", "2", ",", "0.2"}], "}"}]}], "]"}], ",", 
       "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sigmayTable", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x", ",", "y", ",", 
           RowBox[{"1", "/", 
            RowBox[{"Sqrt", "[", 
             RowBox[{"1", "+", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"Derivative", "[", 
                  RowBox[{"0", ",", "1"}], "]"}], "[", "pdualfun", "]"}], "[", 
                RowBox[{"x", ",", "y"}], "]"}], "^", "2"}]}], "]"}]}]}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"-", "2"}], ",", "2", ",", "0.2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"y", ",", 
           RowBox[{"-", "2"}], ",", "2", ",", "0.2"}], "}"}]}], "]"}], ",", 
       "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"xyTable", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"x", ",", "y"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"-", "2"}], ",", "2", ",", "0.2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"y", ",", 
            RowBox[{"-", "2"}], ",", "2", ",", "0.2"}], "}"}]}], "]"}], ",", 
        "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"sigmaxTable", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", "/", 
            RowBox[{"Sqrt", "[", 
             RowBox[{"1", "+", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"Derivative", "[", 
                  RowBox[{"1", ",", "0"}], "]"}], "[", "pdualfun", "]"}], "[", 
                RowBox[{"x", ",", "y"}], "]"}], "^", "2"}]}], "]"}]}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"-", "2"}], ",", "2", ",", "0.2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"y", ",", 
            RowBox[{"-", "2"}], ",", "2", ",", "0.2"}], "}"}]}], "]"}], ",", 
        "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"sigmayTable", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", "/", 
            RowBox[{"Sqrt", "[", 
             RowBox[{"1", "+", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"Derivative", "[", 
                  RowBox[{"0", ",", "1"}], "]"}], "[", "pdualfun", "]"}], "[", 
                RowBox[{"x", ",", "y"}], "]"}], "^", "2"}]}], "]"}]}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"-", "2"}], ",", "2", ",", "0.2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"y", ",", 
            RowBox[{"-", "2"}], ",", "2", ",", "0.2"}], "}"}]}], "]"}], ",", 
        "1"}], "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"sigmaxTable", " ", "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "+", 
          RowBox[{"dxpdualfunTable", "^", "2"}]}], "]"}]}], 
       "\[IndentingNewLine]", "sigmayTable"}], " ", "=", " ", 
      RowBox[{"1", "/", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"1", "+", 
         RowBox[{"dypdualfunTable", "^", "2"}]}], "]"}]}]}]}], 
    "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.9300286481488976`*^9, 3.930028695373517*^9}, {
  3.93002939724024*^9, 3.9300294312521505`*^9}, {3.930029598405428*^9, 
  3.9300296353193765`*^9}, {3.930030055459465*^9, 3.9300300583028855`*^9}, {
  3.930030566277111*^9, 3.930030578800128*^9}, {3.9300306894514093`*^9, 
  3.930030721656289*^9}, {3.930031084281546*^9, 3.930031241348768*^9}, {
  3.9300318258348265`*^9, 3.930031839747301*^9}, {3.9300319953304844`*^9, 
  3.9300320077097583`*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"1f12e091-60e0-4ea4-9ab3-463f1a45b638"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction", "femdmval", 
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"1.`\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \\\"1.`\\\"}]}], \\\"}\\\"}]\\) \
lies outside the range of data in the interpolating function.\"", 2, 43, 2, 
   34753929315528946095, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.9300306557064896`*^9, 3.930030973203949*^9, 3.9300311216238785`*^9, {
   3.9300311650854793`*^9, 3.930031190615571*^9}, 3.930031233690179*^9, 
   3.930031889106096*^9, 3.930032008544094*^9, 3.930033942501606*^9, 
   3.9300342081542006`*^9, 3.930034513336152*^9, 3.930034602060816*^9, 
   3.9300357685604553`*^9, 3.930035869267556*^9, 3.930035914820183*^9, {
   3.9300360011771765`*^9, 3.930036027558851*^9}, 3.9300360962329397`*^9},
 CellLabel->
  "During evaluation of \
In[43]:=",ExpressionUUID->"be5b401f-ba4d-4e64-aa5a-f1f4ce055ebe"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction", "femdmval", 
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"1.`\\\"}], \\\",\\\", \\\"1.`\\\"}], \\\"}\\\"}]\\) lies outside the \
range of data in the interpolating function.\"", 2, 43, 3, 
   34753929315528946095, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.9300306557064896`*^9, 3.930030973203949*^9, 3.9300311216238785`*^9, {
   3.9300311650854793`*^9, 3.930031190615571*^9}, 3.930031233690179*^9, 
   3.930031889106096*^9, 3.930032008544094*^9, 3.930033942501606*^9, 
   3.9300342081542006`*^9, 3.930034513336152*^9, 3.930034602060816*^9, 
   3.9300357685604553`*^9, 3.930035869267556*^9, 3.930035914820183*^9, {
   3.9300360011771765`*^9, 3.930036027558851*^9}, 3.9300360962729373`*^9},
 CellLabel->
  "During evaluation of \
In[43]:=",ExpressionUUID->"6b0986a8-ab74-4664-b94c-22502b96b7af"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction", "femdmval", 
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"1.`\\\", \\\",\\\", \
RowBox[{\\\"-\\\", \\\"1.`\\\"}]}], \\\"}\\\"}]\\) lies outside the range of \
data in the interpolating function.\"", 2, 43, 4, 34753929315528946095, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.9300306557064896`*^9, 3.930030973203949*^9, 3.9300311216238785`*^9, {
   3.9300311650854793`*^9, 3.930031190615571*^9}, 3.930031233690179*^9, 
   3.930031889106096*^9, 3.930032008544094*^9, 3.930033942501606*^9, 
   3.9300342081542006`*^9, 3.930034513336152*^9, 3.930034602060816*^9, 
   3.9300357685604553`*^9, 3.930035869267556*^9, 3.930035914820183*^9, {
   3.9300360011771765`*^9, 3.930036027558851*^9}, 3.9300360966629*^9},
 CellLabel->
  "During evaluation of \
In[43]:=",ExpressionUUID->"273029eb-267f-4ee1-bc61-7f31753f1a6b"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"InterpolatingFunction\\\
\", \\\"::\\\", \\\"femdmval\\\"}], \\\"MessageName\\\"]\\) will be \
suppressed during this calculation.\"", 2, 43, 5, 34753929315528946095, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.9300306557064896`*^9, 3.930030973203949*^9, 3.9300311216238785`*^9, {
   3.9300311650854793`*^9, 3.930031190615571*^9}, 3.930031233690179*^9, 
   3.930031889106096*^9, 3.930032008544094*^9, 3.930033942501606*^9, 
   3.9300342081542006`*^9, 3.930034513336152*^9, 3.930034602060816*^9, 
   3.9300357685604553`*^9, 3.930035869267556*^9, 3.930035914820183*^9, {
   3.9300360011771765`*^9, 3.930036027558851*^9}, 3.9300360966928897`*^9},
 CellLabel->
  "During evaluation of \
In[43]:=",ExpressionUUID->"d8f585c9-a192-4962-953f-b9d054c6f368"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction", "femdmval", 
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"1.`\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \\\"1.`\\\"}]}], \\\"}\\\"}]\\) \
lies outside the range of data in the interpolating function.\"", 2, 44, 6, 
   34753929315528946095, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.9300306557064896`*^9, 3.930030973203949*^9, 3.9300311216238785`*^9, {
   3.9300311650854793`*^9, 3.930031190615571*^9}, 3.930031233690179*^9, 
   3.930031889106096*^9, 3.930032008544094*^9, 3.930033942501606*^9, 
   3.9300342081542006`*^9, 3.930034513336152*^9, 3.930034602060816*^9, 
   3.9300357685604553`*^9, 3.930035869267556*^9, 3.930035914820183*^9, {
   3.9300360011771765`*^9, 3.930036027558851*^9}, 3.93003609714287*^9},
 CellLabel->
  "During evaluation of \
In[43]:=",ExpressionUUID->"0ae6142c-9e06-4ba6-a2cf-ca8866a28ceb"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction", "femdmval", 
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"1.`\\\"}], \\\",\\\", \\\"1.`\\\"}], \\\"}\\\"}]\\) lies outside the \
range of data in the interpolating function.\"", 2, 44, 7, 
   34753929315528946095, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.9300306557064896`*^9, 3.930030973203949*^9, 3.9300311216238785`*^9, {
   3.9300311650854793`*^9, 3.930031190615571*^9}, 3.930031233690179*^9, 
   3.930031889106096*^9, 3.930032008544094*^9, 3.930033942501606*^9, 
   3.9300342081542006`*^9, 3.930034513336152*^9, 3.930034602060816*^9, 
   3.9300357685604553`*^9, 3.930035869267556*^9, 3.930035914820183*^9, {
   3.9300360011771765`*^9, 3.930036027558851*^9}, 3.9300360971728673`*^9},
 CellLabel->
  "During evaluation of \
In[43]:=",ExpressionUUID->"54d68201-2005-4ee0-af3c-8e06ad887515"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction", "femdmval", 
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"1.`\\\", \\\",\\\", \
RowBox[{\\\"-\\\", \\\"1.`\\\"}]}], \\\"}\\\"}]\\) lies outside the range of \
data in the interpolating function.\"", 2, 44, 8, 34753929315528946095, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.9300306557064896`*^9, 3.930030973203949*^9, 3.9300311216238785`*^9, {
   3.9300311650854793`*^9, 3.930031190615571*^9}, 3.930031233690179*^9, 
   3.930031889106096*^9, 3.930032008544094*^9, 3.930033942501606*^9, 
   3.9300342081542006`*^9, 3.930034513336152*^9, 3.930034602060816*^9, 
   3.9300357685604553`*^9, 3.930035869267556*^9, 3.930035914820183*^9, {
   3.9300360011771765`*^9, 3.930036027558851*^9}, 3.9300360975528307`*^9},
 CellLabel->
  "During evaluation of \
In[43]:=",ExpressionUUID->"eef220fe-5b01-4b58-8664-8824503493fd"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"InterpolatingFunction\\\
\", \\\"::\\\", \\\"femdmval\\\"}], \\\"MessageName\\\"]\\) will be \
suppressed during this calculation.\"", 2, 44, 9, 34753929315528946095, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.9300306557064896`*^9, 3.930030973203949*^9, 3.9300311216238785`*^9, {
   3.9300311650854793`*^9, 3.930031190615571*^9}, 3.930031233690179*^9, 
   3.930031889106096*^9, 3.930032008544094*^9, 3.930033942501606*^9, 
   3.9300342081542006`*^9, 3.930034513336152*^9, 3.930034602060816*^9, 
   3.9300357685604553`*^9, 3.930035869267556*^9, 3.930035914820183*^9, {
   3.9300360011771765`*^9, 3.930036027558851*^9}, 3.9300360975828447`*^9},
 CellLabel->
  "During evaluation of \
In[43]:=",ExpressionUUID->"550dca76-deb0-4cf2-bf93-3e0103074a48"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"cleansigmaxTable", "=", 
   RowBox[{"Select", "[", 
    RowBox[{"sigmaxTable", ",", 
     RowBox[{
      RowBox[{"FreeQ", "[", 
       RowBox[{"#", ",", "Indeterminate"}], "]"}], "&"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cleansigmayTable", "=", 
   RowBox[{"Select", "[", 
    RowBox[{"sigmayTable", ",", 
     RowBox[{
      RowBox[{"FreeQ", "[", 
       RowBox[{"#", ",", "Indeterminate"}], "]"}], "&"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.9300335540987124`*^9, 3.9300335550186577`*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"69f48fd4-40d2-4d15-b1aa-e8a123095406"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"data", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "33"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "80"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5", ",", "286"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"10", ",", "771"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"15", ",", "1382"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"20", ",", "2087"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"25", ",", "2867"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"30", ",", "3707"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"40", ",", "5526"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"50", ",", "7470"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"60", ",", "9482"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"70", ",", "11507"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"80", ",", "13495"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"90", ",", "15391"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"100", ",", "17313"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"110", ",", "18631"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"120", ",", "19752"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"125", ",", "20064"}], "}"}]}], "}"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"sigmaxPoly", "=", 
     RowBox[{"LinearModelFit", "[", 
      RowBox[{"data", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "^", "3"}], ",", " ", 
         RowBox[{"x", "^", "2"}], ",", "x", ",", "1"}], "}"}], ",", 
       RowBox[{"{", "x", "}"}]}], "]"}]}], ";"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"data", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"cleansigmaxTable", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Length", "[", "xyTable", "]"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"sigmaxPoly", "=", 
     RowBox[{"NonlinearModelFit", "[", 
      RowBox[{"xyTable", ",", "sigmaxTable", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"a", " ", 
          RowBox[{"x", "^", "3"}]}], ",", " ", 
         RowBox[{"b", " ", 
          RowBox[{"y", "^", "3"}]}], ",", 
         RowBox[{"d", " ", 
          RowBox[{"x", "^", "2"}]}], ",", 
         RowBox[{"e", " ", 
          RowBox[{"y", "^", "2"}]}], ",", 
         RowBox[{"f", " ", "yx"}], ",", 
         RowBox[{"g", " ", "y"}], ",", 
         RowBox[{"h", " ", "x"}], ",", "i"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "a", ",", " ", "b", ",", " ", "d", ",", " ", "e", ",", " ", "f", ",", 
         " ", "g", ",", " ", "h", ",", " ", "i"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}], ";"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"sigmaxPoly", "=", 
    RowBox[{"NonlinearModelFit", "[", 
     RowBox[{"cleansigmaxTable", ",", 
      RowBox[{
       RowBox[{"a", " ", 
        RowBox[{"x", "^", "3"}]}], "+", " ", 
       RowBox[{"b", " ", 
        RowBox[{"y", "^", "3"}]}], "+", 
       RowBox[{"d", " ", 
        RowBox[{"x", "^", "2"}]}], "+", 
       RowBox[{"e", " ", 
        RowBox[{"y", "^", "2"}]}], "+", 
       RowBox[{"f", " ", "y", " ", "x"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"a", ",", " ", "b", ",", " ", "d", ",", " ", "e", ",", "f"}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"sigmaxPoly", "=", 
    RowBox[{"Normal", "[", 
     RowBox[{"NonlinearModelFit", "[", 
      RowBox[{"cleansigmaxTable", ",", 
       RowBox[{
        RowBox[{"a", "/", 
         RowBox[{"(", 
          RowBox[{"b", "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"x", "-", "1"}], ")"}], "2"], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"y", "-", "1"}], ")"}], "2"]}], ")"}]}], "+", 
        RowBox[{"d", "/", 
         RowBox[{"(", 
          RowBox[{"e", "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"x", "+", "1"}], ")"}], "2"], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"y", "-", "1"}], ")"}], "2"]}], ")"}]}], "+", 
        RowBox[{"f", "/", 
         RowBox[{"(", 
          RowBox[{"g", "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"x", "-", "1"}], ")"}], "2"], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"y", "+", "1"}], ")"}], "2"]}], ")"}]}], "+", 
        RowBox[{"h", "/", 
         RowBox[{"(", 
          RowBox[{"i", "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"x", "+", "1"}], ")"}], "2"], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"y", "+", "1"}], ")"}], "2"]}], ")"}]}], "+", "1"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "a", ",", " ", "b", ",", " ", "d", ",", " ", "e", ",", " ", "f", ",", 
         " ", "g", ",", " ", "h", ",", " ", "i"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}]}], "]"}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"sigmayPoly", "=", 
    RowBox[{"Normal", "[", 
     RowBox[{"NonlinearModelFit", "[", 
      RowBox[{"cleansigmayTable", ",", 
       RowBox[{
        RowBox[{"a", "/", 
         RowBox[{"(", 
          RowBox[{"b", "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"x", "-", "1"}], ")"}], "2"], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"y", "-", "1"}], ")"}], "2"]}], ")"}]}], "+", 
        RowBox[{"d", "/", 
         RowBox[{"(", 
          RowBox[{"e", "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"x", "+", "1"}], ")"}], "2"], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"y", "-", "1"}], ")"}], "2"]}], ")"}]}], "+", 
        RowBox[{"f", "/", 
         RowBox[{"(", 
          RowBox[{"g", "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"x", "-", "1"}], ")"}], "2"], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"y", "+", "1"}], ")"}], "2"]}], ")"}]}], "+", 
        RowBox[{"h", "/", 
         RowBox[{"(", 
          RowBox[{"i", "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"x", "+", "1"}], ")"}], "2"], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"y", "+", "1"}], ")"}], "2"]}], ")"}]}], "+", "1"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "a", ",", " ", "b", ",", " ", "d", ",", " ", "e", ",", " ", "f", ",", 
         " ", "g", ",", " ", "h", ",", " ", "i"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}]}], "]"}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"sigmaxPoly", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"InterpolatingPolynomial", "[", 
        RowBox[{"cleansigmaxTable", ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "y"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
       "sigmayPoly"}], "=", 
      RowBox[{"InterpolatingPolynomial", "[", 
       RowBox[{"cleansigmayTable", ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}]}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.930029192943952*^9, 3.9300292538463864`*^9}, {
  3.930029621945577*^9, 3.930029624617631*^9}, {3.9300303025235004`*^9, 
  3.930030390462388*^9}, {3.9300304290270305`*^9, 3.930030499440427*^9}, {
  3.930030991898981*^9, 3.930031039468195*^9}, {3.9300312593386283`*^9, 
  3.930031271072775*^9}, {3.9300313256087027`*^9, 3.930031448586804*^9}, {
  3.930031762484057*^9, 3.9300317764694953`*^9}, {3.9300319034802694`*^9, 
  3.9300319828419557`*^9}, {3.930032035850852*^9, 3.930032077435934*^9}, {
  3.930032113035762*^9, 3.930032137655079*^9}, {3.930032193697838*^9, 
  3.9300322513041277`*^9}, {3.930033323321587*^9, 3.930033391241542*^9}, {
  3.9300334310157967`*^9, 3.9300334651776743`*^9}, {3.930033501439387*^9, 
  3.930033520999563*^9}, {3.930033562159747*^9, 3.930033568367571*^9}, {
  3.9300338122099915`*^9, 3.9300338206197777`*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"5267225d-873a-4788-a9d6-378b4030177c"],

Cell[BoxData[
 RowBox[{"1", "-", 
  FractionBox["0.002200915192890138`", 
   RowBox[{
    RowBox[{"-", "0.0054478861407391`"}], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "x"}], ")"}], "2"], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "y"}], ")"}], "2"]}]], "-", 
  FractionBox["0.0004095242469861481`", 
   RowBox[{
    RowBox[{"-", "0.02205124363593609`"}], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "x"}], ")"}], "2"], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "y"}], ")"}], "2"]}]], "-", 
  FractionBox["0.0004102479297269914`", 
   RowBox[{
    RowBox[{"-", "0.0220337723899167`"}], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "x"}], ")"}], "2"], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "y"}], ")"}], "2"]}]], "-", 
  FractionBox["0.002208415823916847`", 
   RowBox[{
    RowBox[{"-", "0.005474183712063484`"}], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "x"}], ")"}], "2"], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "y"}], ")"}], "2"]}]]}]], "Output",
 CellChangeTimes->{
  3.930033821249735*^9, 3.93003394927379*^9, 3.9300342147754126`*^9, 
   3.9300345143360868`*^9, 3.930034608563199*^9, 3.9300357744700775`*^9, 
   3.930035875248962*^9, 3.930035916160096*^9, {3.9300360028970604`*^9, 
   3.9300360289587617`*^9}, 3.9300360978728137`*^9},
 CellLabel->"Out[47]=",ExpressionUUID->"b874abcd-3586-43c1-aa60-7bb6b9b0a266"],

Cell[BoxData[
 RowBox[{"1", "-", 
  FractionBox["0.004549567996374669`", 
   RowBox[{"0.03407640028941911`", "\[VeryThinSpace]", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "x"}], ")"}], "2"], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "y"}], ")"}], "2"]}]], "-", 
  FractionBox["0.024545190995172717`", 
   RowBox[{"1.259544447219946`", "\[VeryThinSpace]", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "x"}], ")"}], "2"], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "y"}], ")"}], "2"]}]], "-", 
  FractionBox["0.024810707980434443`", 
   RowBox[{"1.2733934623411851`", "\[VeryThinSpace]", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "x"}], ")"}], "2"], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "y"}], ")"}], "2"]}]], "-", 
  FractionBox["0.004605305882977418`", 
   RowBox[{"0.034472319372528634`", "\[VeryThinSpace]", "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "x"}], ")"}], "2"], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "y"}], ")"}], "2"]}]]}]], "Output",
 CellChangeTimes->{
  3.930033821249735*^9, 3.93003394927379*^9, 3.9300342147754126`*^9, 
   3.9300345143360868`*^9, 3.930034608563199*^9, 3.9300357744700775`*^9, 
   3.930035875248962*^9, 3.930035916160096*^9, {3.9300360028970604`*^9, 
   3.9300360289587617`*^9}, 3.9300360979028206`*^9},
 CellLabel->"Out[48]=",ExpressionUUID->"d599c99c-8639-4488-9ff7-10fbd946ba0a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Plot3D", "[", 
  RowBox[{"sigmaxPoly", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"RegionFunction", "->", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
      RowBox[{"RegionMember", "[", 
       RowBox[{"\[CapitalOmega]", ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}], "]"}]}], ",", 
   RowBox[{"PlotRange", "->", "All"}], ",", 
   RowBox[{"Mesh", "->", "None"}], ",", 
   RowBox[{"ColorFunction", "->", "\"\<TemperatureMap\>\""}], ",", " ", 
   RowBox[{"PlotLabel", "->", 
    RowBox[{"Style", "[", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(\[Sigma]\), \(xx\)]\)\>\"", ",", "16", ",", 
      "Bold"}], "]"}]}], ",", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<\[Sigma]\>\""}], 
     "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot3D", "[", 
  RowBox[{"sigmayPoly", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"RegionFunction", "->", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
      RowBox[{"RegionMember", "[", 
       RowBox[{"\[CapitalOmega]", ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}], "]"}]}], ",", 
   RowBox[{"PlotRange", "->", "All"}], ",", 
   RowBox[{"Mesh", "->", "None"}], ",", 
   RowBox[{"ColorFunction", "->", "\"\<TemperatureMap\>\""}], ",", " ", 
   RowBox[{"PlotLabel", "->", 
    RowBox[{"Style", "[", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(\[Sigma]\), \(yy\)]\)\>\"", ",", "16", ",", 
      "Bold"}], "]"}]}], ",", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<\[Sigma]\>\""}], 
     "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"\[Sigma]", "[", 
      RowBox[{"x", ",", "y"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"RegionFunction", "->", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
      RowBox[{"RegionMember", "[", 
       RowBox[{"\[CapitalOmega]dual", ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}], "]"}]}], ",", 
   RowBox[{"PlotRange", "->", "All"}], ",", 
   RowBox[{"Mesh", "->", "None"}], ",", 
   RowBox[{"ColorFunction", "->", "\"\<TemperatureMap\>\""}], ",", " ", 
   RowBox[{"PlotLabel", "->", 
    RowBox[{"Style", "[", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(\[Sigma]\), \(xx\)]\)\>\"", ",", "16", ",", 
      "Bold"}], "]"}]}], ",", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<\[Sigma]\>\""}], 
     "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"\[Sigma]", "[", 
      RowBox[{"x", ",", "y"}], "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"RegionFunction", "->", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
      RowBox[{"RegionMember", "[", 
       RowBox[{"\[CapitalOmega]dual", ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}], "]"}]}], ",", 
   RowBox[{"PlotRange", "->", "All"}], ",", 
   RowBox[{"Mesh", "->", "None"}], ",", 
   RowBox[{"ColorFunction", "->", "\"\<TemperatureMap\>\""}], ",", " ", 
   RowBox[{"PlotLabel", "->", 
    RowBox[{"Style", "[", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(\[Sigma]\), \(yy\)]\)\>\"", ",", "16", ",", 
      "Bold"}], "]"}]}], ",", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<\[Sigma]\>\""}], 
     "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.930029981201828*^9, 3.930030028304673*^9}, {
  3.93003228597122*^9, 3.930032339310068*^9}, {3.93003237012183*^9, 
  3.930032484996487*^9}, {3.9300331180071726`*^9, 3.9300331608410735`*^9}, {
  3.9300335801884513`*^9, 3.930033597873233*^9}, {3.9300338351493607`*^9, 
  3.9300338467620316`*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"2724edcd-6902-48b0-b639-3bb98cd3e24b"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1:eJxlmA04lWkax4VqTGr7YNTMxlDElpKaiuQuKhK11froY0YoHxN97Daj1Fb6
mHxUM4mibDjElEYtpQ31XmxFaDfHzviKeBvOnnMch3MIR9jeveZ+n9P7uC7X
e52f57ye87v+537v5zYP3Ld5t66Ojs7g+1+997/mzV4Fo6OjDF4VXb5Wq/qU
EHzwbkphxBDPx9zvCTFVKeHWhGknIpre8vzRZ76eiV1K6BJ9Ezx7nYrndm05
Zq/lStj9//vIeS7PSZiQLMf1LM+H996zKVYgF/Ncb17+pzndStD57Qf5AbbV
xETNrwfkt8+lLsjv5e/P83esKDS9j98Pz6MlDxs93vL75/moTqrEsp//vDz/
29qkSo8B3g/PRfoW9YcHlfia5+XO+hNPaHjOoFcL47gIzie+xqtEKYub3kk8
I3+m+NOuoDfEM/LkXKP4zkbiGXn/4gs/JDQSz8hjZ2SIvVjiGfmx4ksZtjLi
GXncyapPbJTEM/KqGctNL/cQz8iPr5ylma8inpGnNVSYTlYRz8hvPq4JM1UT
z8hzo56dPEtyyPPAgnFLavqJZ/4+4bOmRhH/DPpL7wrexuUT1yFP3hQXwfnE
13i12VMY/lUV8Yx8bH1DlTSDeEZ+eMe7nKgM4hl50ap1HfqVxDPyHrf7w+pW
4hl5cVlA+w0Z8YwcgmoDmxTEM/Klj2J+nNxJPCP3yTwSObudeEY++6MDB3Z2
EM/InS0H7xh0E8/I8yyB5fyjZ+RJRV/uWD9APKMn553Wjtz3HT0jb/lziYjL
J74fubGDqEmaQTzjNaP5izF57xS8Z+SXkj+/Yf2eo2fkR41mrViXTjwj/+m2
ZcPbOuIZeU3X/CRNB/GMXHqnduIhGfGMvK84xkqHJZ6RV0xKGDrlSjwj/2/p
z7+8Wk08I3/99SfGAR3EM/KBUSN/MzXxTD6vv8aK5JxBH9uLdJcla3lGXjiy
8XGClmfkS5tP1URpeUYOqgml1lqe8Xp0U/nt+CHiGbm7tUHaxTTiGfkm/+Rf
zbQ8I//xde2akXbiGbnpm+MOW6TEM3I/w4a0B63EM/L64KaXc1yIZ+QXiqbP
PONKPCOfN9XUyqqdeEa+/6rj4BQV8Yw8cmtkjudbYZ5Z5j8V/9jHPY8+zDPL
ZHuOtdjACvPMMmPPBzmMrRTmmWXOZAXEcPn8MM8s831yzEvik+W5uODslepy
YZ5ZZte2gNvbWoR5Zplz3T31CRJhnlnm5/umA05UnllmP+OzqEcizDPLnE1Z
kfGwVZhnlpnoI7PXY4V5ZpkQ+dZxRp3CPLNMT1nwQnuVMM/v93lG5JzZJ/Qs
ZizrJadzuoWexcyivMrZ82VCz2Lmu8XtSb2tQs9iRlqe+21/ndCzmBFF6od/
Xif0LGbqvg0c4Xx+6FnMiN2zIy+1Cz2LmcjLZk4iqdCzmHH0kvq8pjyLmeqy
Vx4rZULPYuZirn+hn1ToWczEvGvbd0wm9CxmvP+443ybQuhZzMTdn7zvWo/Q
s5jpXzV8tLCXeMbPYb0l/B7XL6Fn5ONPiuTc8x09I/d+njCQLSOekXtVN74c
6iCeketZ/7BvtJ14Rp4VPv/eJZJPnm9223qb86kj+Km4uSz7mNZzELlhTXJF
tlbdQH4t0KDkmlaekc/Nrfb9uIN4Rv4q2zxgvIR4Ru4Xc9fw7zLiGfkzy6zC
hUriGTnL7N03U03lGezT908q6KXyDDOOhhy80kPlGWxtp4U1K6g8w7nSxJIo
GZVnSP9lVaO3lMoz/BobUOsso/IMs3pcA1tlVJ5BEi1elkPnGQbdL2y43k7l
GRKWJ6ojWqg8Q4ffXPvldVSe4WZv3YOp9VSeITRbpGvQRuUZxrt5nFguo/IM
drkmFne7qfoMt1x8EzL6qPoMIyd2Gi5UUfUZqsx7H3P1SlCfwd/8bs14lqrP
UNTnvZJppeozZMbvtumTUPUZmi6bWblQnlkoaFlzJZWuzzDWL2nN3haqPsNx
pWlVXzlVn8HptYdTWxpVn2GRh8Y9JZ2qz1CXFhK2oJKqz9BZ37QliKXqM+yx
C3UsV1D9BiRZVDpxz0dBvwHPZ8gkU1VUvwHhX1vYzSP9J891vfXH3XJVCvsN
WPdiba2XC/GMXHqyaFVpK/GMfFqaue92KdVvwHfqmOgJWn0d8qUHrjwk+eT7
DTi1sTKC8ynoN6DaauhizrCC94x8cHCwefWIQthvgM2eMqjKoPoNeLE+/8Sd
RqrfAL3E+N3Zcqp/hvr1Xp5z+qn+GfJvBi0xV1P9M0gdRPNDO4R5VoH6yAaJ
7hphnlVQoRM/J9dVmGcVRBZPafmYFeZZBXMnZZpGU3lWgd/pF6kfUXlWQfvv
vvKeVk/1z+DUuCwxJZ3qn+HGlvZBzqegf4bPbqkPVWp5Rn45OD/BUUT1z9Bn
xV43aKL6Z1jS3paokFPnQXhuNePd+gHqPAj2lc5psX3UeRDe+HTWTuymzoOQ
leomDu2gzoPg0vCkxVbrOYh8aOPT30/vJJ6Ru36aeumNgjoPgupCm1k+fR6E
4QTxVa5+8nXwN24hjy7hvu+C8yBI5OvCqkj/z/Ps8igR51NwHoQg2xlHY6uo
8yCsNbi+8fAb6jwINTN189K7qPkGPHv94J/ceVww34DH33enivup+QZ88c2D
Ec4/ekY+Rp4910JNzTfgauP2MiMV8Yx8v16W62IV8Yy83mTF09Qear4BrpZH
4u3p+QaUOETraffPyA0MV2YGsdR8A84ZH8y700g8I1/eFVvI5VMw34DpEbV+
nE/BfAP2Pv2DyZxOar4BCZpE9RzSV+N8DA6lvCri5kuCeR28cHs4zPkXzOug
9Grbec8Bal4H4W8m+1v3U/M6iE88a7DhLfGM3LHdJzSrj3hG/lfvmu0Peql5
HaTYaSaY0vM62Ozrde5uN/GM3CUu/AT3PBLM6+Av2UMXs+XEM/LVuwLvcN93
wbwO7nVPKUnvouZ1ULDNdlDLJ3+VdjgtdH//uZ5YH7dqKhxm8OphmPuinPTb
PP931ybLZ2p+Pf++9FbLcWFa80Dkk8uKo/U01P0hUa4c0FrPc/+iUnt9DXV/
MH5ilFXTQzj+H01rxpf/Ivvh56hzLWottPeJ/KeI5hDt/eB9yiale+prqP2D
j9Gs7dz9VSc7wiOaRhi8FhXumVhIOP93+4yWlToaaj2ozppMHKOh1oPdprgt
j7X6anzfgiJZbmwvWY9/z4sND3DVuj/u93TDKZvVWvvH93nnObhd7KXWM0rj
R7die6n1TNjlzAhXDbUfeF7tOXO1htoPJG0Ocefu/z8SjtH4
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[Polygon3DBox[CompressedData["
1:eJwBCQX2+iFib1JiAgAAAKgBAAADAAAA4gIRFQUGEgIDEwMEFgYHFwcIGgoL
HAwNGAgJGQkKFAQFKhobGwsMKRkaIxMUIBARIRESJBQVJRUWKBgZ7+XkJhYX
JxcYHQ0OKxscLBwdPy8wRzc4MSEiLR0eMiIjNCQlNycoMyMkNSUmNiYnLx8g
MCAhOCgpOSkqQDAxPCwtPi4vQTEyIhITQjIzRDQ1OiorOyssQzM0RTU2gHBx
RjY3f29wTj4/Sjo7Szs8Tz9AUEBBU0NEVUVGUUFCUkJDTT0+Y1NUVERFYlJT
XExNWEhJWUlKXU1OXk5PYVFSV0dIX09QYFBRVkZHZFRVZVVWd2doSTk6aVla
ZlZXa1tcbV1ecGBhbFxdbl5fb19gZ1dYaFhZcWFicmJjeGhpdWVmdmZnempr
SDg5e2tsfW1uc2NkdGRlfGxtfm5vWkpLgXFyzb2+hnZ3g3N0hHR1nIyNh3d4
inp7i3t8jHx9jX1+hXV2iXl6jn5/kICBlYWGkoKDk4OEloaHmIiJm4uMkYGC
mYmKmoqLj3+A8PjnnY2On4+Qo5OUoJCRoZGSno6PpJSVp5eYqJiZqZmaqpqb
opKTq5ucrJydrZ2er5+gsKChsaGisqKjlISFs6OkuKiprp6ftqant6eotKSl
gnJzuamqu6uswLCxva2uvq6vwbGywrKzxra3yLi5w7O0xbW2v6+w1sbHx7e4
1cXGzr6/y7u8zLy9z7/A0MDB5sXUyrq70cHC0sLDybm618fI2MjJCBgXvKyt
3MzN2cnK3c3O38/Q4+IQ3s7P4NDR7ejS2srL28vMAhIRAxMSCRkYBhYVBxcW
ChoZuqqrCxsaDR0cBBQTBRUUDBwb5B0OECAfESEgEiIhFCQjFSUkFiYlFycm
GCgnGSkoGiopGysqHCwrHS0sHy8uIDAvITEwIjIxIzMyJDQzJTU0JjY1Jzc2
KDg3KTk4Kjo5Kzs6LDw7Lj49Lz8+M0NCMEA/MUFASVlYNERDNkZFN0dGOEhH
OUlIMkJBOkpJO0tKPU1MP09OQFBPQVFQQlJRSFhXQ1NSR1dWPk5NRVVURlZV
RFRTNUVESlpZbn59TV1cTl5dT19eUGBfUWFgUmJhU2NiVGRjVWVkVmZlV2dm
WGhnWWloW2tqXGxrXW1sXm5tX29uYHBvYXFwYnJxY3NyZHRzZXV0ZnZ1Z3d2
bHx7aHh3anp5TFxbbX18b39+cIB/cYGAcoKBa3t6c4OCdISDdYWEd4eGeYmI
eoqJe4uKgZGQfIyLgJCPdoaFfo6Nf4+OfY2MEyMigpKRhJSTiZmYhZWUhpaV
ipqZi5uajp6dkKCfjJybjZ2ciJiXnq6tj5+ena2sl6emk6OilKSjmKinmamo
nKyrkqKhmqqpm6uqkaGgn6+uoLCvssLBu8vKpLSzobGwpra1qLi3q7u6p7e2
qbm4qrq5orKxo7OyrLy7rb28s8PCsMC/scHAtcXElaWktsbFuMjHrr69r7++
t8fGucnIusrJvMzLg5OSwdHQvs7Nv8/OwtLR8Ofmx9fWydnYxdXUxtbVwNDP
yNjXytrZ6+QOzNzbzd3czt7dz9/eHeQe0ODf8u7jy9va7uriEOIR6ODRpZWW
5OUe+fHhvc3M8eno7ObU6Ong8+/r9u4B4uoC9PDs9fHt5ufE0ujR4+7i9+8P
7vIB7PDm7fHo7/MPxebE8PTT7vbq6+/k+PDT8fXh7/fl8fnpl2heKQ==
           "]],
          Annotation[#, "Charting`Private`Tag$6831#1"]& ]],
        Lighting->"Neutral"]}, {}, {}, {}, {}}, 
     {GrayLevel[0], 
      Line3DBox[{246, 1, 242, 227, 16, 31, 46, 61, 76, 91, 106, 121, 136, 151,
        166, 181, 196, 231, 248, 211, 244, 236, 212, 213, 214, 215, 216, 217, 
       218, 219, 220, 221, 222, 223, 224, 233, 249, 225, 245, 237, 210, 195, 
       180, 165, 150, 135, 120, 105, 90, 75, 60, 45, 30, 229, 247, 15, 243, 
       235, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 234, 246},
       VertexColors->None]}},
    VertexColors->CompressedData["
1:eJwVl3c81m0UxlVaRHZFmZURsqmXjpVSyIiMSKKskPA2aBgNQjKyCZEkvYhC
sp5lPh5P2aUy8kPIluo9/vDP/fl9jvv53te5rnPEnLzNXdaysLAs4d86/LuQ
YJY3b0rAKd2LHkl7ydA7Myi5JocE4kFNG2vcCHib2d/6UpQGDiaCoT/XkmFg
Z5N/RRgB+a41O4YCmyHA73PoLi8yaO9VrBJLwTp//t6b42wDsvsHux01ZCjb
uCfeIo2Aa/Guc97mbXC84EDAbSoZntwLZno9IGChTEhh0/EWCB7iHG26S4Z0
G/anVv4EOJGrE5dCGyEyVbfbcj8ZejpkdXicCFDTfvbgsQoV2hrTm+8NkcAu
ZkuFoyUBdL6XDuYvydD9mbNptJQErCkyBetNCAjRvHxSppkEqvNqY1WJJBi4
XXC67igBux3iz9jKkIAoCFKICyWBn31Vzx8dAhZ5qz+52DaAd0gevcCdBLdU
xUtmNAg4+Uyp2Fq/HjydNn7ceJQEkwby+xP3E/A3/BApZ3cduPgtsynsJsGa
s4IRNyUJCLJz6S/fVwvVYfa/ZdeTQF84pvc98uRhsN3MR54z7P/1TCPP7H+h
zy6JgPOBqnTfrlZIKSj6YPKWDLms/RcVPhGwZPXfP9ZRHeAXWP5utoYCt14p
3tkuNga2hI754KNOKPXiNtCspUK3917SZ4kx4LsaoZ78rhN0S0WyBpqocPjV
qdt1wwSs/OdyYwcPE+q2501Rv1AAYgUsQp8RoBhSbAyWdHD23BbvMEOGPydj
LcRvE/Ayw2ole7IJTlPDL4eeJoP5FxfLuYsE3H/ANObOokGaeNd6bl4y9P0Z
YdPC3yXfNxc4w0WDvB2xlBUWMiw3q88quBMQ8Gx7xSF5GphncW7NZiWD0th5
566zBMgpNt/JkaOCHf9r6YJBElh5c15rxPf6mX/SuuUbCaLOcpFfppBAWyKn
ulSTAPbtYu8byuvBv3Rkg5sVCaZuFjgnIP/wgl8lF5H/dZ1ieWnkr/o9e8Oq
PruK9Go6UZ/pt3f2CqE+qxt49qzyfG1e0meBPJ+ThnNnkKcpK++UcuYYtJ64
Imus8Ql2ap3Vt4hrhErDa2kx3BPgOyFfXhQ/BPQw5bMCZ9tAf8+t3m/8E/Cf
6VJie+4Q9H01of/xagPrkpK1gi/GQG9mw/7TOZ/ghug5CbaqRqhIy9jnM01A
ubZVo04ZE5RGa38VsVFBPu9qYUsOATZSqqLSO+ngKW6jsWeIDByhHsI+EchB
jTbkI9sCE9Z2eishZAj/SJVPRp18jPOd//G5FYyIdVFaFWTY9XH4uTmdACOj
mf3ybxkQnjhY3hlBgYB+vb8PyQSk7/rcqijBgJ2ppk+unKeA4Zr6eaVrBFgX
PBH1EGwCHR717bM6ZKj51/kuBfm/LE1/7Yv891u5XM9G/n8jyUqTqH+XA/xG
rXr18INjU+L8ERI0W5cSotjvDgJ7Hfuw3/tc3Q4IYL/rCqs2bUN9KhlWbetG
fX72+XD1AOpz72YnllWeV7/ZHi1EngV1jy/wIU/voR+lZ60pkFxtfVmY0gGC
ATSfnoEJ+Eq1u2a1mwJOW4cKGgo6YKdBRO1OPB8U6u6pF5sADZc82eEPQ6DE
NrRBPb4N9K6ztgVpjMH6ruHuB8tdkKv/I69bkAbGifbxrbUE8GezG27saYe6
dyOpWicp8FLiCptGLgGJQn9fjSnSQXamWT2GIEM0m+NVqVECKkaF5xfUmHBf
yufVIkGBdLW3sXa0SdhQLNTSkz4J5q9SDw4FDQCk/KuUTZ0E/TZnL9O0SbiZ
KZV2a/8AHJ0rnY5A/uV7pcUGxRmw6WWAgQvy1xcqbqej/lnE6UWVslSQjCmU
jEL9t+p/cJhH/0mynFt/1qYBHnicM4tA/xlI+aJqjv6ZahxJOoz+ufNxtUog
+qfvLX+7T9jv99+euBmK/Z5kUqLRi/1u+lj80FfU54ldwkpNqM9fvYNpS6hP
ymzGmbPIc2xntUsj8uyz0Bld5Um+XxTAN0KGMJ0kg9iIDqjnOhCk9XkCEqLX
BY9ITYD6/SxVlZ9DoNkhZqb4og08RYx/isIYfAwqCIx37IayExFsBio0+Lpm
8E8iDX+XqLZEkxkDijzfsPL7UqBTzqhat4iA9vIgi7EqOqQJLgQoc1BAoPCM
tfEM6rl3zmqUwYTGm3dqO7ipULOGt4K/cRJqJH7OumZOQphPciBbywAkSk4s
2iL/H0fXBXcj/1zOEbds5J9pOuJwGPX/TuU1+ewbBpSzqNByUP/t98eMxdF/
zqvbmwbK0iBcfnjaHf1nmqNEvBT9n9XQfzFHCv1d/3CxPfr/wVCOAk/Mo2ml
vHLSsRbwW9j2pB7zSLiFylGD/rl5cX3bDDcT1g12P3iP/pmqKbB3G/Z7gkWd
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
6av1730cn4jC+n5P321crf8//hjdxg==
     "],
    VertexNormals->CompressedData["
1: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
tXjHF4rryjmseUrD+zjW/n/9/wPon3Wv
     "]], {}},
  Axes->True,
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"y\"", TraditionalForm], 
    FormBox["\"\[Sigma]\"", TraditionalForm]},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{408.70473008461295`, 308.2391246809306},
  ImageSizeRaw->Automatic,
  Lighting->"Neutral",
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "RotationControl" -> 
    "Globe"},
  PlotLabel->FormBox[
    StyleBox[
    "\"\\!\\(\\*SubscriptBox[\\(\[Sigma]\\), \\(xx\\)]\\)\"", 16, Bold, 
     StripOnInput -> False], TraditionalForm],
  PlotRange->{All, All, All},
  PlotRangePadding->{Automatic, Automatic, Automatic},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{2.360476213223008, 1.9074441961160142`, 1.4965990396601636`},
  ViewVertical->{-0.3440075874420013, -0.27798427809199355`, 
   0.8968743060853104}]], "Output",
 CellChangeTimes->{
  3.9300292572462454`*^9, 3.930029462751684*^9, 3.9300296596735783`*^9, 
   3.9300299943172417`*^9, 3.9300300303748097`*^9, 3.930032144979267*^9, 
   3.9300322566450524`*^9, {3.930032287685624*^9, 3.9300323400006285`*^9}, {
   3.930032370899102*^9, 3.9300324560684757`*^9}, {3.930033118769333*^9, 
   3.930033161639015*^9}, 3.9300334683592052`*^9, 3.930033523149429*^9, 
   3.930033610906608*^9, {3.9300338278998256`*^9, 3.9300338373492184`*^9}, 
   3.9300339527136197`*^9, 3.9300342173052497`*^9, 3.930034530886362*^9, 
   3.930034611293063*^9, 3.930035776859923*^9, 3.930035876898853*^9, 
   3.9300359163900347`*^9, {3.9300360031570463`*^9, 3.930036029178746*^9}, 
   3.9300360980928073`*^9},
 CellLabel->"Out[49]=",ExpressionUUID->"163f5a13-db55-4f5c-95e3-a9b1dd59eb9b"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
cAltJA==
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[Polygon3DBox[CompressedData["
1:eJwBCQX2+iFib1JiAgAAAKgBAAADAAAA4gIRFQUGEgIDEwMEFgYHFwcIGgoL
HAwNGAgJGQkKFAQFKhobGwsMKRkaIxMUIBARIRESJBQVJRUWKBgZ7+XkJhYX
JxcYHQ0OKxscLBwdPy8wRzc4MSEiLR0eMiIjNCQlNycoMyMkNSUmNiYnLx8g
MCAhOCgpOSkqQDAxPCwtPi4vQTEyIhITQjIzRDQ1OiorOyssQzM0RTU2gHBx
RjY3f29wTj4/Sjo7Szs8Tz9AUEBBU0NEVUVGUUFCUkJDTT0+Y1NUVERFYlJT
XExNWEhJWUlKXU1OXk5PYVFSV0dIX09QYFBRVkZHZFRVZVVWd2doSTk6aVla
ZlZXa1tcbV1ecGBhbFxdbl5fb19gZ1dYaFhZcWFicmJjeGhpdWVmdmZnempr
SDg5e2tsfW1uc2NkdGRlfGxtfm5vWkpLgXFyzb2+hnZ3g3N0hHR1nIyNh3d4
inp7i3t8jHx9jX1+hXV2iXl6jn5/kICBlYWGkoKDk4OEloaHmIiJm4uMkYGC
mYmKmoqLj3+A8PjnnY2On4+Qo5OUoJCRoZGSno6PpJSVp5eYqJiZqZmaqpqb
opKTq5ucrJydrZ2er5+gsKChsaGisqKjlISFs6OkuKiprp6ftqant6eotKSl
gnJzuamqu6uswLCxva2uvq6vwbGywrKzxra3yLi5w7O0xbW2v6+w1sbHx7e4
1cXGzr6/y7u8zLy9z7/A0MDB5sXUyrq70cHC0sLDybm618fI2MjJCBgXvKyt
3MzN2cnK3c3O38/Q4+IQ3s7P4NDR7ejS2srL28vMAhIRAxMSCRkYBhYVBxcW
ChoZuqqrCxsaDR0cBBQTBRUUDBwb5B0OECAfESEgEiIhFCQjFSUkFiYlFycm
GCgnGSkoGiopGysqHCwrHS0sHy8uIDAvITEwIjIxIzMyJDQzJTU0JjY1Jzc2
KDg3KTk4Kjo5Kzs6LDw7Lj49Lz8+M0NCMEA/MUFASVlYNERDNkZFN0dGOEhH
OUlIMkJBOkpJO0tKPU1MP09OQFBPQVFQQlJRSFhXQ1NSR1dWPk5NRVVURlZV
RFRTNUVESlpZbn59TV1cTl5dT19eUGBfUWFgUmJhU2NiVGRjVWVkVmZlV2dm
WGhnWWloW2tqXGxrXW1sXm5tX29uYHBvYXFwYnJxY3NyZHRzZXV0ZnZ1Z3d2
bHx7aHh3anp5TFxbbX18b39+cIB/cYGAcoKBa3t6c4OCdISDdYWEd4eGeYmI
eoqJe4uKgZGQfIyLgJCPdoaFfo6Nf4+OfY2MEyMigpKRhJSTiZmYhZWUhpaV
ipqZi5uajp6dkKCfjJybjZ2ciJiXnq6tj5+ena2sl6emk6OilKSjmKinmamo
nKyrkqKhmqqpm6uqkaGgn6+uoLCvssLBu8vKpLSzobGwpra1qLi3q7u6p7e2
qbm4qrq5orKxo7OyrLy7rb28s8PCsMC/scHAtcXElaWktsbFuMjHrr69r7++
t8fGucnIusrJvMzLg5OSwdHQvs7Nv8/OwtLR8Ofmx9fWydnYxdXUxtbVwNDP
yNjXytrZ6+QOzNzbzd3czt7dz9/eHeQe0ODf8u7jy9va7uriEOIR6ODRpZWW
5OUe+fHhvc3M8eno7ObU6Ong8+/r9u4B4uoC9PDs9fHt5ufE0ujR4+7i9+8P
7vIB7PDm7fHo7/MPxebE8PTT7vbq6+/k+PDT8fXh7/fl8fnpl2heKQ==
           "]],
          Annotation[#, "Charting`Private`Tag$6875#1"]& ]],
        Lighting->"Neutral"]}, {}, {}, {}, {}}, 
     {GrayLevel[0], 
      Line3DBox[{246, 1, 242, 227, 16, 31, 46, 61, 76, 91, 106, 121, 136, 151,
        166, 181, 196, 231, 248, 211, 244, 236, 212, 213, 214, 215, 216, 217, 
       218, 219, 220, 221, 222, 223, 224, 233, 249, 225, 245, 237, 210, 195, 
       180, 165, 150, 135, 120, 105, 90, 75, 60, 45, 30, 229, 247, 15, 243, 
       235, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 234, 246},
       VertexColors->None]}},
    VertexColors->CompressedData["
1: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
Quo/svoTMrSlHAJydOuHpP7/AFkZ3hc=
     "],
    VertexNormals->CompressedData["
1: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
     "]], {}},
  Axes->True,
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"y\"", TraditionalForm], 
    FormBox["\"\[Sigma]\"", TraditionalForm]},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{408.70473008461295`, 308.2391246809306},
  ImageSizeRaw->Automatic,
  Lighting->"Neutral",
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "RotationControl" -> 
    "Globe"},
  PlotLabel->FormBox[
    StyleBox[
    "\"\\!\\(\\*SubscriptBox[\\(\[Sigma]\\), \\(yy\\)]\\)\"", 16, Bold, 
     StripOnInput -> False], TraditionalForm],
  PlotRange->{All, All, All},
  PlotRangePadding->{Automatic, Automatic, Automatic},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{2.360476213223008, 1.9074441961160142`, 1.4965990396601636`},
  ViewVertical->{-0.3440075874420013, -0.27798427809199355`, 
   0.8968743060853104}]], "Output",
 CellChangeTimes->{
  3.9300292572462454`*^9, 3.930029462751684*^9, 3.9300296596735783`*^9, 
   3.9300299943172417`*^9, 3.9300300303748097`*^9, 3.930032144979267*^9, 
   3.9300322566450524`*^9, {3.930032287685624*^9, 3.9300323400006285`*^9}, {
   3.930032370899102*^9, 3.9300324560684757`*^9}, {3.930033118769333*^9, 
   3.930033161639015*^9}, 3.9300334683592052`*^9, 3.930033523149429*^9, 
   3.930033610906608*^9, {3.9300338278998256`*^9, 3.9300338373492184`*^9}, 
   3.9300339527136197`*^9, 3.9300342173052497`*^9, 3.930034530886362*^9, 
   3.930034611293063*^9, 3.930035776859923*^9, 3.930035876898853*^9, 
   3.9300359163900347`*^9, {3.9300360031570463`*^9, 3.930036029178746*^9}, 
   3.9300360982527995`*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"52df7e60-3ba7-4e07-aee9-4b6ae352ac88"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
Hk7lv/rs/hE4HmdcmsvB3z0/ov8BIo04aw==
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[Polygon3DBox[CompressedData["
1:eJxNmHv81/MVxz9vFZJ0WxddrF8X3UQpv+73UlH5dUFJuqmUVKTSRUoX91uY
YWhsNpfFGDbmupnLXMaMmc1MG5tbMhmm2Xl6Pz+PX3+c7/t23ue8znnfXp9v
xazFExbtVRTF/fFTI8p/htBuENKoyH01QxraT7tfSJeQQ0IODKkdsl9I45Ba
IXuHNLHcJ+Rb2mCsubp1QlqG7B9SN2RoyvPbhXw76u9H+V5IK8cPCGnhPOa0
DqkvzgpLMDbV574hH+i7bUgbx4mpmePgbi9u8B5siY1xgWFsyvO66Bu8nYyZ
ODpbtjAXLcVbP+bVDPkw6l3tOyikm7jB2985jL9t3D1C+ugD2x3EAt4jxArG
NSnXe4Z0dBxMlY4zr682wN5bPez2cpz2YeRaTANDDrVvQdifH3JEyPiQESHd
o3+UtsC4IvrOCPko6qenjGVYyAixguVIS3wOFy9jx6rH+GjtgffoIu8tcjM2
ZIC4jnKcsb3D1/YoB7O2Ud8n5OOo/z1kaMj4kJH6BOtEceF/gjq0J9kHjuPE
wrzTQqaFnBQyRXz4n2z8tE9J2c+MkBMcB/uJIWPEfrz2mDM79GeF9EjZNuPj
QgaZb/bFTLGD8dSQqdqbY77AeLK4ac9Sl/jmOo7PeZbgne04c+YbD3hPcZz2
Qv2Aa5FxTw95NuTBkIdYX/Hhc4lx074u5MKQi9gP+sb2Un2D90xL4jhDG4yd
pS64VhszWM5VDxtnux7gWuM47VUhC5yz1vHFIedYgnGZPsnNemPA7jrHaS93
HNwb9AnejZbYuEy764x1lXjPM2biuCBkpWMXOQ7ey52H/4vtI6ZLxY3d653D
+BXqkoPvhpyv7U1iAe9xKeO7MmSLumDf7DiYjkp5zlUh12oD7N9RD+ynply/
OuR7+r8k5AZLMD4c8pOQbSE3mQtiutFx2j/UBra3Ok4c+4b9f4hxUdR/EOW9
IdOj3ifknahPibJ2yM6o90rZDno/CrnGHHSO/k4h/476HeYLvLcXef/R/rG6
xHqn4zeI/Qbx3uY4c5aFvTNTxrvNceIbFX0jUz6XS6JcHNI75T3FmZgR8nP9
Ye8BsdJ+RFt3hfzCcTA+aAn2+0Nudc4vxQrGhxyn/TNzQF7rhO93o7w75Bnt
Yu9X5hLdJ0LusT019AeH7Ir6kyH36fM3luAdlLL+4yFPGw92n3Kc9vrQqRvy
ddR/Kz7wPu+eINY5MX5yyICQV/WBjc9CHgt5MeR31vH1sljB/h/xvRLykuOM
lW8wb9tr2gPj68bPnfQnS3D90XHG/hzynBj/YvlCyJuW4PmDfsH6lvjw/9c9
8NaIeL4Q77+KzIfgGXAf+AM8o+Q38AZ4DRwDXlHLPtpwkKbqwXfgCbzR8JcW
tmvbV/KRZs55w/iIB67T0jmNzU07MbUu8vtd8iQ4Ug2xlFgr1KPdxnZd9bEL
72or5g/UaSSODq4HuDraBm8n2yUHol2VMmf6ULtwmy766WobrLx3hxpPF+fD
s7rtgbXbHnq8/wNsD7JNDuARPcVXaRte1MP8gI/3v5f4+tjGX1/bcDS41+Hi
g3eU3LafevAC3tZvOIt3A/iOTZmLwD3gQXCgoc6BD4wWE/xieFHNh0aIaaTt
no4PExPzSp41Sj3keHF0CD8Hh+wo8l011pyMkheNM1/0w0XgR3CjqiLjgzOM
199E28R6tLhHGGvJjyapx5vA27VWXJPFxDvCO7PJ+fCLKdrlrZ8pDjjGVHFN
sz1LjgnngG/Cq7hnS55ELOV7vEEcs7ULRt73k83LXNuT7JstRjjGPDHNtw0O
uMMCcwHGGeKCX5ScaKF64FvkGPgW22bOEtsl11kqPrjG6eJYaht8y9QDB9xh
hTjgDivFSl/JTZY7p+R2c8W02jlLzc25YlpbVPMmyjXGd/oeWM9Rj/Y62wvV
XS1W7JW8ab16y1znjeLabBu859kmBvjG+c6BD1ymXXjOhfq52DYYL7G9yvEL
xMS8kitduoce7/v1RTVfoQ0v2mIu4D9XipM46L9CfPCUq8UHZ7hGf9faXq/u
5eLDT8lzr1OPe5n38GFx3SiOknPc6fytReYV2IUj8O43TpkbwXlqy4NuLjIn
ggPdUmTetFUc1zjvVnHDC+AH3BPs6cnm6SZxgBcucbt5udP2dfbdpt42scKD
Sn4HL/qkyBzmWnXBDQ9aJG/oJyf6qTjgIPeKD45xn3gfsF1yoJITUcIxhoeN
Yd6/zVPmOrvES24fEt/Dtu+wD1twHHjMY/qGUzzhOO/ms0U17yl5EOWvixwD
uo+L8Sn1wPS0bfLxiL4f1F7Jv55R71117hLfc/pmzvO20YOjvKZPOAV8A9xw
jRfF8ZLtNhHT50XmR/h53flgh7u8Ij7swbn+V+T89SiqudHr2nqryLwGfva8
WMEETyr5xRvOgcfB214oqvkTel9o5yWxYq/kU2+qNzrmHunbM43/Aaw3i7Ke
vP0s3yDu2vbWh4TMjPpAOS5nlH3Pnu/ot8P3Q5amPIf/GWZE2dczMybKo61/
6nqwFgdF33+LzNv2j3otOQk8BJ7E/zBfWYcv1Ve3gX3vq1PyIbhQu5TtwgeP
iXJ3kW3uVqete+hV16lBymvzkbF08lydFGWlnKFFlI3k2N2ibGKuJkd5vPdD
qygPCClCWqdsl3efvBIzNpen7IP6JHn7Dsc+NScvu5asY3KtH2UNUm7vMn/o
3+36fuaaP+l+5OwcGLr7qU/f5/bvlXKb/UmsncXTNsov9U2OWZe9zBm5g2ue
YHzcgfXNbVv3NTmEm50Y/RPNVUXK//tQX2Ge2f/kp2HK+s2NixgPSflcgbFr
yphqmIPkHcJdBBfEb5V7hv+7GlrHZsuU7+7CdYP7DXbPUz/G9YVvwbXY49SH
uK+589nPTc0heWZtaxv7GOu8W1PV4Y4F1/7u4VrWD3ct6mhnpvVH3fM11alw
P4Chg/uHPdnZs8kaFe6xm9174NziXqinfezVNz+11d/p+jTQ127XD5xdUv4P
9yvXrpG52se1G2I+GpuTFvZzLoj7QP22Umen+W+i/t7a/FiMzdSnbGq9qf2c
qTraZN8emvJZZinx2cK91Mj6x+o3N5/4b6nfJtYL91dzbaLTKlXnspWY2ffs
/7eKfHfgl3NAXsjPe2KoMCfksrX5rGs/2Lq7h3/PeXAP/0177Yylhv1feB7R
50we5lrUK/J3Q3t9ced0Mi76DnZvTLI+xP0Pnh3O7aBOA+s73OfMH+rZ76hN
9jz1rUX+buSbp9L16uy6wPn5r7nKu6KrcYH9EOPl+3SYew8d4v/S/BHb+/rt
pk1ywhpz1/AW8S3Bd8R229RXpcy14C/cx3yDcH75n7andb4FmAv3R9CB+/Pd
V6lOE/0S72lRLtTuAnWqjIX1467k7YI7cdbmWoePcPfyDvJG90+ZY3H233EO
+vwfRR1+2Fsd+vkfZqB7lbPT37m847z93OXcpeSQ7+J5KfuGPzU2v7x1vK19
tM+7AMd6rMiC7uPGiM5V2hmsL2wP1T7nYohzB1vfpc5w17Gm9bfd55Pcb/AI
vrG5K7h/qfOtDcfg+3aQfUda3+4c9HmX+f+BN4VvzJGp+j926gMtR9nPvNGp
+nue/yDwybcDvIJ7mPIo4x2lPj6nq3OVOmPU3+R8vjvaaLOiyHcmOu+4zgNc
67Fi7m6upppP7nneIe7Scda7ewbJ1Q7zMN7YJ1jvrv4xzqVvojrYnKDObvMF
Ru7SY93P8A7+k+Xu4nuK9hb7jzPGSvW5J6eoc6U6k9Xf6PwNxj5FnX3V2en5
5Z3gXmIvn+B+5nsDLv6A2KaZc+5n3hLuQ75HlrhX2Y8zzC3vy0liq7Re5bmf
Zox91b/FtZjp2YEDz7HOWZ+lfg/r3AF11Oe80jdbnZ7We3g+prs3PtPuo55F
6i+4Z6bvsR/muCc413PdA3yr8t8Ke4p7h/9GZrhPOHucyZUpc2vGwMx9ii73
EHP5Xlxpf5U5WaBuX3PYW92FYv7m/+6U76VB4rlHm6ep00v9q73H5om5jzqM
r9YOeWY+3498q9HP/Ut7bcjZqfq/M0r+l+Ld2ZDynkWH/9fgeEutowvv5Xt1
a5H7GONtam99qPtktb74puNbFz681fpNlsvs571ars1F4uSN4I07yxzCeVbo
a5n6n7g+6IxXd6X6YFsh/l7aJCfz1WEe9zZnn3tylZjR4eyy5webG3LF/4Vr
rGOTc3NuSGHfWvvPsF7OW+NceNFGfWKf//o5U+21yx3OnXxOyvfMppR99LOv
of28fetSfnO5VzanfN/Q19R+/PRP1e/SJu1s1vd413mCa00cTYzl/2IueOw=

           "]],
          Annotation[#, "Charting`Private`Tag$6919#1"]& ]],
        Lighting->"Neutral"]}, {}, {}, {}, {}}, 
     {GrayLevel[0], 
      Line3DBox[{302, 1, 292, 233, 16, 31, 46, 61, 76, 91, 106, 121, 136, 151,
        166, 181, 196, 248, 305, 211, 300, 258, 212, 213, 214, 215, 216, 217, 
       218, 219, 220, 221, 222, 223, 224, 250, 306, 225, 301, 259, 210, 195, 
       180, 165, 150, 135, 120, 105, 90, 75, 60, 45, 30, 235, 303, 15, 299, 
       252, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 251, 302},
       VertexColors->None], 
      Line3DBox[{339, 385, 269, 383, 274, 387, 338, 390, 339},
       VertexColors->None], 
      Line3DBox[{279, 388, 316, 389, 346, 386, 278, 384, 279},
       VertexColors->None]}},
    VertexColors->CompressedData["
1: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
adCE+P8AI0OZcA==
     "],
    VertexNormals->CompressedData["
1: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
3YUZ
     "]], {}},
  Axes->True,
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"y\"", TraditionalForm], 
    FormBox["\"\[Sigma]\"", TraditionalForm]},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{408.70473008461295`, 308.2391246809306},
  ImageSizeRaw->Automatic,
  Lighting->"Neutral",
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "RotationControl" -> 
    "Globe"},
  PlotLabel->FormBox[
    StyleBox[
    "\"\\!\\(\\*SubscriptBox[\\(\[Sigma]\\), \\(xx\\)]\\)\"", 16, Bold, 
     StripOnInput -> False], TraditionalForm],
  PlotRange->{All, All, All},
  PlotRangePadding->{Automatic, Automatic, Automatic},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{2.360476213223008, 1.9074441961160142`, 1.4965990396601636`},
  ViewVertical->{-0.3440075874420013, -0.27798427809199355`, 
   0.8968743060853104}]], "Output",
 CellChangeTimes->{
  3.9300292572462454`*^9, 3.930029462751684*^9, 3.9300296596735783`*^9, 
   3.9300299943172417`*^9, 3.9300300303748097`*^9, 3.930032144979267*^9, 
   3.9300322566450524`*^9, {3.930032287685624*^9, 3.9300323400006285`*^9}, {
   3.930032370899102*^9, 3.9300324560684757`*^9}, {3.930033118769333*^9, 
   3.930033161639015*^9}, 3.9300334683592052`*^9, 3.930033523149429*^9, 
   3.930033610906608*^9, {3.9300338278998256`*^9, 3.9300338373492184`*^9}, 
   3.9300339527136197`*^9, 3.9300342173052497`*^9, 3.930034530886362*^9, 
   3.930034611293063*^9, 3.930035776859923*^9, 3.930035876898853*^9, 
   3.9300359163900347`*^9, {3.9300360031570463`*^9, 3.930036029178746*^9}, 
   3.9300360985227757`*^9},
 CellLabel->"Out[51]=",ExpressionUUID->"561c59ca-6467-4c0c-8696-e76c1ba474be"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[Polygon3DBox[CompressedData["
1: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
8HQSZ+eU2x9rP539jpzXOL8Rs8kV2GVsZ7//7Bru7LvMwT7Ow4kp74s3jT/Y
xJ2TUt47HzlX+zonjL2/87mlPvXEfpD4yfXc6z1Q5PsDbO734CGcgTnnd9Fm
j7PXu2iTe8md5M2fHAO5Cc58iOuEnIxd5mViLHXsLfZY2Qb2x/oe6rs/+Yx6
5qabNncI3Z23n40vnd0jh+nT3bGz16r1x4YvkY/Zj/AictUX7peezjM5ghhI
Xkn6TCryuujtOmmkP3sNLnSkNu/As+cXOb9gs9d62SZ2Q/3vMh6Dh/jMuPs4
dr5VP78pMY9YTNxDH21f1B9To82+1rezHfJNW/3xJeYf4fdlDbCOyTeMiz0A
92JNHesa62X75LCmrkPWNvGPOEgshatyH9RJzKxF8t/CkAUp3z3BxbiH6mD7
rGPyK/e957j27tCX+yn4+OmusedCP5vync4Hau5LTrFd1tJC2+dOrb719AWv
oh3uMMhzcBtyIr9D0Qd3RK+GfiXl8yTPB+rzqThKDAMc4xP6cmacbD3tMA7O
cpzjOCthc04aaLt/2xdl7hSOcg75dqt8n3eJ5ezfOr7PeZAz1l0p36FwfzIm
9PnOG3qQ9oqU71hWnxf1Zyx8I/Yze/kCvxn2JO3y/o5n3Om9bvtTbecJ2z3A
dpgbztGcGVaJ/2LXFXcAnLdvU1/quLgfwGe8voP1v08/fKr0G20cII78YJzB
3tF3h9jOENvHLn9nIq7/UcaIIvPbxc4/+4z9T45lnNxplr/zXpny/WYrfYgP
3GFcL06eD3PesEfozz0kv/XyW+cIberLZ9xPjrT91bHUevyZz5HWczdY5Xrj
/pB7Q84H12rjj6bMmaGXfvgcqE3bt+pDHVhGaY+z/d+d4+scF/tjtP3+Lo7e
rru5rqvyN6oq1y3xkb0PhyKGEj97aMNHiG3ERGIq+WSM7bAeb3BN9tSHeMUd
BZy8rpoy3GCCZWzuCrjXgO9zBsXmfmO83wiM7HtyDDEBfjHBd5mPcY69Sps8
RiwkJjZwzm61fpQ283a9PhOMz7RfX1wTnIebnZO6YhmfKvFmvNhuclzgJ84R
74hR3CNxxoa/wQW4ey3Pc9jkLHIXOYzn5fkTLkrO4M58P32r9SeWTHHOiWHE
KWLUgdavMiaw/9nLA7Q7aU+2nhhA3CEOcF7mrpz8zp7k94Umas7kcACecbfO
HQC/295jfXvLO7iX8S/P9tQ3LnIef8D26Qf7M9ujzDn4MMvYzN+dzuHbod9K
eS7mObfkEfY5dyvM06Qi399Vq6e7fvjd4UHnk3am+e50/fDhnoR7RvL1+6GX
p8qdI5pzZy2/I/08bPuT7H+aGN63He5V30z5Dm6ma2OWa7U8r36lD2fd2ZZn
iYd9NdP+Z+nPuzOsh/PT9hzb31x7bYVnC4ostL3QNUbMhCuuzl0p5x94KHwU
7koOIBeQ+9Dkhtudw3nO25n6UE/e5TeOvu59/GmDXM3f65Cv+c2Lu5vyb3ie
SpXfxni2sd96nt+I50/q85TtsN/hBfCEPdxfcA9+50Iv1J/fp/i9ilw3X59m
+szX/xT9aaOBfmCh7edq7BFs+nzGfjvp84wY2IPwG+byw5S5C3PB725L7Yu9
CRchBvPbAL89lL9BkLeIt4v0Yf/SziJtnuMHl+B3ile0h1qmPeqwueeGdyzW
Z7HtY59um338dq/oP9u1xx0L/IO7aO6eyQvcTVOHhisQH1amzD/woy+4Du2t
1H+qeF61X9p+0/X5mDZ9rmW/M40/tF/mIuaTmMZeZw75nZAY/k3KsY11yB4m
DsAF+D1jhJp7z7G++7ZrlRzxZcoxnOf4lX8Hslx7lGXaow77FvfaMn2W+T72
u9aXf6exXP8lzsVrrgPWAzz2A9fHwe6vFc5VyXcPti9ixyN+qw9tY7n19MuZ
99OUz6Hkr89SzmUr7Heq35Ay/JA5ess5JD9/l/J8L7We+eHs+UXKnJ9z7kcp
5x/Of1+nzF/I5/z2TL6Dy3yfMtfhDLIq5TMZur02Z4evUj4/cVb9OOWYR575
NuU4AY/6IWX+wt3DJynn3I8sg+Fb+z7PcTd27F/Y7qZiGSGeT8RU3z53sd8v
xbSZuHYWG2tqjOuKuezifP7g/F7lHIx0Hr5zDMzh/wFUygIP
           "]],
          Annotation[#, "Charting`Private`Tag$6963#1"]& ]],
        Lighting->"Neutral"]}, {}, {}, {}, {}}, 
     {GrayLevel[0], 
      Line3DBox[{350, 1, 328, 237, 16, 31, 46, 61, 76, 91, 106, 121, 136, 151,
        166, 181, 196, 267, 354, 211, 348, 282, 212, 213, 214, 215, 216, 217, 
       218, 219, 220, 221, 222, 223, 224, 269, 355, 225, 349, 283, 210, 195, 
       180, 165, 150, 135, 120, 105, 90, 75, 60, 45, 30, 239, 351, 15, 343, 
       271, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 270, 350},
       VertexColors->None], 
      Line3DBox[{303, 484, 288, 481, 302, 483, 301, 489, 303},
       VertexColors->None], 
      Line3DBox[{390, 485, 326, 491, 389, 495, 388, 496, 390},
       VertexColors->None], 
      Line3DBox[{399, 494, 419, 493, 398, 486, 337, 492, 399},
       VertexColors->None], 
      Line3DBox[{310, 488, 291, 490, 309, 487, 308, 482, 310},
       VertexColors->None]}},
    VertexColors->CompressedData["
1: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
n88G+fkP6swLlw==
     "],
    VertexNormals->CompressedData["
1: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
RKXg1A==
     "]], {}},
  Axes->True,
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"y\"", TraditionalForm], 
    FormBox["\"\[Sigma]\"", TraditionalForm]},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{408.70473008461295`, 308.2391246809306},
  ImageSizeRaw->Automatic,
  Lighting->"Neutral",
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "RotationControl" -> 
    "Globe"},
  PlotLabel->FormBox[
    StyleBox[
    "\"\\!\\(\\*SubscriptBox[\\(\[Sigma]\\), \\(yy\\)]\\)\"", 16, Bold, 
     StripOnInput -> False], TraditionalForm],
  PlotRange->{All, All, All},
  PlotRangePadding->{Automatic, Automatic, Automatic},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{2.360476213223008, 1.9074441961160142`, 1.4965990396601636`},
  ViewVertical->{-0.3440075874420013, -0.27798427809199355`, 
   0.8968743060853104}]], "Output",
 CellChangeTimes->{
  3.9300292572462454`*^9, 3.930029462751684*^9, 3.9300296596735783`*^9, 
   3.9300299943172417`*^9, 3.9300300303748097`*^9, 3.930032144979267*^9, 
   3.9300322566450524`*^9, {3.930032287685624*^9, 3.9300323400006285`*^9}, {
   3.930032370899102*^9, 3.9300324560684757`*^9}, {3.930033118769333*^9, 
   3.930033161639015*^9}, 3.9300334683592052`*^9, 3.930033523149429*^9, 
   3.930033610906608*^9, {3.9300338278998256`*^9, 3.9300338373492184`*^9}, 
   3.9300339527136197`*^9, 3.9300342173052497`*^9, 3.930034530886362*^9, 
   3.930034611293063*^9, 3.930035776859923*^9, 3.930035876898853*^9, 
   3.9300359163900347`*^9, {3.9300360031570463`*^9, 3.930036029178746*^9}, 
   3.9300360988327627`*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"02602d14-89a2-4980-894e-29ba9e27d34d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Dirichlet BC for normal problem", "Subsubsection",
 CellChangeTimes->{{3.9295153279998164`*^9, 3.9295153405723467`*^9}, {
   3.9295154173973885`*^9, 3.9295154243993473`*^9}, {3.929519440653449*^9, 
   3.929519441693338*^9}, {3.9295281773563423`*^9, 3.92952818169112*^9}, 
   3.9295282513835893`*^9, {3.929528511614608*^9, 3.929528527101444*^9}, {
   3.92952865673805*^9, 3.929528658393818*^9}, 3.929528913131792*^9, {
   3.9295292243262777`*^9, 3.9295292281477785`*^9}, {3.929578293377014*^9, 
   3.9295782991882963`*^9}, {3.929951345540696*^9, 3.9299513508704853`*^9}, {
   3.9299515162406344`*^9, 3.9299515197303033`*^9}, {3.9299516972453556`*^9, 
   3.9299516979803505`*^9}, {3.9299518520685*^9, 3.92995185743516*^9}, {
   3.9299528996001267`*^9, 3.929952908214892*^9}, {3.9300111121822352`*^9, 
   3.930011121128265*^9}, {3.930014436680769*^9, 3.930014441952094*^9}, {
   3.930016940466525*^9, 3.9300169437779927`*^9}, {3.9300177583096495`*^9, 
   3.9300177700581264`*^9}, {3.93002704366646*^9, 3.930027057676525*^9}, 
   3.9300272427318635`*^9, {3.9300272960314283`*^9, 3.930027300645444*^9}, 
   3.9300273476051245`*^9, {3.9300336576160526`*^9, 3.9300336644976864`*^9}, {
   3.9300338963150773`*^9, 3.9300339006694627`*^9}, {3.9300341215622387`*^9, 
   3.9300341243920565`*^9}, {3.930035533335107*^9, 
   3.9300355614450364`*^9}},ExpressionUUID->"ef78c238-dee6-4366-be46-\
e7525a602e89"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"pDirichletConds", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"DirichletCondition", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"p", "[", 
          RowBox[{"x", ",", " ", "y"}], "]"}], " ", "==", " ", "1"}], ",", 
        " ", "in"}], "]"}], ",", " ", 
      RowBox[{"DirichletCondition", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"p", "[", 
          RowBox[{"x", ",", " ", "y"}], "]"}], " ", "==", " ", "0"}], ",", 
        " ", "ground"}], "]"}]}], "}"}]}], ";"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"op", "=", 
     RowBox[{
      RowBox[{"Inactive", "[", "Div", "]"}], "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Evaluate", "[", 
              RowBox[{
               RowBox[{"\[Sigma]", "[", 
                RowBox[{"x", ",", "y"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"Evaluate", "[", 
              RowBox[{
               RowBox[{"\[Sigma]", "[", 
                RowBox[{"x", ",", "y"}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "}"}]}], "}"}], ".", 
         RowBox[{
          RowBox[{"Inactive", "[", "Grad", "]"}], "[", 
          RowBox[{
           RowBox[{"p", "[", 
            RowBox[{"x", ",", "y"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}], ")"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}], ";"}], "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"op", "=", 
     RowBox[{
      RowBox[{"Inactive", "[", "Div", "]"}], "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"sigmaFunc", "[", 
               RowBox[{"x", ",", "y"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{
              RowBox[{"sigmaFunc", "[", 
               RowBox[{"x", ",", "y"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "}"}], ".", 
         RowBox[{
          RowBox[{"Inactive", "[", "Grad", "]"}], "[", 
          RowBox[{
           RowBox[{"p", "[", 
            RowBox[{"x", ",", "y"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}], ")"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}], ";"}], "*)"}], 
  "\n"}]], "Input",
 CellChangeTimes->{{3.9300355629976883`*^9, 3.9300355754024477`*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"ae883945-eacf-4ea1-95ab-767f86b0d73a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Equation normal problem", "Subsubsection",
 CellChangeTimes->{{3.93003558391973*^9, 3.930035584799667*^9}, {
  3.930035616160966*^9, 
  3.9300356188808093`*^9}},ExpressionUUID->"820ae244-1907-4a9d-a12f-\
7e5102e55fd5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"op", " ", "=", " ", 
    RowBox[{
     RowBox[{"Inactive", "[", "Div", "]"}], "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", " ", "0"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"0", ",", " ", "1"}], "}"}]}], "}"}], " ", ".", " ", 
        RowBox[{
         RowBox[{"Inactive", "[", "Grad", "]"}], "[", 
         RowBox[{
          RowBox[{"p", "[", 
           RowBox[{"x", ",", " ", "y"}], "]"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"x", ",", " ", "y"}], "}"}]}], "]"}]}], ")"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", " ", "y"}], "}"}]}], "]"}]}], ";"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"op", "=", 
     RowBox[{
      RowBox[{"Inactive", "[", "Div", "]"}], "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"sigmaxPoly", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "sigmayPoly"}], "}"}]}], "}"}], ".", 
         RowBox[{
          RowBox[{"Inactive", "[", "Grad", "]"}], "[", 
          RowBox[{
           RowBox[{"p", "[", 
            RowBox[{"x", ",", "y"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}], ")"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}], ";"}], 
   "*)"}]}], "\n", "op"}], "Input",
 CellChangeTimes->{{3.930035971622892*^9, 3.9300359745843225`*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"c3779edb-2934-4ae3-9a0d-2bef0e71eaf5"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"(", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"1", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ".", 
       TemplateBox[{
         RowBox[{"p", "[", 
           RowBox[{"x", ",", "y"}], "]"}], 
         RowBox[{"{", 
           RowBox[{"x", ",", "y"}], "}"}], "Inactive"}, "InactiveGrad", 
        SyntaxForm -> Del]}], ")"}], 
   RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], "Inactive"},
  "InactiveDiv"]], "Output",
 CellChangeTimes->{
  3.9299518606152*^9, 3.929951974095317*^9, 3.930011121808273*^9, 
   3.9300144438319693`*^9, 3.9300169457778077`*^9, 3.930017771987991*^9, 
   3.9300270582852917`*^9, 3.9300272302072773`*^9, 3.9300273014910803`*^9, 
   3.9300273482302804`*^9, 3.9300336671475124`*^9, 3.930033850141815*^9, 
   3.9300339573733225`*^9, 3.9300341264136615`*^9, 3.9300342252217183`*^9, 
   3.9300345488129025`*^9, 3.9300346167844915`*^9, 3.930035784452939*^9, 
   3.9300358844746513`*^9, 3.9300359172726326`*^9, {3.930036003959594*^9, 
   3.930036030078693*^9}, 3.9300360990127525`*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"a2aa7f20-9c40-411f-964b-05c667288c3e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solve normal problem", "Subsubsection",
 CellChangeTimes->{{3.9300356120295577`*^9, 
  3.930035623672051*^9}},ExpressionUUID->"4e21fd3b-37d7-47d4-b1e6-\
4fdbfe64643c"],

Cell[CellGroupData[{

Cell[BoxData[{"p", "\[IndentingNewLine]", 
 SubscriptBox["\[CapitalGamma]", 
  "N"], "\[IndentingNewLine]", "in", "\[IndentingNewLine]", "ground", "\
\[IndentingNewLine]", "\[CapitalOmega]", "\[IndentingNewLine]", "x", "\
\[IndentingNewLine]", "y", "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pfun", "=", 
   RowBox[{"NDSolveValue", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"op", "==", 
        SubscriptBox["\[CapitalGamma]", "N"]}], ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"DirichletCondition", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"p", "[", 
             RowBox[{"x", ",", " ", "y"}], "]"}], " ", "==", " ", "1"}], ",", 
           " ", "in"}], "]"}], ",", " ", 
         RowBox[{"DirichletCondition", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"p", "[", 
             RowBox[{"x", ",", " ", "y"}], "]"}], " ", "==", " ", "0"}], ",", 
           " ", "ground"}], "]"}]}], "}"}]}], "}"}], ",", "p", ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}], "\[Element]", "\[CapitalOmega]"}]}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.929951950491926*^9, 3.929951952400263*^9}, {
   3.930027073891449*^9, 3.930027074140822*^9}, {3.9300273184916267`*^9, 
   3.9300273190814095`*^9}, {3.930035592661765*^9, 3.930035596121559*^9}, {
   3.930035630902937*^9, 3.9300356463665524`*^9}, {3.9300357916578827`*^9, 
   3.9300357927178144`*^9}, {3.9300358283695955`*^9, 3.9300358295213127`*^9}, 
   3.930035904597101*^9, {3.9300359770841646`*^9, 3.930036020537759*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"4cd4ed6a-ed5a-455b-b071-c5912cfa33a2"],

Cell[BoxData["p"], "Output",
 CellChangeTimes->{{3.93003600400955*^9, 3.9300360301523733`*^9}, 
   3.9300360990827475`*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"2ef02d3e-e787-4020-85ab-9242fbaf9830"],

Cell[BoxData[
 RowBox[{"NeumannValue", "[", 
  RowBox[{"0", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Equal]", "2"}], ",", 
     RowBox[{"y", "\[Equal]", "2"}], ",", 
     RowBox[{"x", "\[Equal]", 
      RowBox[{"-", "2"}]}], ",", 
     RowBox[{"y", "\[Equal]", 
      RowBox[{"-", "2"}]}]}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{{3.93003600400955*^9, 3.9300360301523733`*^9}, 
   3.9300360990927444`*^9},
 CellLabel->"Out[57]=",ExpressionUUID->"34439b2c-4966-4afa-a5c8-361d4de27d75"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", "x"}], ")"}], "2"], "+", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", "y"}], ")"}], "2"]}], "\[LessEqual]", 
  "0.010000000000000002`"}]], "Output",
 CellChangeTimes->{{3.93003600400955*^9, 3.9300360301523733`*^9}, 
   3.930036099112748*^9},
 CellLabel->"Out[58]=",ExpressionUUID->"1241a830-2961-48a2-899e-81f94299e779"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "x"}], ")"}], "2"], "+", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "y"}], ")"}], "2"]}], "\[LessEqual]", 
  "0.010000000000000002`"}]], "Output",
 CellChangeTimes->{{3.93003600400955*^9, 3.9300360301523733`*^9}, 
   3.930036099132743*^9},
 CellLabel->"Out[59]=",ExpressionUUID->"7f6c350b-740b-4fbc-a49b-87637e8206ae"],

Cell[BoxData[
 RowBox[{"ImplicitRegion", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", "x"}], ")"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", "y"}], ")"}], "2"]}], ">", 
     "0.010000000000000002`"}], "&&", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "x"}], ")"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "y"}], ")"}], "2"]}], ">", 
     "0.010000000000000002`"}], "&&", 
    RowBox[{
     RowBox[{"-", "2"}], "\[LessEqual]", "x", "\[LessEqual]", "2"}], "&&", 
    RowBox[{
     RowBox[{"-", "2"}], "\[LessEqual]", "y", "\[LessEqual]", "2"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{{3.93003600400955*^9, 3.9300360301523733`*^9}, 
   3.930036099142742*^9},
 CellLabel->"Out[60]=",ExpressionUUID->"6ca58415-e437-4cd8-8c27-5799953d99e3"],

Cell[BoxData["x"], "Output",
 CellChangeTimes->{{3.93003600400955*^9, 3.9300360301523733`*^9}, 
   3.93003609916269*^9},
 CellLabel->"Out[61]=",ExpressionUUID->"27b513a0-d5f3-47c2-9f67-2f07e23f1911"],

Cell[BoxData["y"], "Output",
 CellChangeTimes->{{3.93003600400955*^9, 3.9300360301523733`*^9}, 
   3.930036099182689*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"37e7576f-f367-44b9-a373-afd072904c72"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plot normal problem", "Subsubsection",
 CellChangeTimes->{{3.930035669400279*^9, 
  3.9300356720760107`*^9}},ExpressionUUID->"f608f8f9-c896-4fe2-b66c-\
d85fe62f2790"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"p", "[", 
      RowBox[{"x", ",", "y"}], "]"}], "/.", "pfun"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", " ", 
   RowBox[{"RegionFunction", "->", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
      RowBox[{"RegionMember", "[", 
       RowBox[{"\[CapitalOmega]", ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}], "]"}]}], ",", 
   RowBox[{"PlotRange", "->", "All"}], ",", 
   RowBox[{"Mesh", "->", "None"}], ",", 
   RowBox[{"ColorFunction", "->", "\"\<TemperatureMap\>\""}], ",", " ", 
   RowBox[{"PlotLabel", "->", 
    RowBox[{"Style", "[", 
     RowBox[{"\"\<p\>\"", ",", "16", ",", "Bold"}], "]"}]}], ",", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<p\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.929578361552098*^9, 3.9295783884063425`*^9}, {
  3.929578456175935*^9, 3.929578507413974*^9}, {3.9295785990750885`*^9, 
  3.9295786477219296`*^9}, {3.929951700430244*^9, 3.9299517009407215`*^9}, {
  3.9300273135138283`*^9, 3.9300273213454237`*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"8ddbc180-26d8-42b7-b38d-76428d09f635"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll", "reps", 
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"InterpolatingFunction\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"2.0000000000000284`\\\"}], \\\",\\\", \
\\\"2.0000000000000284`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"2.0000000000000284`\\\"}], \\\",\\\", \
\\\"2.0000000000000284`\\\"}], \\\"}\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"5\\\", \\\",\\\", \\\"4225\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"1479\\\", \\\",\\\", \
\\\"0\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"3\\\", \\\
\",\\\", \\\"0\\\"}], \\\"}\\\"}], \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
RowBox[{\\\"Indeterminate\\\", \\\"&\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"3\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"NDSolve`FEM`ElementMesh\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.8999999999999992`\\\"}], \\\",\\\", RowBox[{\
\\\"-\\\", \\\"1.`\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.9148652610243744`\\\"}], \\\",\\\", RowBox[{\
\\\"-\\\", \\\"0.9475397653498172`\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \\\"0.9550415243910435`\\\"}], \
\\\",\\\", RowBox[{\\\"-\\\", \\\"0.9106762323291324`\\\"}]}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \\\"1.`\\\"}], \\\",\
\\\", RowBox[{\\\"-\\\", \\\"0.8999999999999992`\\\"}]}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"1.0524602346501828`\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \
\\\"0.9148652610243744`\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"1.0893237676708671`\\\"}], \\\",\\\", RowBox[{\
\\\"-\\\", \\\"0.9550415243910436`\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \\\"1.1000000000000008`\\\"}], \
\\\",\\\", RowBox[{\\\"-\\\", \\\"1.`\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \\\"1.0851347389756256`\\\"}], \
\\\",\\\", RowBox[{\\\"-\\\", \\\"1.0524602346501828`\\\"}]}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"1.0449584756089565`\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \
\\\"1.0893237676708671`\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"1.`\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \
\\\"1.1000000000000008`\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1469\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"NDSolve`FEM`TriangleElement\\\", \\\
\"[\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"6\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"6\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"6\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\
\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"6\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"6\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"6\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"6\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"6\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"6\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"6\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"688\\\", \\\"\[RightSkeleton]\\\
\"}]}], \\\"}\\\"}], \\\"]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"NDSolve`FEM`LineElement\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"3\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"3\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"7\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"3\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\
\", \\\"74\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"}\\\"}]}], \\\"]\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"NDSolve`FEM`PointElement\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\
\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"158\\\", \\\"\[RightSkeleton]\\\
\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"30\\\", \
\\\",\\\", \\\"29\\\", \\\",\\\", \\\"31\\\", \\\",\\\", \\\"32\\\", \
\\\",\\\", \\\"33\\\", \\\",\\\", \\\"34\\\", \\\",\\\", \\\"35\\\", \
\\\",\\\", \\\"36\\\", \\\",\\\", \\\"37\\\", \\\",\\\", \\\"38\\\", \
\\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"158\\\", \\\"\[RightSkeleton]\
\\\"}]}], \\\"}\\\"}]}], \\\"]\\\"}], \\\"}\\\"}]}], \\\"]\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"1.`\\\", \\\",\\\", \\\
\"1.`\\\", \\\",\\\", \\\"1.`\\\", \\\",\\\", \\\"1.`\\\", \\\",\\\", \\\"1.`\
\\\", \\\",\\\", \\\"1.`\\\", \\\",\\\", \\\"1.`\\\", \\\",\\\", \\\"1.`\\\", \
\\\",\\\", \\\"1.`\\\", \\\",\\\", \\\"1.`\\\", \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1469\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", \\\"Automatic\\\", \\\"}\\\"}]}], \\\"]\\\"}], \
\\\"}\\\"}]\\) is neither a list of replacement rules nor a valid dispatch \
table, and so cannot be used for replacing.\"", 2, 64, 10, 
   34753929315528946095, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9300360994026737`*^9},
 CellLabel->
  "During evaluation of \
In[64]:=",ExpressionUUID->"8e9222af-4304-4895-9f54-0f635660fa2a"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll", "reps", 
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"InterpolatingFunction\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"2.0000000000000284`\\\"}], \\\",\\\", \
\\\"2.0000000000000284`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"2.0000000000000284`\\\"}], \\\",\\\", \
\\\"2.0000000000000284`\\\"}], \\\"}\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"5\\\", \\\",\\\", \\\"4225\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"1479\\\", \\\",\\\", \
\\\"0\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"3\\\", \\\
\",\\\", \\\"0\\\"}], \\\"}\\\"}], \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
RowBox[{\\\"Indeterminate\\\", \\\"&\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"3\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"NDSolve`FEM`ElementMesh\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.8999999999999992`\\\"}], \\\",\\\", RowBox[{\
\\\"-\\\", \\\"1.`\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.9148652610243744`\\\"}], \\\",\\\", RowBox[{\
\\\"-\\\", \\\"0.9475397653498172`\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \\\"0.9550415243910435`\\\"}], \
\\\",\\\", RowBox[{\\\"-\\\", \\\"0.9106762323291324`\\\"}]}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \\\"1.`\\\"}], \\\",\
\\\", RowBox[{\\\"-\\\", \\\"0.8999999999999992`\\\"}]}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"1.0524602346501828`\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \
\\\"0.9148652610243744`\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"1.0893237676708671`\\\"}], \\\",\\\", RowBox[{\
\\\"-\\\", \\\"0.9550415243910436`\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \\\"1.1000000000000008`\\\"}], \
\\\",\\\", RowBox[{\\\"-\\\", \\\"1.`\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \\\"1.0851347389756256`\\\"}], \
\\\",\\\", RowBox[{\\\"-\\\", \\\"1.0524602346501828`\\\"}]}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"1.0449584756089565`\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \
\\\"1.0893237676708671`\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"1.`\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \
\\\"1.1000000000000008`\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1469\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"NDSolve`FEM`TriangleElement\\\", \\\
\"[\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"6\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"6\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"6\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\
\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"6\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"6\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"6\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"6\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"6\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"6\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"6\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"688\\\", \\\"\[RightSkeleton]\\\
\"}]}], \\\"}\\\"}], \\\"]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"NDSolve`FEM`LineElement\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"3\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"3\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"7\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"3\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\
\", \\\"74\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"}\\\"}]}], \\\"]\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"NDSolve`FEM`PointElement\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\
\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"158\\\", \\\"\[RightSkeleton]\\\
\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"30\\\", \
\\\",\\\", \\\"29\\\", \\\",\\\", \\\"31\\\", \\\",\\\", \\\"32\\\", \
\\\",\\\", \\\"33\\\", \\\",\\\", \\\"34\\\", \\\",\\\", \\\"35\\\", \
\\\",\\\", \\\"36\\\", \\\",\\\", \\\"37\\\", \\\",\\\", \\\"38\\\", \
\\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"158\\\", \\\"\[RightSkeleton]\
\\\"}]}], \\\"}\\\"}]}], \\\"]\\\"}], \\\"}\\\"}]}], \\\"]\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"1.`\\\", \\\",\\\", \\\
\"1.`\\\", \\\",\\\", \\\"1.`\\\", \\\",\\\", \\\"1.`\\\", \\\",\\\", \\\"1.`\
\\\", \\\",\\\", \\\"1.`\\\", \\\",\\\", \\\"1.`\\\", \\\",\\\", \\\"1.`\\\", \
\\\",\\\", \\\"1.`\\\", \\\",\\\", \\\"1.`\\\", \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1469\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", \\\"Automatic\\\", \\\"}\\\"}]}], \\\"]\\\"}], \
\\\"}\\\"}]\\) is neither a list of replacement rules nor a valid dispatch \
table, and so cannot be used for replacing.\"", 2, 64, 11, 
   34753929315528946095, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.93003609948501*^9},
 CellLabel->
  "During evaluation of \
In[64]:=",ExpressionUUID->"d516726b-a22a-43fc-8dc8-9d7ae2c1e093"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll", "reps", 
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"InterpolatingFunction\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"2.0000000000000284`\\\"}], \\\",\\\", \
\\\"2.0000000000000284`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"2.0000000000000284`\\\"}], \\\",\\\", \
\\\"2.0000000000000284`\\\"}], \\\"}\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"5\\\", \\\",\\\", \\\"4225\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"1479\\\", \\\",\\\", \
\\\"0\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"3\\\", \\\
\",\\\", \\\"0\\\"}], \\\"}\\\"}], \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
RowBox[{\\\"Indeterminate\\\", \\\"&\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"3\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"NDSolve`FEM`ElementMesh\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.8999999999999992`\\\"}], \\\",\\\", RowBox[{\
\\\"-\\\", \\\"1.`\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.9148652610243744`\\\"}], \\\",\\\", RowBox[{\
\\\"-\\\", \\\"0.9475397653498172`\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \\\"0.9550415243910435`\\\"}], \
\\\",\\\", RowBox[{\\\"-\\\", \\\"0.9106762323291324`\\\"}]}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \\\"1.`\\\"}], \\\",\
\\\", RowBox[{\\\"-\\\", \\\"0.8999999999999992`\\\"}]}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"1.0524602346501828`\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \
\\\"0.9148652610243744`\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"1.0893237676708671`\\\"}], \\\",\\\", RowBox[{\
\\\"-\\\", \\\"0.9550415243910436`\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \\\"1.1000000000000008`\\\"}], \
\\\",\\\", RowBox[{\\\"-\\\", \\\"1.`\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \\\"1.0851347389756256`\\\"}], \
\\\",\\\", RowBox[{\\\"-\\\", \\\"1.0524602346501828`\\\"}]}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"1.0449584756089565`\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \
\\\"1.0893237676708671`\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"1.`\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \
\\\"1.1000000000000008`\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1469\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"NDSolve`FEM`TriangleElement\\\", \\\
\"[\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"6\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"6\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"6\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\
\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"6\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"6\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"6\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"6\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"6\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"6\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"6\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"688\\\", \\\"\[RightSkeleton]\\\
\"}]}], \\\"}\\\"}], \\\"]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"NDSolve`FEM`LineElement\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"3\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"3\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"7\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"3\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\
\", \\\"74\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"}\\\"}]}], \\\"]\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"NDSolve`FEM`PointElement\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\
\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"158\\\", \\\"\[RightSkeleton]\\\
\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"30\\\", \
\\\",\\\", \\\"29\\\", \\\",\\\", \\\"31\\\", \\\",\\\", \\\"32\\\", \
\\\",\\\", \\\"33\\\", \\\",\\\", \\\"34\\\", \\\",\\\", \\\"35\\\", \
\\\",\\\", \\\"36\\\", \\\",\\\", \\\"37\\\", \\\",\\\", \\\"38\\\", \
\\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"158\\\", \\\"\[RightSkeleton]\
\\\"}]}], \\\"}\\\"}]}], \\\"]\\\"}], \\\"}\\\"}]}], \\\"]\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"1.`\\\", \\\",\\\", \\\
\"1.`\\\", \\\",\\\", \\\"1.`\\\", \\\",\\\", \\\"1.`\\\", \\\",\\\", \\\"1.`\
\\\", \\\",\\\", \\\"1.`\\\", \\\",\\\", \\\"1.`\\\", \\\",\\\", \\\"1.`\\\", \
\\\",\\\", \\\"1.`\\\", \\\",\\\", \\\"1.`\\\", \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1469\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", \\\"Automatic\\\", \\\"}\\\"}]}], \\\"]\\\"}], \
\\\"}\\\"}]\\) is neither a list of replacement rules nor a valid dispatch \
table, and so cannot be used for replacing.\"", 2, 64, 12, 
   34753929315528946095, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9300360995150595`*^9},
 CellLabel->
  "During evaluation of \
In[64]:=",ExpressionUUID->"5f57883a-1337-4e55-94f9-fb023bea2207"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"ReplaceAll\\\", \
\\\"::\\\", \\\"reps\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"", 2, 64, 13, 34753929315528946095, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.930036099535062*^9},
 CellLabel->
  "During evaluation of \
In[64]:=",ExpressionUUID->"74503eae-0c84-4118-b5bb-ac5be86e60ae"],

Cell[BoxData[
 Graphics3DBox[{{}, {}},
  Axes->True,
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"y\"", TraditionalForm], 
    FormBox["\"p\"", TraditionalForm]},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{378.62762443638377`, 314.23985450903837`},
  ImageSizeRaw->Automatic,
  Lighting->"Neutral",
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "RotationControl" -> 
    "Globe"},
  PlotLabel->FormBox[
    StyleBox["\"p\"", 16, Bold, StripOnInput -> False], TraditionalForm],
  PlotRange->{All, All, All},
  PlotRangePadding->{Automatic, Automatic, Automatic},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-2.607537314192671, 0.8189748197920377, 1.9950011026662373`},
  ViewVertical->{0.5624856954480342, -0.17666539940111267`, 
   0.8077123120708182}]], "Output",
 CellChangeTimes->{
  3.9295785619066324`*^9, {3.9295786005749884`*^9, 3.929578615889072*^9}, 
   3.9295787040304546`*^9, 3.929943247444436*^9, 3.9299504275008826`*^9, 
   3.929950469155667*^9, 3.929950516995982*^9, 3.9299515782052774`*^9, 
   3.9299516864907217`*^9, 3.9300144520054235`*^9, {3.930016955894405*^9, 
   3.9300169639555416`*^9}, 3.9300177773355975`*^9, 3.9300272577280064`*^9, {
   3.9300273073050857`*^9, 3.930027351803596*^9}, 3.930034549582843*^9, 
   3.9300360995550575`*^9},
 CellLabel->"Out[64]=",ExpressionUUID->"5ffd3269-bdd5-4078-95d5-59b8eee8fbac"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"px", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"pfun", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "1"}], "+", "r"}], ",", 
      RowBox[{"1", "+", "r"}]}], "]"}], ",", 
    RowBox[{"pfun", "[", 
     RowBox[{
      RowBox[{"1", "+", "r"}], ",", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "r"}]}], "]"}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"Error", "=", 
  RowBox[{"ErrorFunc", "[", 
   RowBox[{"A", ",", "B", ",", 
    RowBox[{"px", "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", 
    RowBox[{"px", "[", 
     RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.9295196976273055`*^9, 3.9295197574444056`*^9}, {
  3.929519793878293*^9, 3.929519810902584*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"0e8b5099-4c00-4df7-86d2-2ee024d90a3e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.4815732834043451`", ",", "0.4815730083805338`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.9295198603255577`*^9, 3.929519885659199*^9}, 
   3.9295281471796694`*^9, 3.929528224793559*^9, 3.929528570337352*^9, 
   3.929528712274809*^9, 3.9295289193829327`*^9, 3.929529243269538*^9, 
   3.9295302823760724`*^9, 3.929578342097293*^9, 3.929943247524495*^9, 
   3.9299516868806458`*^9, 3.9300345497028475`*^9, 3.9300360996050525`*^9},
 CellLabel->"Out[65]=",ExpressionUUID->"e551ac73-4a2b-4323-866a-b28ec1621481"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.23157328340434508`"}], ",", 
   RowBox[{"-", "0.13157300838053382`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.9295198603255577`*^9, 3.929519885659199*^9}, 
   3.9295281471796694`*^9, 3.929528224793559*^9, 3.929528570337352*^9, 
   3.929528712274809*^9, 3.9295289193829327`*^9, 3.929529243269538*^9, 
   3.9295302823760724`*^9, 3.929578342097293*^9, 3.929943247524495*^9, 
   3.9299516868806458`*^9, 3.9300345497028475`*^9, 3.9300360996250515`*^9},
 CellLabel->"Out[66]=",ExpressionUUID->"9d045a14-350b-4413-87b0-431fd79222c8"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"InpLst", ",", 
    SubscriptBox["Inp", "dual"]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"xpLst", ",", " ", 
    SubscriptBox["xp", "dual"]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"ErrorLst", ",", "Error"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.9295278571159286`*^9, 3.929527913433034*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"f2bbe875-a3cf-498b-9715-8d89d1e593c9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Reset", " ", "the", " ", "recursion", " ", "limit", " ", "if", " ", 
    "changed"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"$RecursionLimit", "=", "1024"}], ";"}]}]], "Input",
 CellChangeTimes->{{3.9295302528498793`*^9, 3.9295302528498793`*^9}, {
  3.9295781151376896`*^9, 3.929578116047645*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"e0de8d14-3534-4c64-975b-8622600e220b"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1920, 1018},
WindowMargins->{{-5.5, Automatic}, {Automatic, -5.5}},
DockedCells->{
  Cell[
   BoxData[
    DynamicModuleBox[{LinterUIDockedCell`Private`notebook$$}, 
     GraphicsBox[{
       InsetBox[
        TemplateBox[{
          PaneBox[
           StyleBox[
           "\"Code Analysis\"", FontColor -> GrayLevel[0.4], FontFamily -> 
            "Source Sans Pro", FontWeight -> Plain, FontSize -> 13, 
            StripOnInput -> False], 
           BaselinePosition -> (Baseline -> Scaled[0.65])], 
          TemplateBox[{8}, "Spacer1"], 
          PaneBox[
           
           PaneSelectorBox[{{False, False} -> 
             TemplateBox[{0}, "Spacer1"], {True, False} -> 
             TemplateBox[{0}, "Spacer1"], {True, True} -> PaneBox[
               InterpretationBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEExpressions", "PercolateAnimator"][Medium]], 
                ProgressIndicator[Appearance -> "Percolate"], 
                BaseStyle -> {"Deploy"}], BaselinePosition -> Scaled[0.05]], {
              False, True} -> 
             DynamicModuleBox[{
               CodeInspector`LinterUI`Private`tracker$$ = 
                CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts}, 
               DynamicWrapperBox[
                DynamicBox[
                 ToBoxes[
                 CodeInspector`LinterUI`Private`tracker$$; 
                  LinterUIDockedCell`Private`dockedCellSeverityCountsButton[
                   LinterUIDockedCell`Private`notebook$$], TraditionalForm], 
                 TrackedSymbols :> {
                  CodeInspector`LinterUI`Private`tracker$$}], 
                If[
                CodeInspector`LinterUI`Private`tracker$$ =!= 
                 CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts, CodeInspector`LinterUI`Private`tracker$$ = 
                 CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts]], DynamicModuleValues :> {}]}, 
            Dynamic[FEPrivate`EvaluatorStatus["Local"]; {
               CodeInspector`LinterUI`Private`varValue[
               LinterUIDockedCell`Private`notebook$$, "AnalysisInProgressQ"], 
               TrueQ[
                CodeInspector`LinterUI`Private`varValue[
                LinterUIDockedCell`Private`notebook$$, 
                 "DockedCellPresentQ"]]}], ImageSize -> Automatic], 
           BaselinePosition -> Scaled[0.15]]}, "Row", 
         DisplayFunction -> (PaneBox[
           RowBox[{
             TemplateSlotSequence[1, "\[InvisibleSpace]"]}], Alignment -> 
           Baseline]& ), InterpretationFunction -> (RowBox[{"Row", "[", 
            RowBox[{
              RowBox[{"{", 
                TemplateSlotSequence[1, ","], "}"}], ",", 
              RowBox[{"Alignment", "\[Rule]", "Baseline"}]}], "]"}]& )], 
        Offset[{8, 0}, {-1, 0}], {-1, 0}], 
       InsetBox[
        PaneSelectorBox[{
         True -> DynamicModuleBox[{
            CodeInspector`LinterUI`Private`hoverQ$$ = False, 
             CodeInspector`LinterUI`Private`mouseDownQ$$ = False, 
             CodeInspector`LinterUI`Private`fontColor$$}, 
            ButtonBox[
             DynamicWrapperBox[
              TemplateBox[{
                DynamicWrapperBox[
                 StyleBox[
                  PaneBox[
                  "\"Reanalyze Notebook\"", ContentPadding -> True, 
                   FrameMargins -> None, BaselinePosition -> Baseline], 
                  FontColor -> 
                  Dynamic[CodeInspector`LinterUI`Private`fontColor$$], 
                  FontColor -> GrayLevel[0.2], FontFamily -> 
                  "Source Sans Pro", FontWeight -> Plain, FontSize -> 14, 
                  StripOnInput -> False], 
                 CodeInspector`LinterUI`Private`fontColor$$ = Which[
                   TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextInactiveColor"], 
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextHoverColor"], True, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextColor"]]], ContentPadding -> False, 
                FrameMargins -> {{9, 9}, {0, 0}}, 
                Alignment -> {Center, Center}, ImageSize -> {Automatic, 19}, 
                RoundingRadius -> 3, FrameStyle -> Dynamic[
                  Directive[
                   AbsoluteThickness[0.5], 
                   Which[
                    TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeInactiveColor"], 
                    CodeInspector`LinterUI`Private`hoverQ$$, 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeHoverColor"], True, 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeColor"]]]], Background -> Dynamic[
                  Which[
                   TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackInactiveColor"], 
                   And[
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                    CodeInspector`LinterUI`Private`mouseDownQ$$], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackMouseDownColor"], 
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackHoverColor"], True, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackColor"]]]}, "Highlighted"], 
              CodeInspector`LinterUI`Private`hoverQ$$ = 
               CurrentValue["MouseOver"]; 
              CodeInspector`LinterUI`Private`mouseDownQ$$ = 
               CurrentValue["MouseButtonTest"]], 
             Appearance -> {
              "Default" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True], 
               "Pressed" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True]}, 
             BaselinePosition -> Baseline, 
             ButtonFunction :> (
              If[OptionValue[{
                  ImageSize -> {Automatic, 19}, 
                   FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                   Baseline, Alignment -> {Center, Center}, Method -> 
                   "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                   "TextHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                   "BackHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                   "EdgeHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, "ActiveQ"] =!= 
                False, 
                CodeInspector`LinterUI`Private`attachAnalysisAction[
                 EvaluationNotebook[]]]; 
              CodeInspector`LinterUI`Private`mouseDownQ$$ = False), 
             ContentPadding -> False, Evaluator -> Automatic, Method -> 
             "Queued"], DynamicModuleValues :> {}], False -> ButtonBox[
            TemplateBox[{
              StyleBox[
              "\"Analyze Notebook\"", FontColor -> GrayLevel[0.2], FontFamily -> 
               "Source Sans Pro", FontWeight -> Plain, FontSize -> 14, 
               StripOnInput -> False], ImageSize -> {Automatic, 19}, 
              FrameMargins -> {{9, 9}, {0, 0}}, BaselinePosition -> Baseline, 
              Alignment -> {Center, Center}, Background -> GrayLevel[1], 
              FrameStyle -> Dynamic[
                If[
                 CurrentValue["MouseOver"], 
                 Hue[0.55, 0.82, 0.87], 
                 GrayLevel[0.8]]]}, "Highlighted"], 
            Appearance -> {
             "Default" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True]}, 
            ButtonFunction :> (CurrentValue[
                EvaluationNotebook[], DockedCells] = 
              With[{LinterUIDockedCell`Private`dockedCells = CurrentValue[
                   EvaluationNotebook[], DockedCells]}, 
                Pick[LinterUIDockedCell`Private`dockedCells, 
                 Map[Quiet[
                    Options[#, CellTags]] =!= {
                   CellTags -> "CodeAnalysisDockedCell"}& , 
                  LinterUIDockedCell`Private`dockedCells]]]; 
             Needs["CodeInspector`"]; 
             CodeInspector`AttachAnalysis[
              LinterUIDockedCell`Private`notebook$$]), Evaluator -> Automatic,
             Method -> "Queued"]}, 
         Dynamic[FEPrivate`EvaluatorStatus["Local"]; TrueQ[
            CodeInspector`LinterUI`Private`varValue[
            LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"]]], 
         ImageSize -> Automatic], 
        Offset[{-26, 0}, {1, 0}], {1, 0}], 
       TagBox[
        TagBox[
         TooltipBox[{{
            GrayLevel[0.6], 
            DiskBox[
             Offset[{-11, 0}, {1, 0}], 
             Offset[6]]}, {
            GrayLevel[0.97], 
            AbsoluteThickness[1.5], 
            CapForm["Round"], 
            LineBox[{{
               Offset[{-13, 2}, {1, 0}], 
               Offset[{-9, -2}, {1, 0}]}, {
               Offset[{-13, -2}, {1, 0}], 
               Offset[{-9, 2}, {1, 0}]}}]}}, "\"Close analysis\"", 
          TooltipDelay -> 0, TooltipStyle -> "TextStyling"], 
         Annotation[#, "Close analysis", "Tooltip"]& ], 
        EventHandlerTag[{"MouseClicked" :> (Map[NotebookDelete, 
             Flatten[
              CodeInspector`LinterUI`Private`varValue[
              LinterUIDockedCell`Private`notebook$$, All, 
               "UIAttachedCells"]]]; Map[NotebookDelete, 
             Flatten[
              CodeInspector`LinterUI`Private`varValue[
              LinterUIDockedCell`Private`notebook$$, All, 
               "CleanCellBracketMarker"]]]; CurrentValue[
              EvaluationNotebook[], DockedCells] = 
            With[{LinterUIDockedCell`Private`dockedCells = CurrentValue[
                 EvaluationNotebook[], DockedCells]}, 
              Pick[LinterUIDockedCell`Private`dockedCells, 
               Map[Quiet[
                  Options[#, CellTags]] =!= {
                 CellTags -> "CodeAnalysisDockedCell"}& , 
                LinterUIDockedCell`Private`dockedCells]]]; 
           CodeInspector`LinterUI`Private`applyToVar[Remove, {
              EvaluationNotebook[], All}]; 
           CodeInspector`LinterUI`Private`varSet[{
             LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"}, 
             False]), Method -> "Preemptive", PassEventsDown -> Automatic, 
          PassEventsUp -> True}]]}, AspectRatio -> Full, 
      ImageSize -> {Full, 23}, PlotRange -> {{-1, 1}, {-1, 1}}], 
     Deinitialization :> 
     CodeInspector`LinterUI`Private`varSet[{
       LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"}, False], 
     DynamicModuleValues :> {}, 
     Initialization :> ({
       LinterUIDockedCell`Private`dockedCellSeverityCountsButton[
          Pattern[LinterUIDockedCell`Private`notebook, 
           Blank[NotebookObject]]] := 
        With[{LinterUIDockedCell`Private`formatIcon = 
           Show[#, ImageSize -> {13, 9}, BaselinePosition -> Scaled[-0.2]]& }, 
          ActionMenu[
           Highlighted[
            Row[{
              CodeInspector`LinterUI`Private`lintSeverityCountsIconRow[
              LinterUIDockedCell`Private`notebook, "exclamSize" -> 12, 
               FontSize -> 14, FontWeight -> Plain], 
              Spacer[2], 
              LinterUIDockedCell`Private`formatIcon[
               CodeInspector`LinterUI`Private`iconData["DownChevron"][
                CodeInspector`LinterUI`Private`colorData["UIDark"]]]}], 
            ImageSize -> {Automatic, 19}, BaselinePosition -> Baseline, 
            Background -> White, Frame -> True, FrameStyle -> Dynamic[
              If[
               CurrentValue["MouseOver"], 
               Hue[0.55, 0.82, 0.87], 
               GrayLevel[0.8]]], FrameMargins -> {6 {1, 1}, {1, 1}}, 
            Alignment -> {Center, Baseline}], 
           Map[
           LinterUIDockedCell`Private`dockedCellMenuItem[
            LinterUIDockedCell`Private`notebook, #]& , 
            CodeInspector`LinterUI`Private`varValue[
            LinterUIDockedCell`Private`notebook, All, "Cell"]], Appearance -> 
           None]], LinterUIDockedCell`Private`dockedCellMenuItem[
          Pattern[LinterUIDockedCell`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[LinterUIDockedCell`Private`cell, 
           Blank[CellObject]]] := With[{}, Graphics[{
             Inset[
              With[{LinterUIDockedCell`Private`expressionString = First[
                  FrontEndExecute[
                   FrontEnd`ExportPacket[
                    First[
                    CodeInspector`LinterUI`Private`varValue[
                    LinterUIDockedCell`Private`notebook, 
                    LinterUIDockedCell`Private`cell, "CellContents"]], 
                    "InputText"]]]}, {
               LinterUIDockedCell`Private`noLineBreaks = 
                StringReplace[
                 LinterUIDockedCell`Private`expressionString, "\n" -> " "]}, {
               LinterUIDockedCell`Private`previewString = 
                StringTake[LinterUIDockedCell`Private`noLineBreaks, {1, 
                   UpTo[LinterUIDockedCell`Private`$previewLength]}]}, 
               CodeInspector`LinterUI`Private`styleData["FixedWidth"][
                If[
                StringLength[LinterUIDockedCell`Private`expressionString] > 
                 LinterUIDockedCell`Private`$previewLength, 
                 StringDrop[LinterUIDockedCell`Private`previewString, -1] <> 
                 "\[Ellipsis]", 
                 LinterUIDockedCell`Private`previewString]]], {-1, 0}, {-1, 
              0}], 
             Inset[
              CodeInspector`LinterUI`Private`lintSeverityCountsIconRow[
              LinterUIDockedCell`Private`cell], {1, 0}, {1, 0}]}, 
            ImageSize -> {300, 25}, AspectRatio -> Full, 
            PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> None] :> (
           SelectionMove[LinterUIDockedCell`Private`cell, All, Cell]; 
           With[{LinterUIDockedCell`Private`nb = 
              ParentNotebook[LinterUIDockedCell`Private`cell]}, 
             FrontEndExecute[
              FrontEnd`FrontEndToken[
              LinterUIDockedCell`Private`nb, "OpenSelectionParents"]]]; 
           SelectionMove[LinterUIDockedCell`Private`cell, After, Cell])], 
        LinterUIDockedCell`Private`$previewLength = 28, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`notebook, 
            Blank[NotebookObject]], All, 
           Pattern[CodeInspector`LinterUI`Private`name, 
            Blank[String]]}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Map[Apply[CodeInspector`LinterUI`Private`function, 
           Join[
            ToHeldExpression[#], 
            Hold[CodeInspector`LinterUI`Private`args]]]& , 
          Names[(
            CodeInspector`LinterUI`Private`varNameString[
             CodeInspector`LinterUI`Private`notebook] <> "*") <> 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]], 
           Pattern[CodeInspector`LinterUI`Private`name, 
            Blank[String]]}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Apply[CodeInspector`LinterUI`Private`function, 
          Join[
           ToHeldExpression[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments]], 
           Hold[CodeInspector`LinterUI`Private`args]]], Null, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]], All}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Map[Apply[CodeInspector`LinterUI`Private`function, 
           Join[
            ToHeldExpression[#], 
            Hold[CodeInspector`LinterUI`Private`args]]]& , 
          Names[
          CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> "*"]], 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], All, 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := Map[Symbol, 
          
          Names[(CodeInspector`LinterUI`Private`varNameString[
             CodeInspector`LinterUI`Private`notebook] <> "*") <> 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := Symbol[
          CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`nameArguments, 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], All] := Map[Symbol, 
          Names[
          CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> "*"]], 
        CodeInspector`LinterUI`Private`varSet[{
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]]}, 
          Pattern[CodeInspector`LinterUI`Private`value, 
           Blank[]]] := Apply[Set, 
          Append[
           ToHeldExpression[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments]], 
           CodeInspector`LinterUI`Private`value]], 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]]] := ((
           "CodeInspector`LinterUI`Private`Vars`" <> "$$") <> 
          With[{CodeInspector`LinterUI`Private`nbID = 
             Last[CodeInspector`LinterUI`Private`notebook]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`nbID], 
             StringReplace[CodeInspector`LinterUI`Private`nbID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`nbID]]]) <> "$$", Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]]] := (
          CodeInspector`LinterUI`Private`varNameString[
            Replace[
             ParentNotebook[CodeInspector`LinterUI`Private`cell], $Failed -> 
             EvaluationNotebook[]]] <> 
          With[{
            CodeInspector`LinterUI`Private`cellID = 
             First[CodeInspector`LinterUI`Private`cell]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`cellID], 
             StringReplace[CodeInspector`LinterUI`Private`cellID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`cellID]]]) <> "$$", Null,
         CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]]] := (
          CodeInspector`LinterUI`Private`varNameString[
           CodeInspector`LinterUI`Private`notebook] <> 
          With[{CodeInspector`LinterUI`Private`cellID = 
             First[CodeInspector`LinterUI`Private`cell]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`cellID], 
             StringReplace[CodeInspector`LinterUI`Private`cellID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`cellID]]]) <> "$$", Null,
         CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`notebook] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`cell] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`notebook, 
           CodeInspector`LinterUI`Private`cell] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], 
          Pattern[CodeInspector`LinterUI`Private`lint, 
           Blank[CodeInspector`InspectionObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := ((
           CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> Apply[Sequence, 
             Riffle[
              Map[StringDelete[
                ToString[#], 
                Alternatives["[", "]", "{", "}", ",", " "]]& , 
               CodeInspector`LinterUI`Private`extractFirstList[
                Last[CodeInspector`LinterUI`Private`lint][
                CodeParser`Source]]], "$"]]) <> "$$") <> 
         CodeInspector`LinterUI`Private`name, 
        CodeInspector`LinterUI`Private`extractFirstList[
          Pattern[CodeInspector`LinterUI`Private`expr, 
           Blank[]]] := FirstCase[CodeInspector`LinterUI`Private`expr, 
          Blank[List], {}, {0, Infinity}]}; 
      LinterUIDockedCell`Private`notebook$$ = EvaluationNotebook[]), 
     UnsavedVariables :> {LinterUIDockedCell`Private`notebook$$}]], 
   CellFrame -> {{0, 0}, {1, 1}}, CellFrameMargins -> {{0, 0}, {0, 0}}, 
   CellFrameColor -> GrayLevel[0.85], Background -> GrayLevel[0.97], CellTags -> 
   "CodeAnalysisDockedCell"]},
TaggingRules-><|"TryRealOnly" -> False|>,
FrontEndVersion->"13.0 for Microsoft Windows (64-bit) (December 2, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"fbdadf91-c7e5-4636-8c9b-1119177fb424"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 171, 3, 69, "Chapter",ExpressionUUID->"818c4b2f-791f-46b3-b9aa-4caa56f525dc"],
Cell[CellGroupData[{
Cell[776, 29, 202, 4, 45, "Subsubsection",ExpressionUUID->"7f2819f1-5d80-42be-beb7-ec303290becc"],
Cell[CellGroupData[{
Cell[1003, 37, 5400, 124, 127, "Input",ExpressionUUID->"176d6cd6-87a1-44d4-b6e6-55c71576794e"],
Cell[6406, 163, 2670, 54, 56, "Output",ExpressionUUID->"70897580-3d27-49d6-b20f-aff13146816d"],
Cell[9079, 219, 3447, 70, 60, "Output",ExpressionUUID->"c29b5a20-9b83-4384-8644-ee56d8715bda"],
Cell[12529, 291, 2533, 46, 34, "Output",ExpressionUUID->"c5f20988-b90e-4228-8863-86f43cdd0e77"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[15111, 343, 170, 3, 45, "Subsubsection",ExpressionUUID->"d8593d58-c90b-472a-a043-20a0d78cf9c7"],
Cell[15284, 348, 3705, 101, 162, "Input",ExpressionUUID->"2329cadc-9b50-450e-838c-ac5fddee909d"],
Cell[CellGroupData[{
Cell[19014, 453, 287, 4, 48, "Input",ExpressionUUID->"876ed925-8d3b-45b9-b892-b4d0aceb30b1"],
Cell[19304, 459, 2195, 60, 34, "Output",ExpressionUUID->"4e47dbc1-daaf-4528-982f-9d4d6180a68f"],
Cell[21502, 521, 1629, 40, 34, "Output",ExpressionUUID->"b35dcef2-59b6-4b77-b430-ddc578b719bb"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[23180, 567, 227, 4, 45, "Subsubsection",ExpressionUUID->"3c460d00-19b1-4c0d-8df9-5b89fe7b89b8"],
Cell[23410, 573, 1751, 31, 28, "Input",ExpressionUUID->"e595fe43-5424-4430-a9ed-b97d97827b35"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25198, 609, 162, 3, 45, "Subsubsection",ExpressionUUID->"adb4241c-94dc-43fe-87e3-6f4858a2927e"],
Cell[25363, 614, 1378, 40, 67, "Input",ExpressionUUID->"922e57be-d543-4e20-a330-e8c65d0fd54f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26778, 659, 154, 3, 54, "Subsection",ExpressionUUID->"80c7c21a-687b-45f0-a5da-434042ee53f7"],
Cell[26935, 664, 2798, 73, 315, "Input",ExpressionUUID->"6cf15ba8-e3f3-4caf-a228-7726bb977484"],
Cell[CellGroupData[{
Cell[29758, 741, 206, 3, 28, "Input",ExpressionUUID->"6df9a3f4-15ae-4d22-a877-72ad611300e5"],
Cell[29967, 746, 1154, 18, 32, "Output",ExpressionUUID->"492a0fff-25d4-450d-b5a2-9713cec0d8ca"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31158, 769, 163, 3, 45, "Subsubsection",ExpressionUUID->"6055696c-0d42-4cdc-a502-6cc6f5c09cca"],
Cell[CellGroupData[{
Cell[31346, 776, 1151, 27, 67, "Input",ExpressionUUID->"065cd602-57fb-420c-b9f9-f6b6ec0f52c6"],
Cell[32500, 805, 1663, 23, 32, "Output",ExpressionUUID->"f7d14e7b-b853-41e2-8df9-9e6d689b4dd5"],
Cell[34166, 830, 1712, 25, 32, "Output",ExpressionUUID->"55282ed9-b405-4f3b-b7c4-3cd4421223e2"]
}, Open  ]],
Cell[35893, 858, 3089, 83, 167, "Input",ExpressionUUID->"45e82c88-014e-4e71-a94f-676c95ad3c51"],
Cell[CellGroupData[{
Cell[39007, 945, 3833, 86, 125, "Input",ExpressionUUID->"da764609-3604-49b2-9307-174f5fa507e7"],
Cell[42843, 1033, 61205, 1045, 66, "Output",ExpressionUUID->"f45eacda-134e-4fe2-b572-173a4d9b3c7a"]
}, Open  ]],
Cell[104063, 2081, 146, 2, 28, "Input",ExpressionUUID->"e6cab5fc-b172-4cd6-a4c7-277e517904e2"],
Cell[CellGroupData[{
Cell[104234, 2087, 3367, 84, 67, "Input",ExpressionUUID->"aa4ec106-045e-41b2-a487-221486ce2245"],
Cell[107604, 2173, 36464, 614, 288, "Output",ExpressionUUID->"ad1ac0bd-a92b-42c7-a989-65df4cba25e9"]
}, Open  ]],
Cell[144083, 2790, 175, 2, 28, "Input",ExpressionUUID->"997945f0-f35f-4114-b902-963ae9d926fd"],
Cell[CellGroupData[{
Cell[144283, 2796, 5758, 150, 266, "Input",ExpressionUUID->"25c06d06-1799-4578-902c-377adff9fd1b"],
Cell[150044, 2948, 124007, 2110, 66, "Output",ExpressionUUID->"42820930-43aa-491a-a440-b9a7c1ea6650"],
Cell[274054, 5060, 70984, 1182, 323, "Output",ExpressionUUID->"43dcb3f5-7fbc-4a27-a7f6-89d056136446"],
Cell[345041, 6244, 67253, 1121, 323, "Output",ExpressionUUID->"67d313d5-be94-43ea-94c9-0f60152eccb7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[412331, 7370, 6986, 190, 181, "Input",ExpressionUUID->"1f12e091-60e0-4ea4-9ab3-463f1a45b638"],
Cell[419320, 7562, 937, 17, 28, "Message",ExpressionUUID->"be5b401f-ba4d-4e64-aa5a-f1f4ce055ebe"],
Cell[420260, 7581, 916, 17, 28, "Message",ExpressionUUID->"6b0986a8-ab74-4664-b94c-22502b96b7af"],
Cell[421179, 7600, 912, 17, 28, "Message",ExpressionUUID->"273029eb-267f-4ee1-bc61-7f31753f1a6b"],
Cell[422094, 7619, 888, 17, 28, "Message",ExpressionUUID->"d8f585c9-a192-4962-953f-b9d054c6f368"],
Cell[422985, 7638, 934, 17, 28, "Message",ExpressionUUID->"0ae6142c-9e06-4ba6-a2cf-ca8866a28ceb"],
Cell[423922, 7657, 916, 17, 28, "Message",ExpressionUUID->"54d68201-2005-4ee0-af3c-8e06ad887515"],
Cell[424841, 7676, 916, 17, 28, "Message",ExpressionUUID->"eef220fe-5b01-4b58-8664-8824503493fd"],
Cell[425760, 7695, 888, 17, 28, "Message",ExpressionUUID->"550dca76-deb0-4cf2-bf93-3e0103074a48"]
}, Open  ]],
Cell[426663, 7715, 654, 18, 48, "Input",ExpressionUUID->"69f48fd4-40d2-4d15-b1aa-e8a123095406"],
Cell[CellGroupData[{
Cell[427342, 7737, 8514, 228, 224, "Input",ExpressionUUID->"5267225d-873a-4788-a9d6-378b4030177c"],
Cell[435859, 7967, 1630, 47, 52, "Output",ExpressionUUID->"b874abcd-3586-43c1-aa60-7bb6b9b0a266"],
Cell[437492, 8016, 1627, 43, 52, "Output",ExpressionUUID->"d599c99c-8639-4488-9ff7-10fbd946ba0a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[439156, 8064, 4944, 132, 107, "Input",ExpressionUUID->"2724edcd-6902-48b0-b639-3bb98cd3e24b"],
Cell[444103, 8198, 22892, 392, 325, "Output",ExpressionUUID->"163f5a13-db55-4f5c-95e3-a9b1dd59eb9b"],
Cell[466998, 8592, 23303, 399, 325, "Output",ExpressionUUID->"52df7e60-3ba7-4e07-aee9-4b6ae352ac88"],
Cell[490304, 8993, 36384, 616, 325, "Output",ExpressionUUID->"561c59ca-6467-4c0c-8696-e76c1ba474be"],
Cell[526691, 9611, 46278, 778, 325, "Output",ExpressionUUID->"02602d14-89a2-4980-894e-29ba9e27d34d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[573018, 10395, 1399, 19, 45, "Subsubsection",ExpressionUUID->"ef78c238-dee6-4366-be46-e7525a602e89"],
Cell[574420, 10416, 2923, 84, 86, "Input",ExpressionUUID->"ae883945-eacf-4ea1-95ab-767f86b0d73a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[577380, 10505, 224, 4, 45, "Subsubsection",ExpressionUUID->"820ae244-1907-4a9d-a12f-7e5102e55fd5"],
Cell[CellGroupData[{
Cell[577629, 10513, 1688, 49, 67, "Input",ExpressionUUID->"c3779edb-2934-4ae3-9a0d-2bef0e71eaf5"],
Cell[579320, 10564, 1248, 28, 34, "Output",ExpressionUUID->"a2aa7f20-9c40-411f-964b-05c667288c3e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[580617, 10598, 173, 3, 45, "Subsubsection",ExpressionUUID->"4e21fd3b-37d7-47d4-b1e6-4fdbfe64643c"],
Cell[CellGroupData[{
Cell[580815, 10605, 1677, 37, 162, "Input",ExpressionUUID->"4cd4ed6a-ed5a-455b-b071-c5912cfa33a2"],
Cell[582495, 10644, 202, 3, 32, "Output",ExpressionUUID->"2ef02d3e-e787-4020-85ab-9242fbaf9830"],
Cell[582700, 10649, 508, 13, 32, "Output",ExpressionUUID->"34439b2c-4966-4afa-a5c8-361d4de27d75"],
Cell[583211, 10664, 431, 12, 32, "Output",ExpressionUUID->"1241a830-2961-48a2-899e-81f94299e779"],
Cell[583645, 10678, 475, 14, 32, "Output",ExpressionUUID->"7f6c350b-740b-4fbc-a49b-87637e8206ae"],
Cell[584123, 10694, 1059, 32, 34, "Output",ExpressionUUID->"6ca58415-e437-4cd8-8c27-5799953d99e3"],
Cell[585185, 10728, 199, 3, 32, "Output",ExpressionUUID->"27b513a0-d5f3-47c2-9f67-2f07e23f1911"],
Cell[585387, 10733, 200, 3, 32, "Output",ExpressionUUID->"37e7576f-f367-44b9-a373-afd072904c72"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[585636, 10742, 172, 3, 45, "Subsubsection",ExpressionUUID->"f608f8f9-c896-4fe2-b66c-d85fe62f2790"],
Cell[CellGroupData[{
Cell[585833, 10749, 1465, 36, 28, "Input",ExpressionUUID->"8ddbc180-26d8-42b7-b38d-76428d09f635"],
Cell[587301, 10787, 7684, 108, 86, "Message",ExpressionUUID->"8e9222af-4304-4895-9f54-0f635660fa2a"],
Cell[594988, 10897, 7681, 108, 86, "Message",ExpressionUUID->"d516726b-a22a-43fc-8dc8-9d7ae2c1e093"],
Cell[602672, 11007, 7684, 108, 86, "Message",ExpressionUUID->"5f57883a-1337-4e55-94f9-fb023bea2207"],
Cell[610359, 11117, 455, 10, 28, "Message",ExpressionUUID->"74503eae-0c84-4118-b5bb-ac5be86e60ae"],
Cell[610817, 11129, 1847, 41, 331, "Output",ExpressionUUID->"5ffd3269-bdd5-4078-95d5-59b8eee8fbac"]
}, Open  ]],
Cell[CellGroupData[{
Cell[612701, 11175, 821, 24, 48, "Input",ExpressionUUID->"0e8b5099-4c00-4df7-86d2-2ee024d90a3e"],
Cell[613525, 11201, 551, 9, 32, "Output",ExpressionUUID->"e551ac73-4a2b-4323-866a-b28ec1621481"],
Cell[614079, 11212, 588, 10, 32, "Output",ExpressionUUID->"9d045a14-350b-4413-87b0-431fd79222c8"]
}, Open  ]],
Cell[614682, 11225, 542, 13, 67, "Input",ExpressionUUID->"f2bbe875-a3cf-498b-9715-8d89d1e593c9"],
Cell[615227, 11240, 449, 10, 48, "Input",ExpressionUUID->"e0de8d14-3534-4c64-975b-8622600e220b"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

